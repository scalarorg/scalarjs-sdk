syntax = "proto3";
package scalar.chains.v1beta1;

import "gogoproto/gogo.proto";

import "scalar/utils/v1beta1/queuer.proto";
import "scalar/chains/v1beta1/params.proto";
import "scalar/chains/v1beta1/types.proto";
import "scalar/chains/v1beta1/events.proto";

option go_package = "github.com/scalarorg/scalar-core/x/chains/types";

option (gogoproto.goproto_getters_all) = false;

message GenesisState {
  message Chain {
    Params params = 1 [ (gogoproto.nullable) = false ];

    scalar.utils.v1beta1.QueueState command_queue = 2
        [ (gogoproto.nullable) = false ];

    repeated StakingTx confirmed_staking_txs = 3
        [ (gogoproto.nullable) = false ];

    repeated CommandBatchMetadata command_batches = 4
        [ (gogoproto.nullable) = false ];

    repeated Event events = 5 [ (gogoproto.nullable) = false ];

    scalar.utils.v1beta1.QueueState confirmed_event_queue = 6
        [ (gogoproto.nullable) = false ];
  }

  repeated Chain chains = 1 [ (gogoproto.nullable) = false ];
}