syntax = "proto3";
package scalar.tss.v1beta1;

import "cosmos/crypto/multisig/keys.proto";
import "gogoproto/gogo.proto";
import "scalar/permission/exported/v1beta1/types.proto";
import "scalar/tss/exported/v1beta1/types.proto";
import "scalar/tss/tofnd/v1beta1/tofnd.proto";
import "scalar/tss/v1beta1/types.proto";
import "scalar/vote/exported/v1beta1/types.proto";

option go_package = "github.com/scalarorg/scalar-core/x/tss/types";
option (gogoproto.goproto_getters_all) = false;

// StartKeygenRequest indicate the start of keygen
message StartKeygenRequest {
  option (scalar.permission.exported.v1beta1.permission_role) = ROLE_CHAIN_MANAGEMENT;
  string sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  tss.v1beta1.KeyInfo key_info = 2 [(gogoproto.nullable) = false];
}

message StartKeygenResponse {}

message RotateKeyRequest {
  option (scalar.permission.exported.v1beta1.permission_role) = ROLE_CHAIN_MANAGEMENT;
  bytes sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  string chain = 2 [(gogoproto.casttype) = "github.com/scalarorg/scalar-core/x/nexus/exported.ChainName"];
  tss.exported.v1beta1.KeyRole key_role = 3;
  string key_id = 4 [
    (gogoproto.customname) = "KeyID",
    (gogoproto.casttype) = "github.com/scalarorg/scalar-core/x/tss/exported.KeyID"
  ];
}

message RotateKeyResponse {}

// ProcessKeygenTrafficRequest protocol message
message ProcessKeygenTrafficRequest {
  option (scalar.permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  bytes sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  string session_id = 2 [(gogoproto.customname) = "SessionID"];
  tofnd.TrafficOut payload = 3 [(gogoproto.nullable) = false];
}

message ProcessKeygenTrafficResponse {}

// ProcessSignTrafficRequest protocol message
message ProcessSignTrafficRequest {
  option (scalar.permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  bytes sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  string session_id = 2 [(gogoproto.customname) = "SessionID"];
  tofnd.TrafficOut payload = 3 [(gogoproto.nullable) = false];
}

message ProcessSignTrafficResponse {}

// VotePubKeyRequest represents the message to vote on a public key
message VotePubKeyRequest {
  option (scalar.permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  bytes sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  vote.exported.v1beta1.PollKey poll_key = 2 [(gogoproto.nullable) = false];
  tofnd.MessageOut.KeygenResult result = 3 [(gogoproto.nullable) = false];
}
message VotePubKeyResponse {
  string log = 1;
}

// VoteSigRequest represents a message to vote for a signature
message VoteSigRequest {
  option (scalar.permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  bytes sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  vote.exported.v1beta1.PollKey poll_key = 2 [(gogoproto.nullable) = false];
  tofnd.MessageOut.SignResult result = 3 [(gogoproto.nullable) = false];
}

message VoteSigResponse {
  string log = 1;
}

message HeartBeatRequest {
  option (scalar.permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  bytes sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];

  // Deprecated: this field will be removed in the next release
  repeated string key_ids = 2 [
    (gogoproto.customname) = "KeyIDs",
    (gogoproto.casttype) = "github.com/scalarorg/scalar-core/x/tss/exported.KeyID",
    deprecated = true
  ]; // key_ids was deprecated in v1.0
}

message HeartBeatResponse {}

message RegisterExternalKeysRequest {
  option (scalar.permission.exported.v1beta1.permission_role) = ROLE_CHAIN_MANAGEMENT;
  message ExternalKey {
    string id = 1 [
      (gogoproto.customname) = "ID",
      (gogoproto.casttype) = "github.com/scalarorg/scalar-core/x/tss/exported.KeyID"
    ];
    bytes pub_key = 2;
  }

  bytes sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  string chain = 2 [(gogoproto.casttype) = "github.com/scalarorg/scalar-core/x/nexus/exported.ChainName"];
  repeated ExternalKey external_keys = 3 [(gogoproto.nullable) = false];
}

message RegisterExternalKeysResponse {}

message SubmitMultisigPubKeysRequest {
  option (scalar.permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  bytes sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  string key_id = 2 [
    (gogoproto.customname) = "KeyID",
    (gogoproto.casttype) = "github.com/scalarorg/scalar-core/x/tss/exported.KeyID"
  ];
  repeated exported.v1beta1.SigKeyPair sig_key_pairs = 3 [(gogoproto.nullable) = false];
}

message SubmitMultisigPubKeysResponse {}

message SubmitMultisigSignaturesRequest {
  option (scalar.permission.exported.v1beta1.permission_role) = ROLE_UNRESTRICTED;
  bytes sender = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
  string sig_id = 2 [(gogoproto.customname) = "SigID"];

  repeated bytes signatures = 3;
}

message SubmitMultisigSignaturesResponse {}
