// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "ibc/applications/transfer/v2/packet.proto" (package "ibc.applications.transfer.v2", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * FungibleTokenPacketData defines a struct for the packet payload
 * See FungibleTokenPacketData spec:
 * https://github.com/cosmos/ibc/tree/master/spec/app/ics-020-fungible-token-transfer#data-structures
 *
 * @generated from protobuf message ibc.applications.transfer.v2.FungibleTokenPacketData
 */
export interface FungibleTokenPacketData {
    /**
     * the token denomination to be transferred
     *
     * @generated from protobuf field: string denom = 1;
     */
    denom: string;
    /**
     * the token amount to be transferred
     *
     * @generated from protobuf field: string amount = 2;
     */
    amount: string;
    /**
     * the sender address
     *
     * @generated from protobuf field: string sender = 3;
     */
    sender: string;
    /**
     * the recipient address on the destination chain
     *
     * @generated from protobuf field: string receiver = 4;
     */
    receiver: string;
    /**
     * optional memo
     *
     * @generated from protobuf field: string memo = 5;
     */
    memo: string;
}
declare class FungibleTokenPacketData$Type extends MessageType<FungibleTokenPacketData> {
    constructor();
    create(value?: PartialMessage<FungibleTokenPacketData>): FungibleTokenPacketData;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FungibleTokenPacketData): FungibleTokenPacketData;
    internalBinaryWrite(message: FungibleTokenPacketData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.applications.transfer.v2.FungibleTokenPacketData
 */
export declare const FungibleTokenPacketData: FungibleTokenPacketData$Type;
export {};
