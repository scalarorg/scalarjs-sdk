// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "ibc/applications/transfer/v1/query.proto" (package "ibc.applications.transfer.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { QueryEscrowAddressResponse } from "./query";
import type { QueryEscrowAddressRequest } from "./query";
import type { QueryDenomHashResponse } from "./query";
import type { QueryDenomHashRequest } from "./query";
import type { QueryParamsResponse } from "./query";
import type { QueryParamsRequest } from "./query";
import type { QueryDenomTraceResponse } from "./query";
import type { QueryDenomTraceRequest } from "./query";
import type { QueryDenomTracesResponse } from "./query";
import type { QueryDenomTracesRequest } from "./query";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Query provides defines the gRPC querier service.
 *
 * @generated from protobuf service ibc.applications.transfer.v1.Query
 */
export interface IQueryClient {
    /**
     * DenomTraces queries all denomination traces.
     *
     * @generated from protobuf rpc: DenomTraces(ibc.applications.transfer.v1.QueryDenomTracesRequest) returns (ibc.applications.transfer.v1.QueryDenomTracesResponse);
     */
    denomTraces(input: QueryDenomTracesRequest, options?: RpcOptions): UnaryCall<QueryDenomTracesRequest, QueryDenomTracesResponse>;
    /**
     * DenomTrace queries a denomination trace information.
     *
     * @generated from protobuf rpc: DenomTrace(ibc.applications.transfer.v1.QueryDenomTraceRequest) returns (ibc.applications.transfer.v1.QueryDenomTraceResponse);
     */
    denomTrace(input: QueryDenomTraceRequest, options?: RpcOptions): UnaryCall<QueryDenomTraceRequest, QueryDenomTraceResponse>;
    /**
     * Params queries all parameters of the ibc-transfer module.
     *
     * @generated from protobuf rpc: Params(ibc.applications.transfer.v1.QueryParamsRequest) returns (ibc.applications.transfer.v1.QueryParamsResponse);
     */
    params(input: QueryParamsRequest, options?: RpcOptions): UnaryCall<QueryParamsRequest, QueryParamsResponse>;
    /**
     * DenomHash queries a denomination hash information.
     *
     * @generated from protobuf rpc: DenomHash(ibc.applications.transfer.v1.QueryDenomHashRequest) returns (ibc.applications.transfer.v1.QueryDenomHashResponse);
     */
    denomHash(input: QueryDenomHashRequest, options?: RpcOptions): UnaryCall<QueryDenomHashRequest, QueryDenomHashResponse>;
    /**
     * EscrowAddress returns the escrow address for a particular port and channel id.
     *
     * @generated from protobuf rpc: EscrowAddress(ibc.applications.transfer.v1.QueryEscrowAddressRequest) returns (ibc.applications.transfer.v1.QueryEscrowAddressResponse);
     */
    escrowAddress(input: QueryEscrowAddressRequest, options?: RpcOptions): UnaryCall<QueryEscrowAddressRequest, QueryEscrowAddressResponse>;
}
/**
 * Query provides defines the gRPC querier service.
 *
 * @generated from protobuf service ibc.applications.transfer.v1.Query
 */
export declare class QueryClient implements IQueryClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * DenomTraces queries all denomination traces.
     *
     * @generated from protobuf rpc: DenomTraces(ibc.applications.transfer.v1.QueryDenomTracesRequest) returns (ibc.applications.transfer.v1.QueryDenomTracesResponse);
     */
    denomTraces(input: QueryDenomTracesRequest, options?: RpcOptions): UnaryCall<QueryDenomTracesRequest, QueryDenomTracesResponse>;
    /**
     * DenomTrace queries a denomination trace information.
     *
     * @generated from protobuf rpc: DenomTrace(ibc.applications.transfer.v1.QueryDenomTraceRequest) returns (ibc.applications.transfer.v1.QueryDenomTraceResponse);
     */
    denomTrace(input: QueryDenomTraceRequest, options?: RpcOptions): UnaryCall<QueryDenomTraceRequest, QueryDenomTraceResponse>;
    /**
     * Params queries all parameters of the ibc-transfer module.
     *
     * @generated from protobuf rpc: Params(ibc.applications.transfer.v1.QueryParamsRequest) returns (ibc.applications.transfer.v1.QueryParamsResponse);
     */
    params(input: QueryParamsRequest, options?: RpcOptions): UnaryCall<QueryParamsRequest, QueryParamsResponse>;
    /**
     * DenomHash queries a denomination hash information.
     *
     * @generated from protobuf rpc: DenomHash(ibc.applications.transfer.v1.QueryDenomHashRequest) returns (ibc.applications.transfer.v1.QueryDenomHashResponse);
     */
    denomHash(input: QueryDenomHashRequest, options?: RpcOptions): UnaryCall<QueryDenomHashRequest, QueryDenomHashResponse>;
    /**
     * EscrowAddress returns the escrow address for a particular port and channel id.
     *
     * @generated from protobuf rpc: EscrowAddress(ibc.applications.transfer.v1.QueryEscrowAddressRequest) returns (ibc.applications.transfer.v1.QueryEscrowAddressResponse);
     */
    escrowAddress(input: QueryEscrowAddressRequest, options?: RpcOptions): UnaryCall<QueryEscrowAddressRequest, QueryEscrowAddressResponse>;
}
