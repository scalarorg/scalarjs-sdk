// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "ibc/applications/transfer/v1/query.proto" (package "ibc.applications.transfer.v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Params } from "./transfer";
import { PageResponse } from "../../../../cosmos/base/query/v1beta1/pagination";
import { PageRequest } from "../../../../cosmos/base/query/v1beta1/pagination";
import { DenomTrace } from "./transfer";
/**
 * QueryDenomTraceRequest is the request type for the Query/DenomTrace RPC
 * method
 *
 * @generated from protobuf message ibc.applications.transfer.v1.QueryDenomTraceRequest
 */
export interface QueryDenomTraceRequest {
    /**
     * hash (in hex format) or denom (full denom with ibc prefix) of the denomination trace information.
     *
     * @generated from protobuf field: string hash = 1;
     */
    hash: string;
}
/**
 * QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC
 * method.
 *
 * @generated from protobuf message ibc.applications.transfer.v1.QueryDenomTraceResponse
 */
export interface QueryDenomTraceResponse {
    /**
     * denom_trace returns the requested denomination trace information.
     *
     * @generated from protobuf field: ibc.applications.transfer.v1.DenomTrace denom_trace = 1;
     */
    denomTrace?: DenomTrace;
}
/**
 * QueryConnectionsRequest is the request type for the Query/DenomTraces RPC
 * method
 *
 * @generated from protobuf message ibc.applications.transfer.v1.QueryDenomTracesRequest
 */
export interface QueryDenomTracesRequest {
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
     */
    pagination?: PageRequest;
}
/**
 * QueryConnectionsResponse is the response type for the Query/DenomTraces RPC
 * method.
 *
 * @generated from protobuf message ibc.applications.transfer.v1.QueryDenomTracesResponse
 */
export interface QueryDenomTracesResponse {
    /**
     * denom_traces returns all denominations trace information.
     *
     * @generated from protobuf field: repeated ibc.applications.transfer.v1.DenomTrace denom_traces = 1;
     */
    denomTraces: DenomTrace[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from protobuf message ibc.applications.transfer.v1.QueryParamsRequest
 */
export interface QueryParamsRequest {
}
/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from protobuf message ibc.applications.transfer.v1.QueryParamsResponse
 */
export interface QueryParamsResponse {
    /**
     * params defines the parameters of the module.
     *
     * @generated from protobuf field: ibc.applications.transfer.v1.Params params = 1;
     */
    params?: Params;
}
/**
 * QueryDenomHashRequest is the request type for the Query/DenomHash RPC
 * method
 *
 * @generated from protobuf message ibc.applications.transfer.v1.QueryDenomHashRequest
 */
export interface QueryDenomHashRequest {
    /**
     * The denomination trace ([port_id]/[channel_id])+/[denom]
     *
     * @generated from protobuf field: string trace = 1;
     */
    trace: string;
}
/**
 * QueryDenomHashResponse is the response type for the Query/DenomHash RPC
 * method.
 *
 * @generated from protobuf message ibc.applications.transfer.v1.QueryDenomHashResponse
 */
export interface QueryDenomHashResponse {
    /**
     * hash (in hex format) of the denomination trace information.
     *
     * @generated from protobuf field: string hash = 1;
     */
    hash: string;
}
/**
 * QueryEscrowAddressRequest is the request type for the EscrowAddress RPC method.
 *
 * @generated from protobuf message ibc.applications.transfer.v1.QueryEscrowAddressRequest
 */
export interface QueryEscrowAddressRequest {
    /**
     * unique port identifier
     *
     * @generated from protobuf field: string port_id = 1;
     */
    portId: string;
    /**
     * unique channel identifier
     *
     * @generated from protobuf field: string channel_id = 2;
     */
    channelId: string;
}
/**
 * QueryEscrowAddressResponse is the response type of the EscrowAddress RPC method.
 *
 * @generated from protobuf message ibc.applications.transfer.v1.QueryEscrowAddressResponse
 */
export interface QueryEscrowAddressResponse {
    /**
     * the escrow account address
     *
     * @generated from protobuf field: string escrow_address = 1;
     */
    escrowAddress: string;
}
declare class QueryDenomTraceRequest$Type extends MessageType<QueryDenomTraceRequest> {
    constructor();
    create(value?: PartialMessage<QueryDenomTraceRequest>): QueryDenomTraceRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDenomTraceRequest): QueryDenomTraceRequest;
    internalBinaryWrite(message: QueryDenomTraceRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.applications.transfer.v1.QueryDenomTraceRequest
 */
export declare const QueryDenomTraceRequest: QueryDenomTraceRequest$Type;
declare class QueryDenomTraceResponse$Type extends MessageType<QueryDenomTraceResponse> {
    constructor();
    create(value?: PartialMessage<QueryDenomTraceResponse>): QueryDenomTraceResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDenomTraceResponse): QueryDenomTraceResponse;
    internalBinaryWrite(message: QueryDenomTraceResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.applications.transfer.v1.QueryDenomTraceResponse
 */
export declare const QueryDenomTraceResponse: QueryDenomTraceResponse$Type;
declare class QueryDenomTracesRequest$Type extends MessageType<QueryDenomTracesRequest> {
    constructor();
    create(value?: PartialMessage<QueryDenomTracesRequest>): QueryDenomTracesRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDenomTracesRequest): QueryDenomTracesRequest;
    internalBinaryWrite(message: QueryDenomTracesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.applications.transfer.v1.QueryDenomTracesRequest
 */
export declare const QueryDenomTracesRequest: QueryDenomTracesRequest$Type;
declare class QueryDenomTracesResponse$Type extends MessageType<QueryDenomTracesResponse> {
    constructor();
    create(value?: PartialMessage<QueryDenomTracesResponse>): QueryDenomTracesResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDenomTracesResponse): QueryDenomTracesResponse;
    internalBinaryWrite(message: QueryDenomTracesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.applications.transfer.v1.QueryDenomTracesResponse
 */
export declare const QueryDenomTracesResponse: QueryDenomTracesResponse$Type;
declare class QueryParamsRequest$Type extends MessageType<QueryParamsRequest> {
    constructor();
    create(value?: PartialMessage<QueryParamsRequest>): QueryParamsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryParamsRequest): QueryParamsRequest;
    internalBinaryWrite(message: QueryParamsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.applications.transfer.v1.QueryParamsRequest
 */
export declare const QueryParamsRequest: QueryParamsRequest$Type;
declare class QueryParamsResponse$Type extends MessageType<QueryParamsResponse> {
    constructor();
    create(value?: PartialMessage<QueryParamsResponse>): QueryParamsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryParamsResponse): QueryParamsResponse;
    internalBinaryWrite(message: QueryParamsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.applications.transfer.v1.QueryParamsResponse
 */
export declare const QueryParamsResponse: QueryParamsResponse$Type;
declare class QueryDenomHashRequest$Type extends MessageType<QueryDenomHashRequest> {
    constructor();
    create(value?: PartialMessage<QueryDenomHashRequest>): QueryDenomHashRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDenomHashRequest): QueryDenomHashRequest;
    internalBinaryWrite(message: QueryDenomHashRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.applications.transfer.v1.QueryDenomHashRequest
 */
export declare const QueryDenomHashRequest: QueryDenomHashRequest$Type;
declare class QueryDenomHashResponse$Type extends MessageType<QueryDenomHashResponse> {
    constructor();
    create(value?: PartialMessage<QueryDenomHashResponse>): QueryDenomHashResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDenomHashResponse): QueryDenomHashResponse;
    internalBinaryWrite(message: QueryDenomHashResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.applications.transfer.v1.QueryDenomHashResponse
 */
export declare const QueryDenomHashResponse: QueryDenomHashResponse$Type;
declare class QueryEscrowAddressRequest$Type extends MessageType<QueryEscrowAddressRequest> {
    constructor();
    create(value?: PartialMessage<QueryEscrowAddressRequest>): QueryEscrowAddressRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryEscrowAddressRequest): QueryEscrowAddressRequest;
    internalBinaryWrite(message: QueryEscrowAddressRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.applications.transfer.v1.QueryEscrowAddressRequest
 */
export declare const QueryEscrowAddressRequest: QueryEscrowAddressRequest$Type;
declare class QueryEscrowAddressResponse$Type extends MessageType<QueryEscrowAddressResponse> {
    constructor();
    create(value?: PartialMessage<QueryEscrowAddressResponse>): QueryEscrowAddressResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryEscrowAddressResponse): QueryEscrowAddressResponse;
    internalBinaryWrite(message: QueryEscrowAddressResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.applications.transfer.v1.QueryEscrowAddressResponse
 */
export declare const QueryEscrowAddressResponse: QueryEscrowAddressResponse$Type;
/**
 * @generated ServiceType for protobuf service ibc.applications.transfer.v1.Query
 */
export declare const Query: any;
export {};
