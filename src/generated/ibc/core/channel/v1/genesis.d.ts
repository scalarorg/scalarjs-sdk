// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "ibc/core/channel/v1/genesis.proto" (package "ibc.core.channel.v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { PacketState } from "./channel";
import { IdentifiedChannel } from "./channel";
/**
 * GenesisState defines the ibc channel submodule's genesis state.
 *
 * @generated from protobuf message ibc.core.channel.v1.GenesisState
 */
export interface GenesisState {
    /**
     * @generated from protobuf field: repeated ibc.core.channel.v1.IdentifiedChannel channels = 1;
     */
    channels: IdentifiedChannel[];
    /**
     * @generated from protobuf field: repeated ibc.core.channel.v1.PacketState acknowledgements = 2;
     */
    acknowledgements: PacketState[];
    /**
     * @generated from protobuf field: repeated ibc.core.channel.v1.PacketState commitments = 3;
     */
    commitments: PacketState[];
    /**
     * @generated from protobuf field: repeated ibc.core.channel.v1.PacketState receipts = 4;
     */
    receipts: PacketState[];
    /**
     * @generated from protobuf field: repeated ibc.core.channel.v1.PacketSequence send_sequences = 5;
     */
    sendSequences: PacketSequence[];
    /**
     * @generated from protobuf field: repeated ibc.core.channel.v1.PacketSequence recv_sequences = 6;
     */
    recvSequences: PacketSequence[];
    /**
     * @generated from protobuf field: repeated ibc.core.channel.v1.PacketSequence ack_sequences = 7;
     */
    ackSequences: PacketSequence[];
    /**
     * the sequence for the next generated channel identifier
     *
     * @generated from protobuf field: uint64 next_channel_sequence = 8;
     */
    nextChannelSequence: string;
}
/**
 * PacketSequence defines the genesis type necessary to retrieve and store
 * next send and receive sequences.
 *
 * @generated from protobuf message ibc.core.channel.v1.PacketSequence
 */
export interface PacketSequence {
    /**
     * @generated from protobuf field: string port_id = 1;
     */
    portId: string;
    /**
     * @generated from protobuf field: string channel_id = 2;
     */
    channelId: string;
    /**
     * @generated from protobuf field: uint64 sequence = 3;
     */
    sequence: string;
}
declare class GenesisState$Type extends MessageType<GenesisState> {
    constructor();
    create(value?: PartialMessage<GenesisState>): GenesisState;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenesisState): GenesisState;
    internalBinaryWrite(message: GenesisState, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.channel.v1.GenesisState
 */
export declare const GenesisState: GenesisState$Type;
declare class PacketSequence$Type extends MessageType<PacketSequence> {
    constructor();
    create(value?: PartialMessage<PacketSequence>): PacketSequence;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PacketSequence): PacketSequence;
    internalBinaryWrite(message: PacketSequence, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.channel.v1.PacketSequence
 */
export declare const PacketSequence: PacketSequence$Type;
export {};
