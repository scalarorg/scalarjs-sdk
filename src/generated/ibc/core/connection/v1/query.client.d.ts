// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "ibc/core/connection/v1/query.proto" (package "ibc.core.connection.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { QueryConnectionConsensusStateResponse } from "./query";
import type { QueryConnectionConsensusStateRequest } from "./query";
import type { QueryConnectionClientStateResponse } from "./query";
import type { QueryConnectionClientStateRequest } from "./query";
import type { QueryClientConnectionsResponse } from "./query";
import type { QueryClientConnectionsRequest } from "./query";
import type { QueryConnectionsResponse } from "./query";
import type { QueryConnectionsRequest } from "./query";
import type { QueryConnectionResponse } from "./query";
import type { QueryConnectionRequest } from "./query";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Query provides defines the gRPC querier service
 *
 * @generated from protobuf service ibc.core.connection.v1.Query
 */
export interface IQueryClient {
    /**
     * Connection queries an IBC connection end.
     *
     * @generated from protobuf rpc: Connection(ibc.core.connection.v1.QueryConnectionRequest) returns (ibc.core.connection.v1.QueryConnectionResponse);
     */
    connection(input: QueryConnectionRequest, options?: RpcOptions): UnaryCall<QueryConnectionRequest, QueryConnectionResponse>;
    /**
     * Connections queries all the IBC connections of a chain.
     *
     * @generated from protobuf rpc: Connections(ibc.core.connection.v1.QueryConnectionsRequest) returns (ibc.core.connection.v1.QueryConnectionsResponse);
     */
    connections(input: QueryConnectionsRequest, options?: RpcOptions): UnaryCall<QueryConnectionsRequest, QueryConnectionsResponse>;
    /**
     * ClientConnections queries the connection paths associated with a client
     * state.
     *
     * @generated from protobuf rpc: ClientConnections(ibc.core.connection.v1.QueryClientConnectionsRequest) returns (ibc.core.connection.v1.QueryClientConnectionsResponse);
     */
    clientConnections(input: QueryClientConnectionsRequest, options?: RpcOptions): UnaryCall<QueryClientConnectionsRequest, QueryClientConnectionsResponse>;
    /**
     * ConnectionClientState queries the client state associated with the
     * connection.
     *
     * @generated from protobuf rpc: ConnectionClientState(ibc.core.connection.v1.QueryConnectionClientStateRequest) returns (ibc.core.connection.v1.QueryConnectionClientStateResponse);
     */
    connectionClientState(input: QueryConnectionClientStateRequest, options?: RpcOptions): UnaryCall<QueryConnectionClientStateRequest, QueryConnectionClientStateResponse>;
    /**
     * ConnectionConsensusState queries the consensus state associated with the
     * connection.
     *
     * @generated from protobuf rpc: ConnectionConsensusState(ibc.core.connection.v1.QueryConnectionConsensusStateRequest) returns (ibc.core.connection.v1.QueryConnectionConsensusStateResponse);
     */
    connectionConsensusState(input: QueryConnectionConsensusStateRequest, options?: RpcOptions): UnaryCall<QueryConnectionConsensusStateRequest, QueryConnectionConsensusStateResponse>;
}
/**
 * Query provides defines the gRPC querier service
 *
 * @generated from protobuf service ibc.core.connection.v1.Query
 */
export declare class QueryClient implements IQueryClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * Connection queries an IBC connection end.
     *
     * @generated from protobuf rpc: Connection(ibc.core.connection.v1.QueryConnectionRequest) returns (ibc.core.connection.v1.QueryConnectionResponse);
     */
    connection(input: QueryConnectionRequest, options?: RpcOptions): UnaryCall<QueryConnectionRequest, QueryConnectionResponse>;
    /**
     * Connections queries all the IBC connections of a chain.
     *
     * @generated from protobuf rpc: Connections(ibc.core.connection.v1.QueryConnectionsRequest) returns (ibc.core.connection.v1.QueryConnectionsResponse);
     */
    connections(input: QueryConnectionsRequest, options?: RpcOptions): UnaryCall<QueryConnectionsRequest, QueryConnectionsResponse>;
    /**
     * ClientConnections queries the connection paths associated with a client
     * state.
     *
     * @generated from protobuf rpc: ClientConnections(ibc.core.connection.v1.QueryClientConnectionsRequest) returns (ibc.core.connection.v1.QueryClientConnectionsResponse);
     */
    clientConnections(input: QueryClientConnectionsRequest, options?: RpcOptions): UnaryCall<QueryClientConnectionsRequest, QueryClientConnectionsResponse>;
    /**
     * ConnectionClientState queries the client state associated with the
     * connection.
     *
     * @generated from protobuf rpc: ConnectionClientState(ibc.core.connection.v1.QueryConnectionClientStateRequest) returns (ibc.core.connection.v1.QueryConnectionClientStateResponse);
     */
    connectionClientState(input: QueryConnectionClientStateRequest, options?: RpcOptions): UnaryCall<QueryConnectionClientStateRequest, QueryConnectionClientStateResponse>;
    /**
     * ConnectionConsensusState queries the consensus state associated with the
     * connection.
     *
     * @generated from protobuf rpc: ConnectionConsensusState(ibc.core.connection.v1.QueryConnectionConsensusStateRequest) returns (ibc.core.connection.v1.QueryConnectionConsensusStateResponse);
     */
    connectionConsensusState(input: QueryConnectionConsensusStateRequest, options?: RpcOptions): UnaryCall<QueryConnectionConsensusStateRequest, QueryConnectionConsensusStateResponse>;
}
