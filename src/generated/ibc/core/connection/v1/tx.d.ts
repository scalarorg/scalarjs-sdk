// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "ibc/core/connection/v1/tx.proto" (package "ibc.core.connection.v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Height } from "../../client/v1/client";
import { Any } from "../../../../google/protobuf/any";
import { Version } from "./connection";
import { Counterparty } from "./connection";
/**
 * MsgConnectionOpenInit defines the msg sent by an account on Chain A to
 * initialize a connection with Chain B.
 *
 * @generated from protobuf message ibc.core.connection.v1.MsgConnectionOpenInit
 */
export interface MsgConnectionOpenInit {
    /**
     * @generated from protobuf field: string client_id = 1;
     */
    clientId: string;
    /**
     * @generated from protobuf field: ibc.core.connection.v1.Counterparty counterparty = 2;
     */
    counterparty?: Counterparty;
    /**
     * @generated from protobuf field: ibc.core.connection.v1.Version version = 3;
     */
    version?: Version;
    /**
     * @generated from protobuf field: uint64 delay_period = 4;
     */
    delayPeriod: string;
    /**
     * @generated from protobuf field: string signer = 5;
     */
    signer: string;
}
/**
 * MsgConnectionOpenInitResponse defines the Msg/ConnectionOpenInit response
 * type.
 *
 * @generated from protobuf message ibc.core.connection.v1.MsgConnectionOpenInitResponse
 */
export interface MsgConnectionOpenInitResponse {
}
/**
 * MsgConnectionOpenTry defines a msg sent by a Relayer to try to open a
 * connection on Chain B.
 *
 * @generated from protobuf message ibc.core.connection.v1.MsgConnectionOpenTry
 */
export interface MsgConnectionOpenTry {
    /**
     * @generated from protobuf field: string client_id = 1;
     */
    clientId: string;
    /**
     * Deprecated: this field is unused. Crossing hellos are no longer supported in core IBC.
     *
     * @deprecated
     * @generated from protobuf field: string previous_connection_id = 2 [deprecated = true];
     */
    previousConnectionId: string;
    /**
     * @generated from protobuf field: google.protobuf.Any client_state = 3;
     */
    clientState?: Any;
    /**
     * @generated from protobuf field: ibc.core.connection.v1.Counterparty counterparty = 4;
     */
    counterparty?: Counterparty;
    /**
     * @generated from protobuf field: uint64 delay_period = 5;
     */
    delayPeriod: string;
    /**
     * @generated from protobuf field: repeated ibc.core.connection.v1.Version counterparty_versions = 6;
     */
    counterpartyVersions: Version[];
    /**
     * @generated from protobuf field: ibc.core.client.v1.Height proof_height = 7;
     */
    proofHeight?: Height;
    /**
     * proof of the initialization the connection on Chain A: `UNITIALIZED ->
     * INIT`
     *
     * @generated from protobuf field: bytes proof_init = 8;
     */
    proofInit: Uint8Array;
    /**
     * proof of client state included in message
     *
     * @generated from protobuf field: bytes proof_client = 9;
     */
    proofClient: Uint8Array;
    /**
     * proof of client consensus state
     *
     * @generated from protobuf field: bytes proof_consensus = 10;
     */
    proofConsensus: Uint8Array;
    /**
     * @generated from protobuf field: ibc.core.client.v1.Height consensus_height = 11;
     */
    consensusHeight?: Height;
    /**
     * @generated from protobuf field: string signer = 12;
     */
    signer: string;
}
/**
 * MsgConnectionOpenTryResponse defines the Msg/ConnectionOpenTry response type.
 *
 * @generated from protobuf message ibc.core.connection.v1.MsgConnectionOpenTryResponse
 */
export interface MsgConnectionOpenTryResponse {
}
/**
 * MsgConnectionOpenAck defines a msg sent by a Relayer to Chain A to
 * acknowledge the change of connection state to TRYOPEN on Chain B.
 *
 * @generated from protobuf message ibc.core.connection.v1.MsgConnectionOpenAck
 */
export interface MsgConnectionOpenAck {
    /**
     * @generated from protobuf field: string connection_id = 1;
     */
    connectionId: string;
    /**
     * @generated from protobuf field: string counterparty_connection_id = 2;
     */
    counterpartyConnectionId: string;
    /**
     * @generated from protobuf field: ibc.core.connection.v1.Version version = 3;
     */
    version?: Version;
    /**
     * @generated from protobuf field: google.protobuf.Any client_state = 4;
     */
    clientState?: Any;
    /**
     * @generated from protobuf field: ibc.core.client.v1.Height proof_height = 5;
     */
    proofHeight?: Height;
    /**
     * proof of the initialization the connection on Chain B: `UNITIALIZED ->
     * TRYOPEN`
     *
     * @generated from protobuf field: bytes proof_try = 6;
     */
    proofTry: Uint8Array;
    /**
     * proof of client state included in message
     *
     * @generated from protobuf field: bytes proof_client = 7;
     */
    proofClient: Uint8Array;
    /**
     * proof of client consensus state
     *
     * @generated from protobuf field: bytes proof_consensus = 8;
     */
    proofConsensus: Uint8Array;
    /**
     * @generated from protobuf field: ibc.core.client.v1.Height consensus_height = 9;
     */
    consensusHeight?: Height;
    /**
     * @generated from protobuf field: string signer = 10;
     */
    signer: string;
}
/**
 * MsgConnectionOpenAckResponse defines the Msg/ConnectionOpenAck response type.
 *
 * @generated from protobuf message ibc.core.connection.v1.MsgConnectionOpenAckResponse
 */
export interface MsgConnectionOpenAckResponse {
}
/**
 * MsgConnectionOpenConfirm defines a msg sent by a Relayer to Chain B to
 * acknowledge the change of connection state to OPEN on Chain A.
 *
 * @generated from protobuf message ibc.core.connection.v1.MsgConnectionOpenConfirm
 */
export interface MsgConnectionOpenConfirm {
    /**
     * @generated from protobuf field: string connection_id = 1;
     */
    connectionId: string;
    /**
     * proof for the change of the connection state on Chain A: `INIT -> OPEN`
     *
     * @generated from protobuf field: bytes proof_ack = 2;
     */
    proofAck: Uint8Array;
    /**
     * @generated from protobuf field: ibc.core.client.v1.Height proof_height = 3;
     */
    proofHeight?: Height;
    /**
     * @generated from protobuf field: string signer = 4;
     */
    signer: string;
}
/**
 * MsgConnectionOpenConfirmResponse defines the Msg/ConnectionOpenConfirm
 * response type.
 *
 * @generated from protobuf message ibc.core.connection.v1.MsgConnectionOpenConfirmResponse
 */
export interface MsgConnectionOpenConfirmResponse {
}
declare class MsgConnectionOpenInit$Type extends MessageType<MsgConnectionOpenInit> {
    constructor();
    create(value?: PartialMessage<MsgConnectionOpenInit>): MsgConnectionOpenInit;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgConnectionOpenInit): MsgConnectionOpenInit;
    internalBinaryWrite(message: MsgConnectionOpenInit, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.connection.v1.MsgConnectionOpenInit
 */
export declare const MsgConnectionOpenInit: MsgConnectionOpenInit$Type;
declare class MsgConnectionOpenInitResponse$Type extends MessageType<MsgConnectionOpenInitResponse> {
    constructor();
    create(value?: PartialMessage<MsgConnectionOpenInitResponse>): MsgConnectionOpenInitResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgConnectionOpenInitResponse): MsgConnectionOpenInitResponse;
    internalBinaryWrite(message: MsgConnectionOpenInitResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.connection.v1.MsgConnectionOpenInitResponse
 */
export declare const MsgConnectionOpenInitResponse: MsgConnectionOpenInitResponse$Type;
declare class MsgConnectionOpenTry$Type extends MessageType<MsgConnectionOpenTry> {
    constructor();
    create(value?: PartialMessage<MsgConnectionOpenTry>): MsgConnectionOpenTry;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgConnectionOpenTry): MsgConnectionOpenTry;
    internalBinaryWrite(message: MsgConnectionOpenTry, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.connection.v1.MsgConnectionOpenTry
 */
export declare const MsgConnectionOpenTry: MsgConnectionOpenTry$Type;
declare class MsgConnectionOpenTryResponse$Type extends MessageType<MsgConnectionOpenTryResponse> {
    constructor();
    create(value?: PartialMessage<MsgConnectionOpenTryResponse>): MsgConnectionOpenTryResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgConnectionOpenTryResponse): MsgConnectionOpenTryResponse;
    internalBinaryWrite(message: MsgConnectionOpenTryResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.connection.v1.MsgConnectionOpenTryResponse
 */
export declare const MsgConnectionOpenTryResponse: MsgConnectionOpenTryResponse$Type;
declare class MsgConnectionOpenAck$Type extends MessageType<MsgConnectionOpenAck> {
    constructor();
    create(value?: PartialMessage<MsgConnectionOpenAck>): MsgConnectionOpenAck;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgConnectionOpenAck): MsgConnectionOpenAck;
    internalBinaryWrite(message: MsgConnectionOpenAck, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.connection.v1.MsgConnectionOpenAck
 */
export declare const MsgConnectionOpenAck: MsgConnectionOpenAck$Type;
declare class MsgConnectionOpenAckResponse$Type extends MessageType<MsgConnectionOpenAckResponse> {
    constructor();
    create(value?: PartialMessage<MsgConnectionOpenAckResponse>): MsgConnectionOpenAckResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgConnectionOpenAckResponse): MsgConnectionOpenAckResponse;
    internalBinaryWrite(message: MsgConnectionOpenAckResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.connection.v1.MsgConnectionOpenAckResponse
 */
export declare const MsgConnectionOpenAckResponse: MsgConnectionOpenAckResponse$Type;
declare class MsgConnectionOpenConfirm$Type extends MessageType<MsgConnectionOpenConfirm> {
    constructor();
    create(value?: PartialMessage<MsgConnectionOpenConfirm>): MsgConnectionOpenConfirm;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgConnectionOpenConfirm): MsgConnectionOpenConfirm;
    internalBinaryWrite(message: MsgConnectionOpenConfirm, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.connection.v1.MsgConnectionOpenConfirm
 */
export declare const MsgConnectionOpenConfirm: MsgConnectionOpenConfirm$Type;
declare class MsgConnectionOpenConfirmResponse$Type extends MessageType<MsgConnectionOpenConfirmResponse> {
    constructor();
    create(value?: PartialMessage<MsgConnectionOpenConfirmResponse>): MsgConnectionOpenConfirmResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgConnectionOpenConfirmResponse): MsgConnectionOpenConfirmResponse;
    internalBinaryWrite(message: MsgConnectionOpenConfirmResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.connection.v1.MsgConnectionOpenConfirmResponse
 */
export declare const MsgConnectionOpenConfirmResponse: MsgConnectionOpenConfirmResponse$Type;
/**
 * @generated ServiceType for protobuf service ibc.core.connection.v1.Msg
 */
export declare const Msg: any;
export {};
