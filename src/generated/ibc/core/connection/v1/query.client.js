// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "ibc/core/connection/v1/query.proto" (package "ibc.core.connection.v1", syntax proto3)
// tslint:disable
import { Query } from "./query";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
/**
 * Query provides defines the gRPC querier service
 *
 * @generated from protobuf service ibc.core.connection.v1.Query
 */
export class QueryClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = Query.typeName;
        this.methods = Query.methods;
        this.options = Query.options;
    }
    /**
     * Connection queries an IBC connection end.
     *
     * @generated from protobuf rpc: Connection(ibc.core.connection.v1.QueryConnectionRequest) returns (ibc.core.connection.v1.QueryConnectionResponse);
     */
    connection(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * Connections queries all the IBC connections of a chain.
     *
     * @generated from protobuf rpc: Connections(ibc.core.connection.v1.QueryConnectionsRequest) returns (ibc.core.connection.v1.QueryConnectionsResponse);
     */
    connections(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * ClientConnections queries the connection paths associated with a client
     * state.
     *
     * @generated from protobuf rpc: ClientConnections(ibc.core.connection.v1.QueryClientConnectionsRequest) returns (ibc.core.connection.v1.QueryClientConnectionsResponse);
     */
    clientConnections(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * ConnectionClientState queries the client state associated with the
     * connection.
     *
     * @generated from protobuf rpc: ConnectionClientState(ibc.core.connection.v1.QueryConnectionClientStateRequest) returns (ibc.core.connection.v1.QueryConnectionClientStateResponse);
     */
    connectionClientState(input, options) {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * ConnectionConsensusState queries the consensus state associated with the
     * connection.
     *
     * @generated from protobuf rpc: ConnectionConsensusState(ibc.core.connection.v1.QueryConnectionConsensusStateRequest) returns (ibc.core.connection.v1.QueryConnectionConsensusStateResponse);
     */
    connectionConsensusState(input, options) {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
}
