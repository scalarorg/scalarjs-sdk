// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "ibc/core/client/v1/query.proto" (package "ibc.core.client.v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Params } from "./client";
import { ConsensusStateWithHeight } from "./client";
import { PageResponse } from "../../../../cosmos/base/query/v1beta1/pagination";
import { IdentifiedClientState } from "./client";
import { PageRequest } from "../../../../cosmos/base/query/v1beta1/pagination";
import { Height } from "./client";
import { Any } from "../../../../google/protobuf/any";
/**
 * QueryClientStateRequest is the request type for the Query/ClientState RPC
 * method
 *
 * @generated from protobuf message ibc.core.client.v1.QueryClientStateRequest
 */
export interface QueryClientStateRequest {
    /**
     * client state unique identifier
     *
     * @generated from protobuf field: string client_id = 1;
     */
    clientId: string;
}
/**
 * QueryClientStateResponse is the response type for the Query/ClientState RPC
 * method. Besides the client state, it includes a proof and the height from
 * which the proof was retrieved.
 *
 * @generated from protobuf message ibc.core.client.v1.QueryClientStateResponse
 */
export interface QueryClientStateResponse {
    /**
     * client state associated with the request identifier
     *
     * @generated from protobuf field: google.protobuf.Any client_state = 1;
     */
    clientState?: Any;
    /**
     * merkle proof of existence
     *
     * @generated from protobuf field: bytes proof = 2;
     */
    proof: Uint8Array;
    /**
     * height at which the proof was retrieved
     *
     * @generated from protobuf field: ibc.core.client.v1.Height proof_height = 3;
     */
    proofHeight?: Height;
}
/**
 * QueryClientStatesRequest is the request type for the Query/ClientStates RPC
 * method
 *
 * @generated from protobuf message ibc.core.client.v1.QueryClientStatesRequest
 */
export interface QueryClientStatesRequest {
    /**
     * pagination request
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
     */
    pagination?: PageRequest;
}
/**
 * QueryClientStatesResponse is the response type for the Query/ClientStates RPC
 * method.
 *
 * @generated from protobuf message ibc.core.client.v1.QueryClientStatesResponse
 */
export interface QueryClientStatesResponse {
    /**
     * list of stored ClientStates of the chain.
     *
     * @generated from protobuf field: repeated ibc.core.client.v1.IdentifiedClientState client_states = 1;
     */
    clientStates: IdentifiedClientState[];
    /**
     * pagination response
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryConsensusStateRequest is the request type for the Query/ConsensusState
 * RPC method. Besides the consensus state, it includes a proof and the height
 * from which the proof was retrieved.
 *
 * @generated from protobuf message ibc.core.client.v1.QueryConsensusStateRequest
 */
export interface QueryConsensusStateRequest {
    /**
     * client identifier
     *
     * @generated from protobuf field: string client_id = 1;
     */
    clientId: string;
    /**
     * consensus state revision number
     *
     * @generated from protobuf field: uint64 revision_number = 2;
     */
    revisionNumber: string;
    /**
     * consensus state revision height
     *
     * @generated from protobuf field: uint64 revision_height = 3;
     */
    revisionHeight: string;
    /**
     * latest_height overrrides the height field and queries the latest stored
     * ConsensusState
     *
     * @generated from protobuf field: bool latest_height = 4;
     */
    latestHeight: boolean;
}
/**
 * QueryConsensusStateResponse is the response type for the Query/ConsensusState
 * RPC method
 *
 * @generated from protobuf message ibc.core.client.v1.QueryConsensusStateResponse
 */
export interface QueryConsensusStateResponse {
    /**
     * consensus state associated with the client identifier at the given height
     *
     * @generated from protobuf field: google.protobuf.Any consensus_state = 1;
     */
    consensusState?: Any;
    /**
     * merkle proof of existence
     *
     * @generated from protobuf field: bytes proof = 2;
     */
    proof: Uint8Array;
    /**
     * height at which the proof was retrieved
     *
     * @generated from protobuf field: ibc.core.client.v1.Height proof_height = 3;
     */
    proofHeight?: Height;
}
/**
 * QueryConsensusStatesRequest is the request type for the Query/ConsensusStates
 * RPC method.
 *
 * @generated from protobuf message ibc.core.client.v1.QueryConsensusStatesRequest
 */
export interface QueryConsensusStatesRequest {
    /**
     * client identifier
     *
     * @generated from protobuf field: string client_id = 1;
     */
    clientId: string;
    /**
     * pagination request
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryConsensusStatesResponse is the response type for the
 * Query/ConsensusStates RPC method
 *
 * @generated from protobuf message ibc.core.client.v1.QueryConsensusStatesResponse
 */
export interface QueryConsensusStatesResponse {
    /**
     * consensus states associated with the identifier
     *
     * @generated from protobuf field: repeated ibc.core.client.v1.ConsensusStateWithHeight consensus_states = 1;
     */
    consensusStates: ConsensusStateWithHeight[];
    /**
     * pagination response
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryConsensusStateHeightsRequest is the request type for Query/ConsensusStateHeights
 * RPC method.
 *
 * @generated from protobuf message ibc.core.client.v1.QueryConsensusStateHeightsRequest
 */
export interface QueryConsensusStateHeightsRequest {
    /**
     * client identifier
     *
     * @generated from protobuf field: string client_id = 1;
     */
    clientId: string;
    /**
     * pagination request
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryConsensusStateHeightsResponse is the response type for the
 * Query/ConsensusStateHeights RPC method
 *
 * @generated from protobuf message ibc.core.client.v1.QueryConsensusStateHeightsResponse
 */
export interface QueryConsensusStateHeightsResponse {
    /**
     * consensus state heights
     *
     * @generated from protobuf field: repeated ibc.core.client.v1.Height consensus_state_heights = 1;
     */
    consensusStateHeights: Height[];
    /**
     * pagination response
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryClientStatusRequest is the request type for the Query/ClientStatus RPC
 * method
 *
 * @generated from protobuf message ibc.core.client.v1.QueryClientStatusRequest
 */
export interface QueryClientStatusRequest {
    /**
     * client unique identifier
     *
     * @generated from protobuf field: string client_id = 1;
     */
    clientId: string;
}
/**
 * QueryClientStatusResponse is the response type for the Query/ClientStatus RPC
 * method. It returns the current status of the IBC client.
 *
 * @generated from protobuf message ibc.core.client.v1.QueryClientStatusResponse
 */
export interface QueryClientStatusResponse {
    /**
     * @generated from protobuf field: string status = 1;
     */
    status: string;
}
/**
 * QueryClientParamsRequest is the request type for the Query/ClientParams RPC
 * method.
 *
 * @generated from protobuf message ibc.core.client.v1.QueryClientParamsRequest
 */
export interface QueryClientParamsRequest {
}
/**
 * QueryClientParamsResponse is the response type for the Query/ClientParams RPC
 * method.
 *
 * @generated from protobuf message ibc.core.client.v1.QueryClientParamsResponse
 */
export interface QueryClientParamsResponse {
    /**
     * params defines the parameters of the module.
     *
     * @generated from protobuf field: ibc.core.client.v1.Params params = 1;
     */
    params?: Params;
}
/**
 * QueryUpgradedClientStateRequest is the request type for the
 * Query/UpgradedClientState RPC method
 *
 * @generated from protobuf message ibc.core.client.v1.QueryUpgradedClientStateRequest
 */
export interface QueryUpgradedClientStateRequest {
}
/**
 * QueryUpgradedClientStateResponse is the response type for the
 * Query/UpgradedClientState RPC method.
 *
 * @generated from protobuf message ibc.core.client.v1.QueryUpgradedClientStateResponse
 */
export interface QueryUpgradedClientStateResponse {
    /**
     * client state associated with the request identifier
     *
     * @generated from protobuf field: google.protobuf.Any upgraded_client_state = 1;
     */
    upgradedClientState?: Any;
}
/**
 * QueryUpgradedConsensusStateRequest is the request type for the
 * Query/UpgradedConsensusState RPC method
 *
 * @generated from protobuf message ibc.core.client.v1.QueryUpgradedConsensusStateRequest
 */
export interface QueryUpgradedConsensusStateRequest {
}
/**
 * QueryUpgradedConsensusStateResponse is the response type for the
 * Query/UpgradedConsensusState RPC method.
 *
 * @generated from protobuf message ibc.core.client.v1.QueryUpgradedConsensusStateResponse
 */
export interface QueryUpgradedConsensusStateResponse {
    /**
     * Consensus state associated with the request identifier
     *
     * @generated from protobuf field: google.protobuf.Any upgraded_consensus_state = 1;
     */
    upgradedConsensusState?: Any;
}
declare class QueryClientStateRequest$Type extends MessageType<QueryClientStateRequest> {
    constructor();
    create(value?: PartialMessage<QueryClientStateRequest>): QueryClientStateRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryClientStateRequest): QueryClientStateRequest;
    internalBinaryWrite(message: QueryClientStateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryClientStateRequest
 */
export declare const QueryClientStateRequest: QueryClientStateRequest$Type;
declare class QueryClientStateResponse$Type extends MessageType<QueryClientStateResponse> {
    constructor();
    create(value?: PartialMessage<QueryClientStateResponse>): QueryClientStateResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryClientStateResponse): QueryClientStateResponse;
    internalBinaryWrite(message: QueryClientStateResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryClientStateResponse
 */
export declare const QueryClientStateResponse: QueryClientStateResponse$Type;
declare class QueryClientStatesRequest$Type extends MessageType<QueryClientStatesRequest> {
    constructor();
    create(value?: PartialMessage<QueryClientStatesRequest>): QueryClientStatesRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryClientStatesRequest): QueryClientStatesRequest;
    internalBinaryWrite(message: QueryClientStatesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryClientStatesRequest
 */
export declare const QueryClientStatesRequest: QueryClientStatesRequest$Type;
declare class QueryClientStatesResponse$Type extends MessageType<QueryClientStatesResponse> {
    constructor();
    create(value?: PartialMessage<QueryClientStatesResponse>): QueryClientStatesResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryClientStatesResponse): QueryClientStatesResponse;
    internalBinaryWrite(message: QueryClientStatesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryClientStatesResponse
 */
export declare const QueryClientStatesResponse: QueryClientStatesResponse$Type;
declare class QueryConsensusStateRequest$Type extends MessageType<QueryConsensusStateRequest> {
    constructor();
    create(value?: PartialMessage<QueryConsensusStateRequest>): QueryConsensusStateRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryConsensusStateRequest): QueryConsensusStateRequest;
    internalBinaryWrite(message: QueryConsensusStateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryConsensusStateRequest
 */
export declare const QueryConsensusStateRequest: QueryConsensusStateRequest$Type;
declare class QueryConsensusStateResponse$Type extends MessageType<QueryConsensusStateResponse> {
    constructor();
    create(value?: PartialMessage<QueryConsensusStateResponse>): QueryConsensusStateResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryConsensusStateResponse): QueryConsensusStateResponse;
    internalBinaryWrite(message: QueryConsensusStateResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryConsensusStateResponse
 */
export declare const QueryConsensusStateResponse: QueryConsensusStateResponse$Type;
declare class QueryConsensusStatesRequest$Type extends MessageType<QueryConsensusStatesRequest> {
    constructor();
    create(value?: PartialMessage<QueryConsensusStatesRequest>): QueryConsensusStatesRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryConsensusStatesRequest): QueryConsensusStatesRequest;
    internalBinaryWrite(message: QueryConsensusStatesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryConsensusStatesRequest
 */
export declare const QueryConsensusStatesRequest: QueryConsensusStatesRequest$Type;
declare class QueryConsensusStatesResponse$Type extends MessageType<QueryConsensusStatesResponse> {
    constructor();
    create(value?: PartialMessage<QueryConsensusStatesResponse>): QueryConsensusStatesResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryConsensusStatesResponse): QueryConsensusStatesResponse;
    internalBinaryWrite(message: QueryConsensusStatesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryConsensusStatesResponse
 */
export declare const QueryConsensusStatesResponse: QueryConsensusStatesResponse$Type;
declare class QueryConsensusStateHeightsRequest$Type extends MessageType<QueryConsensusStateHeightsRequest> {
    constructor();
    create(value?: PartialMessage<QueryConsensusStateHeightsRequest>): QueryConsensusStateHeightsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryConsensusStateHeightsRequest): QueryConsensusStateHeightsRequest;
    internalBinaryWrite(message: QueryConsensusStateHeightsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryConsensusStateHeightsRequest
 */
export declare const QueryConsensusStateHeightsRequest: QueryConsensusStateHeightsRequest$Type;
declare class QueryConsensusStateHeightsResponse$Type extends MessageType<QueryConsensusStateHeightsResponse> {
    constructor();
    create(value?: PartialMessage<QueryConsensusStateHeightsResponse>): QueryConsensusStateHeightsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryConsensusStateHeightsResponse): QueryConsensusStateHeightsResponse;
    internalBinaryWrite(message: QueryConsensusStateHeightsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryConsensusStateHeightsResponse
 */
export declare const QueryConsensusStateHeightsResponse: QueryConsensusStateHeightsResponse$Type;
declare class QueryClientStatusRequest$Type extends MessageType<QueryClientStatusRequest> {
    constructor();
    create(value?: PartialMessage<QueryClientStatusRequest>): QueryClientStatusRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryClientStatusRequest): QueryClientStatusRequest;
    internalBinaryWrite(message: QueryClientStatusRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryClientStatusRequest
 */
export declare const QueryClientStatusRequest: QueryClientStatusRequest$Type;
declare class QueryClientStatusResponse$Type extends MessageType<QueryClientStatusResponse> {
    constructor();
    create(value?: PartialMessage<QueryClientStatusResponse>): QueryClientStatusResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryClientStatusResponse): QueryClientStatusResponse;
    internalBinaryWrite(message: QueryClientStatusResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryClientStatusResponse
 */
export declare const QueryClientStatusResponse: QueryClientStatusResponse$Type;
declare class QueryClientParamsRequest$Type extends MessageType<QueryClientParamsRequest> {
    constructor();
    create(value?: PartialMessage<QueryClientParamsRequest>): QueryClientParamsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryClientParamsRequest): QueryClientParamsRequest;
    internalBinaryWrite(message: QueryClientParamsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryClientParamsRequest
 */
export declare const QueryClientParamsRequest: QueryClientParamsRequest$Type;
declare class QueryClientParamsResponse$Type extends MessageType<QueryClientParamsResponse> {
    constructor();
    create(value?: PartialMessage<QueryClientParamsResponse>): QueryClientParamsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryClientParamsResponse): QueryClientParamsResponse;
    internalBinaryWrite(message: QueryClientParamsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryClientParamsResponse
 */
export declare const QueryClientParamsResponse: QueryClientParamsResponse$Type;
declare class QueryUpgradedClientStateRequest$Type extends MessageType<QueryUpgradedClientStateRequest> {
    constructor();
    create(value?: PartialMessage<QueryUpgradedClientStateRequest>): QueryUpgradedClientStateRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryUpgradedClientStateRequest): QueryUpgradedClientStateRequest;
    internalBinaryWrite(message: QueryUpgradedClientStateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryUpgradedClientStateRequest
 */
export declare const QueryUpgradedClientStateRequest: QueryUpgradedClientStateRequest$Type;
declare class QueryUpgradedClientStateResponse$Type extends MessageType<QueryUpgradedClientStateResponse> {
    constructor();
    create(value?: PartialMessage<QueryUpgradedClientStateResponse>): QueryUpgradedClientStateResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryUpgradedClientStateResponse): QueryUpgradedClientStateResponse;
    internalBinaryWrite(message: QueryUpgradedClientStateResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryUpgradedClientStateResponse
 */
export declare const QueryUpgradedClientStateResponse: QueryUpgradedClientStateResponse$Type;
declare class QueryUpgradedConsensusStateRequest$Type extends MessageType<QueryUpgradedConsensusStateRequest> {
    constructor();
    create(value?: PartialMessage<QueryUpgradedConsensusStateRequest>): QueryUpgradedConsensusStateRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryUpgradedConsensusStateRequest): QueryUpgradedConsensusStateRequest;
    internalBinaryWrite(message: QueryUpgradedConsensusStateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryUpgradedConsensusStateRequest
 */
export declare const QueryUpgradedConsensusStateRequest: QueryUpgradedConsensusStateRequest$Type;
declare class QueryUpgradedConsensusStateResponse$Type extends MessageType<QueryUpgradedConsensusStateResponse> {
    constructor();
    create(value?: PartialMessage<QueryUpgradedConsensusStateResponse>): QueryUpgradedConsensusStateResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryUpgradedConsensusStateResponse): QueryUpgradedConsensusStateResponse;
    internalBinaryWrite(message: QueryUpgradedConsensusStateResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message ibc.core.client.v1.QueryUpgradedConsensusStateResponse
 */
export declare const QueryUpgradedConsensusStateResponse: QueryUpgradedConsensusStateResponse$Type;
/**
 * @generated ServiceType for protobuf service ibc.core.client.v1.Query
 */
export declare const Query: any;
export {};
