// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmwasm/wasm/v1/proposal.proto" (package "cosmwasm.wasm.v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Coin } from "../../../cosmos/base/v1beta1/coin";
import { AccessConfig } from "./types";
/**
 * StoreCodeProposal gov proposal content type to submit WASM code to the system
 *
 * @generated from protobuf message cosmwasm.wasm.v1.StoreCodeProposal
 */
export interface StoreCodeProposal {
    /**
     * Title is a short summary
     *
     * @generated from protobuf field: string title = 1;
     */
    title: string;
    /**
     * Description is a human readable text
     *
     * @generated from protobuf field: string description = 2;
     */
    description: string;
    /**
     * RunAs is the address that is passed to the contract's environment as sender
     *
     * @generated from protobuf field: string run_as = 3;
     */
    runAs: string;
    /**
     * WASMByteCode can be raw or gzip compressed
     *
     * @generated from protobuf field: bytes wasm_byte_code = 4;
     */
    wasmByteCode: Uint8Array;
    /**
     * InstantiatePermission to apply on contract creation, optional
     *
     * @generated from protobuf field: cosmwasm.wasm.v1.AccessConfig instantiate_permission = 7;
     */
    instantiatePermission?: AccessConfig;
    /**
     * UnpinCode code on upload, optional
     *
     * @generated from protobuf field: bool unpin_code = 8;
     */
    unpinCode: boolean;
    /**
     * Source is the URL where the code is hosted
     *
     * @generated from protobuf field: string source = 9;
     */
    source: string;
    /**
     * Builder is the docker image used to build the code deterministically, used
     * for smart contract verification
     *
     * @generated from protobuf field: string builder = 10;
     */
    builder: string;
    /**
     * CodeHash is the SHA256 sum of the code outputted by builder, used for smart
     * contract verification
     *
     * @generated from protobuf field: bytes code_hash = 11;
     */
    codeHash: Uint8Array;
}
/**
 * InstantiateContractProposal gov proposal content type to instantiate a
 * contract.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.InstantiateContractProposal
 */
export interface InstantiateContractProposal {
    /**
     * Title is a short summary
     *
     * @generated from protobuf field: string title = 1;
     */
    title: string;
    /**
     * Description is a human readable text
     *
     * @generated from protobuf field: string description = 2;
     */
    description: string;
    /**
     * RunAs is the address that is passed to the contract's environment as sender
     *
     * @generated from protobuf field: string run_as = 3;
     */
    runAs: string;
    /**
     * Admin is an optional address that can execute migrations
     *
     * @generated from protobuf field: string admin = 4;
     */
    admin: string;
    /**
     * CodeID is the reference to the stored WASM code
     *
     * @generated from protobuf field: uint64 code_id = 5;
     */
    codeId: string;
    /**
     * Label is optional metadata to be stored with a constract instance.
     *
     * @generated from protobuf field: string label = 6;
     */
    label: string;
    /**
     * Msg json encoded message to be passed to the contract on instantiation
     *
     * @generated from protobuf field: bytes msg = 7;
     */
    msg: Uint8Array;
    /**
     * Funds coins that are transferred to the contract on instantiation
     *
     * @generated from protobuf field: repeated cosmos.base.v1beta1.Coin funds = 8;
     */
    funds: Coin[];
}
/**
 * InstantiateContract2Proposal gov proposal content type to instantiate
 * contract 2
 *
 * @generated from protobuf message cosmwasm.wasm.v1.InstantiateContract2Proposal
 */
export interface InstantiateContract2Proposal {
    /**
     * Title is a short summary
     *
     * @generated from protobuf field: string title = 1;
     */
    title: string;
    /**
     * Description is a human readable text
     *
     * @generated from protobuf field: string description = 2;
     */
    description: string;
    /**
     * RunAs is the address that is passed to the contract's enviroment as sender
     *
     * @generated from protobuf field: string run_as = 3;
     */
    runAs: string;
    /**
     * Admin is an optional address that can execute migrations
     *
     * @generated from protobuf field: string admin = 4;
     */
    admin: string;
    /**
     * CodeID is the reference to the stored WASM code
     *
     * @generated from protobuf field: uint64 code_id = 5;
     */
    codeId: string;
    /**
     * Label is optional metadata to be stored with a constract instance.
     *
     * @generated from protobuf field: string label = 6;
     */
    label: string;
    /**
     * Msg json encode message to be passed to the contract on instantiation
     *
     * @generated from protobuf field: bytes msg = 7;
     */
    msg: Uint8Array;
    /**
     * Funds coins that are transferred to the contract on instantiation
     *
     * @generated from protobuf field: repeated cosmos.base.v1beta1.Coin funds = 8;
     */
    funds: Coin[];
    /**
     * Salt is an arbitrary value provided by the sender. Size can be 1 to 64.
     *
     * @generated from protobuf field: bytes salt = 9;
     */
    salt: Uint8Array;
    /**
     * FixMsg include the msg value into the hash for the predictable address.
     * Default is false
     *
     * @generated from protobuf field: bool fix_msg = 10;
     */
    fixMsg: boolean;
}
/**
 * MigrateContractProposal gov proposal content type to migrate a contract.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MigrateContractProposal
 */
export interface MigrateContractProposal {
    /**
     * Title is a short summary
     *
     * @generated from protobuf field: string title = 1;
     */
    title: string;
    /**
     * Description is a human readable text
     *
     * @generated from protobuf field: string description = 2;
     */
    description: string;
    /**
     * Contract is the address of the smart contract
     *
     * @generated from protobuf field: string contract = 4;
     */
    contract: string;
    /**
     * CodeID references the new WASM code
     *
     * @generated from protobuf field: uint64 code_id = 5;
     */
    codeId: string;
    /**
     * Msg json encoded message to be passed to the contract on migration
     *
     * @generated from protobuf field: bytes msg = 6;
     */
    msg: Uint8Array;
}
/**
 * SudoContractProposal gov proposal content type to call sudo on a contract.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.SudoContractProposal
 */
export interface SudoContractProposal {
    /**
     * Title is a short summary
     *
     * @generated from protobuf field: string title = 1;
     */
    title: string;
    /**
     * Description is a human readable text
     *
     * @generated from protobuf field: string description = 2;
     */
    description: string;
    /**
     * Contract is the address of the smart contract
     *
     * @generated from protobuf field: string contract = 3;
     */
    contract: string;
    /**
     * Msg json encoded message to be passed to the contract as sudo
     *
     * @generated from protobuf field: bytes msg = 4;
     */
    msg: Uint8Array;
}
/**
 * ExecuteContractProposal gov proposal content type to call execute on a
 * contract.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.ExecuteContractProposal
 */
export interface ExecuteContractProposal {
    /**
     * Title is a short summary
     *
     * @generated from protobuf field: string title = 1;
     */
    title: string;
    /**
     * Description is a human readable text
     *
     * @generated from protobuf field: string description = 2;
     */
    description: string;
    /**
     * RunAs is the address that is passed to the contract's environment as sender
     *
     * @generated from protobuf field: string run_as = 3;
     */
    runAs: string;
    /**
     * Contract is the address of the smart contract
     *
     * @generated from protobuf field: string contract = 4;
     */
    contract: string;
    /**
     * Msg json encoded message to be passed to the contract as execute
     *
     * @generated from protobuf field: bytes msg = 5;
     */
    msg: Uint8Array;
    /**
     * Funds coins that are transferred to the contract on instantiation
     *
     * @generated from protobuf field: repeated cosmos.base.v1beta1.Coin funds = 6;
     */
    funds: Coin[];
}
/**
 * UpdateAdminProposal gov proposal content type to set an admin for a contract.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.UpdateAdminProposal
 */
export interface UpdateAdminProposal {
    /**
     * Title is a short summary
     *
     * @generated from protobuf field: string title = 1;
     */
    title: string;
    /**
     * Description is a human readable text
     *
     * @generated from protobuf field: string description = 2;
     */
    description: string;
    /**
     * NewAdmin address to be set
     *
     * @generated from protobuf field: string new_admin = 3;
     */
    newAdmin: string;
    /**
     * Contract is the address of the smart contract
     *
     * @generated from protobuf field: string contract = 4;
     */
    contract: string;
}
/**
 * ClearAdminProposal gov proposal content type to clear the admin of a
 * contract.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.ClearAdminProposal
 */
export interface ClearAdminProposal {
    /**
     * Title is a short summary
     *
     * @generated from protobuf field: string title = 1;
     */
    title: string;
    /**
     * Description is a human readable text
     *
     * @generated from protobuf field: string description = 2;
     */
    description: string;
    /**
     * Contract is the address of the smart contract
     *
     * @generated from protobuf field: string contract = 3;
     */
    contract: string;
}
/**
 * PinCodesProposal gov proposal content type to pin a set of code ids in the
 * wasmvm cache.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.PinCodesProposal
 */
export interface PinCodesProposal {
    /**
     * Title is a short summary
     *
     * @generated from protobuf field: string title = 1;
     */
    title: string;
    /**
     * Description is a human readable text
     *
     * @generated from protobuf field: string description = 2;
     */
    description: string;
    /**
     * CodeIDs references the new WASM codes
     *
     * @generated from protobuf field: repeated uint64 code_ids = 3;
     */
    codeIds: string[];
}
/**
 * UnpinCodesProposal gov proposal content type to unpin a set of code ids in
 * the wasmvm cache.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.UnpinCodesProposal
 */
export interface UnpinCodesProposal {
    /**
     * Title is a short summary
     *
     * @generated from protobuf field: string title = 1;
     */
    title: string;
    /**
     * Description is a human readable text
     *
     * @generated from protobuf field: string description = 2;
     */
    description: string;
    /**
     * CodeIDs references the WASM codes
     *
     * @generated from protobuf field: repeated uint64 code_ids = 3;
     */
    codeIds: string[];
}
/**
 * AccessConfigUpdate contains the code id and the access config to be
 * applied.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.AccessConfigUpdate
 */
export interface AccessConfigUpdate {
    /**
     * CodeID is the reference to the stored WASM code to be updated
     *
     * @generated from protobuf field: uint64 code_id = 1;
     */
    codeId: string;
    /**
     * InstantiatePermission to apply to the set of code ids
     *
     * @generated from protobuf field: cosmwasm.wasm.v1.AccessConfig instantiate_permission = 2;
     */
    instantiatePermission?: AccessConfig;
}
/**
 * UpdateInstantiateConfigProposal gov proposal content type to update
 * instantiate config to a  set of code ids.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.UpdateInstantiateConfigProposal
 */
export interface UpdateInstantiateConfigProposal {
    /**
     * Title is a short summary
     *
     * @generated from protobuf field: string title = 1;
     */
    title: string;
    /**
     * Description is a human readable text
     *
     * @generated from protobuf field: string description = 2;
     */
    description: string;
    /**
     * AccessConfigUpdate contains the list of code ids and the access config
     * to be applied.
     *
     * @generated from protobuf field: repeated cosmwasm.wasm.v1.AccessConfigUpdate access_config_updates = 3;
     */
    accessConfigUpdates: AccessConfigUpdate[];
}
/**
 * StoreAndInstantiateContractProposal gov proposal content type to store
 * and instantiate the contract.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.StoreAndInstantiateContractProposal
 */
export interface StoreAndInstantiateContractProposal {
    /**
     * Title is a short summary
     *
     * @generated from protobuf field: string title = 1;
     */
    title: string;
    /**
     * Description is a human readable text
     *
     * @generated from protobuf field: string description = 2;
     */
    description: string;
    /**
     * RunAs is the address that is passed to the contract's environment as sender
     *
     * @generated from protobuf field: string run_as = 3;
     */
    runAs: string;
    /**
     * WASMByteCode can be raw or gzip compressed
     *
     * @generated from protobuf field: bytes wasm_byte_code = 4;
     */
    wasmByteCode: Uint8Array;
    /**
     * InstantiatePermission to apply on contract creation, optional
     *
     * @generated from protobuf field: cosmwasm.wasm.v1.AccessConfig instantiate_permission = 5;
     */
    instantiatePermission?: AccessConfig;
    /**
     * UnpinCode code on upload, optional
     *
     * @generated from protobuf field: bool unpin_code = 6;
     */
    unpinCode: boolean;
    /**
     * Admin is an optional address that can execute migrations
     *
     * @generated from protobuf field: string admin = 7;
     */
    admin: string;
    /**
     * Label is optional metadata to be stored with a constract instance.
     *
     * @generated from protobuf field: string label = 8;
     */
    label: string;
    /**
     * Msg json encoded message to be passed to the contract on instantiation
     *
     * @generated from protobuf field: bytes msg = 9;
     */
    msg: Uint8Array;
    /**
     * Funds coins that are transferred to the contract on instantiation
     *
     * @generated from protobuf field: repeated cosmos.base.v1beta1.Coin funds = 10;
     */
    funds: Coin[];
    /**
     * Source is the URL where the code is hosted
     *
     * @generated from protobuf field: string source = 11;
     */
    source: string;
    /**
     * Builder is the docker image used to build the code deterministically, used
     * for smart contract verification
     *
     * @generated from protobuf field: string builder = 12;
     */
    builder: string;
    /**
     * CodeHash is the SHA256 sum of the code outputted by builder, used for smart
     * contract verification
     *
     * @generated from protobuf field: bytes code_hash = 13;
     */
    codeHash: Uint8Array;
}
declare class StoreCodeProposal$Type extends MessageType<StoreCodeProposal> {
    constructor();
    create(value?: PartialMessage<StoreCodeProposal>): StoreCodeProposal;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StoreCodeProposal): StoreCodeProposal;
    internalBinaryWrite(message: StoreCodeProposal, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.StoreCodeProposal
 */
export declare const StoreCodeProposal: StoreCodeProposal$Type;
declare class InstantiateContractProposal$Type extends MessageType<InstantiateContractProposal> {
    constructor();
    create(value?: PartialMessage<InstantiateContractProposal>): InstantiateContractProposal;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InstantiateContractProposal): InstantiateContractProposal;
    internalBinaryWrite(message: InstantiateContractProposal, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.InstantiateContractProposal
 */
export declare const InstantiateContractProposal: InstantiateContractProposal$Type;
declare class InstantiateContract2Proposal$Type extends MessageType<InstantiateContract2Proposal> {
    constructor();
    create(value?: PartialMessage<InstantiateContract2Proposal>): InstantiateContract2Proposal;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InstantiateContract2Proposal): InstantiateContract2Proposal;
    internalBinaryWrite(message: InstantiateContract2Proposal, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.InstantiateContract2Proposal
 */
export declare const InstantiateContract2Proposal: InstantiateContract2Proposal$Type;
declare class MigrateContractProposal$Type extends MessageType<MigrateContractProposal> {
    constructor();
    create(value?: PartialMessage<MigrateContractProposal>): MigrateContractProposal;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MigrateContractProposal): MigrateContractProposal;
    internalBinaryWrite(message: MigrateContractProposal, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MigrateContractProposal
 */
export declare const MigrateContractProposal: MigrateContractProposal$Type;
declare class SudoContractProposal$Type extends MessageType<SudoContractProposal> {
    constructor();
    create(value?: PartialMessage<SudoContractProposal>): SudoContractProposal;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SudoContractProposal): SudoContractProposal;
    internalBinaryWrite(message: SudoContractProposal, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.SudoContractProposal
 */
export declare const SudoContractProposal: SudoContractProposal$Type;
declare class ExecuteContractProposal$Type extends MessageType<ExecuteContractProposal> {
    constructor();
    create(value?: PartialMessage<ExecuteContractProposal>): ExecuteContractProposal;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ExecuteContractProposal): ExecuteContractProposal;
    internalBinaryWrite(message: ExecuteContractProposal, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.ExecuteContractProposal
 */
export declare const ExecuteContractProposal: ExecuteContractProposal$Type;
declare class UpdateAdminProposal$Type extends MessageType<UpdateAdminProposal> {
    constructor();
    create(value?: PartialMessage<UpdateAdminProposal>): UpdateAdminProposal;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdateAdminProposal): UpdateAdminProposal;
    internalBinaryWrite(message: UpdateAdminProposal, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.UpdateAdminProposal
 */
export declare const UpdateAdminProposal: UpdateAdminProposal$Type;
declare class ClearAdminProposal$Type extends MessageType<ClearAdminProposal> {
    constructor();
    create(value?: PartialMessage<ClearAdminProposal>): ClearAdminProposal;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ClearAdminProposal): ClearAdminProposal;
    internalBinaryWrite(message: ClearAdminProposal, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.ClearAdminProposal
 */
export declare const ClearAdminProposal: ClearAdminProposal$Type;
declare class PinCodesProposal$Type extends MessageType<PinCodesProposal> {
    constructor();
    create(value?: PartialMessage<PinCodesProposal>): PinCodesProposal;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PinCodesProposal): PinCodesProposal;
    internalBinaryWrite(message: PinCodesProposal, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.PinCodesProposal
 */
export declare const PinCodesProposal: PinCodesProposal$Type;
declare class UnpinCodesProposal$Type extends MessageType<UnpinCodesProposal> {
    constructor();
    create(value?: PartialMessage<UnpinCodesProposal>): UnpinCodesProposal;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnpinCodesProposal): UnpinCodesProposal;
    internalBinaryWrite(message: UnpinCodesProposal, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.UnpinCodesProposal
 */
export declare const UnpinCodesProposal: UnpinCodesProposal$Type;
declare class AccessConfigUpdate$Type extends MessageType<AccessConfigUpdate> {
    constructor();
    create(value?: PartialMessage<AccessConfigUpdate>): AccessConfigUpdate;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AccessConfigUpdate): AccessConfigUpdate;
    internalBinaryWrite(message: AccessConfigUpdate, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.AccessConfigUpdate
 */
export declare const AccessConfigUpdate: AccessConfigUpdate$Type;
declare class UpdateInstantiateConfigProposal$Type extends MessageType<UpdateInstantiateConfigProposal> {
    constructor();
    create(value?: PartialMessage<UpdateInstantiateConfigProposal>): UpdateInstantiateConfigProposal;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdateInstantiateConfigProposal): UpdateInstantiateConfigProposal;
    internalBinaryWrite(message: UpdateInstantiateConfigProposal, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.UpdateInstantiateConfigProposal
 */
export declare const UpdateInstantiateConfigProposal: UpdateInstantiateConfigProposal$Type;
declare class StoreAndInstantiateContractProposal$Type extends MessageType<StoreAndInstantiateContractProposal> {
    constructor();
    create(value?: PartialMessage<StoreAndInstantiateContractProposal>): StoreAndInstantiateContractProposal;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StoreAndInstantiateContractProposal): StoreAndInstantiateContractProposal;
    internalBinaryWrite(message: StoreAndInstantiateContractProposal, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.StoreAndInstantiateContractProposal
 */
export declare const StoreAndInstantiateContractProposal: StoreAndInstantiateContractProposal$Type;
export {};
