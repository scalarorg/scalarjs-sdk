// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmwasm/wasm/v1/ibc.proto" (package "cosmwasm.wasm.v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * MsgIBCSend
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgIBCSend
 */
export interface MsgIBCSend {
    /**
     * the channel by which the packet will be sent
     *
     * @generated from protobuf field: string channel = 2;
     */
    channel: string;
    /**
     * Timeout height relative to the current block height.
     * The timeout is disabled when set to 0.
     *
     * @generated from protobuf field: uint64 timeout_height = 4;
     */
    timeoutHeight: string;
    /**
     * Timeout timestamp (in nanoseconds) relative to the current block timestamp.
     * The timeout is disabled when set to 0.
     *
     * @generated from protobuf field: uint64 timeout_timestamp = 5;
     */
    timeoutTimestamp: string;
    /**
     * Data is the payload to transfer. We must not make assumption what format or
     * content is in here.
     *
     * @generated from protobuf field: bytes data = 6;
     */
    data: Uint8Array;
}
/**
 * MsgIBCSendResponse
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgIBCSendResponse
 */
export interface MsgIBCSendResponse {
    /**
     * Sequence number of the IBC packet sent
     *
     * @generated from protobuf field: uint64 sequence = 1;
     */
    sequence: string;
}
/**
 * MsgIBCCloseChannel port and channel need to be owned by the contract
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgIBCCloseChannel
 */
export interface MsgIBCCloseChannel {
    /**
     * @generated from protobuf field: string channel = 2;
     */
    channel: string;
}
declare class MsgIBCSend$Type extends MessageType<MsgIBCSend> {
    constructor();
    create(value?: PartialMessage<MsgIBCSend>): MsgIBCSend;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgIBCSend): MsgIBCSend;
    internalBinaryWrite(message: MsgIBCSend, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgIBCSend
 */
export declare const MsgIBCSend: MsgIBCSend$Type;
declare class MsgIBCSendResponse$Type extends MessageType<MsgIBCSendResponse> {
    constructor();
    create(value?: PartialMessage<MsgIBCSendResponse>): MsgIBCSendResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgIBCSendResponse): MsgIBCSendResponse;
    internalBinaryWrite(message: MsgIBCSendResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgIBCSendResponse
 */
export declare const MsgIBCSendResponse: MsgIBCSendResponse$Type;
declare class MsgIBCCloseChannel$Type extends MessageType<MsgIBCCloseChannel> {
    constructor();
    create(value?: PartialMessage<MsgIBCCloseChannel>): MsgIBCCloseChannel;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgIBCCloseChannel): MsgIBCCloseChannel;
    internalBinaryWrite(message: MsgIBCCloseChannel, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgIBCCloseChannel
 */
export declare const MsgIBCCloseChannel: MsgIBCCloseChannel$Type;
export {};
