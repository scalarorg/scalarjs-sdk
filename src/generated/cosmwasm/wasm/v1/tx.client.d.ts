// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmwasm/wasm/v1/tx.proto" (package "cosmwasm.wasm.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { MsgUpdateInstantiateConfigResponse } from "./tx";
import type { MsgUpdateInstantiateConfig } from "./tx";
import type { MsgClearAdminResponse } from "./tx";
import type { MsgClearAdmin } from "./tx";
import type { MsgUpdateAdminResponse } from "./tx";
import type { MsgUpdateAdmin } from "./tx";
import type { MsgMigrateContractResponse } from "./tx";
import type { MsgMigrateContract } from "./tx";
import type { MsgExecuteContractResponse } from "./tx";
import type { MsgExecuteContract } from "./tx";
import type { MsgInstantiateContract2Response } from "./tx";
import type { MsgInstantiateContract2 } from "./tx";
import type { MsgInstantiateContractResponse } from "./tx";
import type { MsgInstantiateContract } from "./tx";
import type { MsgStoreCodeResponse } from "./tx";
import type { MsgStoreCode } from "./tx";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Msg defines the wasm Msg service.
 *
 * @generated from protobuf service cosmwasm.wasm.v1.Msg
 */
export interface IMsgClient {
    /**
     * StoreCode to submit Wasm code to the system
     *
     * @generated from protobuf rpc: StoreCode(cosmwasm.wasm.v1.MsgStoreCode) returns (cosmwasm.wasm.v1.MsgStoreCodeResponse);
     */
    storeCode(input: MsgStoreCode, options?: RpcOptions): UnaryCall<MsgStoreCode, MsgStoreCodeResponse>;
    /**
     *  InstantiateContract creates a new smart contract instance for the given
     *  code id.
     *
     * @generated from protobuf rpc: InstantiateContract(cosmwasm.wasm.v1.MsgInstantiateContract) returns (cosmwasm.wasm.v1.MsgInstantiateContractResponse);
     */
    instantiateContract(input: MsgInstantiateContract, options?: RpcOptions): UnaryCall<MsgInstantiateContract, MsgInstantiateContractResponse>;
    /**
     *  InstantiateContract2 creates a new smart contract instance for the given
     *  code id with a predictable address
     *
     * @generated from protobuf rpc: InstantiateContract2(cosmwasm.wasm.v1.MsgInstantiateContract2) returns (cosmwasm.wasm.v1.MsgInstantiateContract2Response);
     */
    instantiateContract2(input: MsgInstantiateContract2, options?: RpcOptions): UnaryCall<MsgInstantiateContract2, MsgInstantiateContract2Response>;
    /**
     * Execute submits the given message data to a smart contract
     *
     * @generated from protobuf rpc: ExecuteContract(cosmwasm.wasm.v1.MsgExecuteContract) returns (cosmwasm.wasm.v1.MsgExecuteContractResponse);
     */
    executeContract(input: MsgExecuteContract, options?: RpcOptions): UnaryCall<MsgExecuteContract, MsgExecuteContractResponse>;
    /**
     * Migrate runs a code upgrade/ downgrade for a smart contract
     *
     * @generated from protobuf rpc: MigrateContract(cosmwasm.wasm.v1.MsgMigrateContract) returns (cosmwasm.wasm.v1.MsgMigrateContractResponse);
     */
    migrateContract(input: MsgMigrateContract, options?: RpcOptions): UnaryCall<MsgMigrateContract, MsgMigrateContractResponse>;
    /**
     * UpdateAdmin sets a new   admin for a smart contract
     *
     * @generated from protobuf rpc: UpdateAdmin(cosmwasm.wasm.v1.MsgUpdateAdmin) returns (cosmwasm.wasm.v1.MsgUpdateAdminResponse);
     */
    updateAdmin(input: MsgUpdateAdmin, options?: RpcOptions): UnaryCall<MsgUpdateAdmin, MsgUpdateAdminResponse>;
    /**
     * ClearAdmin removes any admin stored for a smart contract
     *
     * @generated from protobuf rpc: ClearAdmin(cosmwasm.wasm.v1.MsgClearAdmin) returns (cosmwasm.wasm.v1.MsgClearAdminResponse);
     */
    clearAdmin(input: MsgClearAdmin, options?: RpcOptions): UnaryCall<MsgClearAdmin, MsgClearAdminResponse>;
    /**
     * UpdateInstantiateConfig updates instantiate config for a smart contract
     *
     * @generated from protobuf rpc: UpdateInstantiateConfig(cosmwasm.wasm.v1.MsgUpdateInstantiateConfig) returns (cosmwasm.wasm.v1.MsgUpdateInstantiateConfigResponse);
     */
    updateInstantiateConfig(input: MsgUpdateInstantiateConfig, options?: RpcOptions): UnaryCall<MsgUpdateInstantiateConfig, MsgUpdateInstantiateConfigResponse>;
}
/**
 * Msg defines the wasm Msg service.
 *
 * @generated from protobuf service cosmwasm.wasm.v1.Msg
 */
export declare class MsgClient implements IMsgClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * StoreCode to submit Wasm code to the system
     *
     * @generated from protobuf rpc: StoreCode(cosmwasm.wasm.v1.MsgStoreCode) returns (cosmwasm.wasm.v1.MsgStoreCodeResponse);
     */
    storeCode(input: MsgStoreCode, options?: RpcOptions): UnaryCall<MsgStoreCode, MsgStoreCodeResponse>;
    /**
     *  InstantiateContract creates a new smart contract instance for the given
     *  code id.
     *
     * @generated from protobuf rpc: InstantiateContract(cosmwasm.wasm.v1.MsgInstantiateContract) returns (cosmwasm.wasm.v1.MsgInstantiateContractResponse);
     */
    instantiateContract(input: MsgInstantiateContract, options?: RpcOptions): UnaryCall<MsgInstantiateContract, MsgInstantiateContractResponse>;
    /**
     *  InstantiateContract2 creates a new smart contract instance for the given
     *  code id with a predictable address
     *
     * @generated from protobuf rpc: InstantiateContract2(cosmwasm.wasm.v1.MsgInstantiateContract2) returns (cosmwasm.wasm.v1.MsgInstantiateContract2Response);
     */
    instantiateContract2(input: MsgInstantiateContract2, options?: RpcOptions): UnaryCall<MsgInstantiateContract2, MsgInstantiateContract2Response>;
    /**
     * Execute submits the given message data to a smart contract
     *
     * @generated from protobuf rpc: ExecuteContract(cosmwasm.wasm.v1.MsgExecuteContract) returns (cosmwasm.wasm.v1.MsgExecuteContractResponse);
     */
    executeContract(input: MsgExecuteContract, options?: RpcOptions): UnaryCall<MsgExecuteContract, MsgExecuteContractResponse>;
    /**
     * Migrate runs a code upgrade/ downgrade for a smart contract
     *
     * @generated from protobuf rpc: MigrateContract(cosmwasm.wasm.v1.MsgMigrateContract) returns (cosmwasm.wasm.v1.MsgMigrateContractResponse);
     */
    migrateContract(input: MsgMigrateContract, options?: RpcOptions): UnaryCall<MsgMigrateContract, MsgMigrateContractResponse>;
    /**
     * UpdateAdmin sets a new   admin for a smart contract
     *
     * @generated from protobuf rpc: UpdateAdmin(cosmwasm.wasm.v1.MsgUpdateAdmin) returns (cosmwasm.wasm.v1.MsgUpdateAdminResponse);
     */
    updateAdmin(input: MsgUpdateAdmin, options?: RpcOptions): UnaryCall<MsgUpdateAdmin, MsgUpdateAdminResponse>;
    /**
     * ClearAdmin removes any admin stored for a smart contract
     *
     * @generated from protobuf rpc: ClearAdmin(cosmwasm.wasm.v1.MsgClearAdmin) returns (cosmwasm.wasm.v1.MsgClearAdminResponse);
     */
    clearAdmin(input: MsgClearAdmin, options?: RpcOptions): UnaryCall<MsgClearAdmin, MsgClearAdminResponse>;
    /**
     * UpdateInstantiateConfig updates instantiate config for a smart contract
     *
     * @generated from protobuf rpc: UpdateInstantiateConfig(cosmwasm.wasm.v1.MsgUpdateInstantiateConfig) returns (cosmwasm.wasm.v1.MsgUpdateInstantiateConfigResponse);
     */
    updateInstantiateConfig(input: MsgUpdateInstantiateConfig, options?: RpcOptions): UnaryCall<MsgUpdateInstantiateConfig, MsgUpdateInstantiateConfigResponse>;
}
