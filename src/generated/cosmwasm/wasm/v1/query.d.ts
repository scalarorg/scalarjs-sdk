// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmwasm/wasm/v1/query.proto" (package "cosmwasm.wasm.v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Params } from "./types";
import { AccessConfig } from "./types";
import { Model } from "./types";
import { PageResponse } from "../../../cosmos/base/query/v1beta1/pagination";
import { ContractCodeHistoryEntry } from "./types";
import { PageRequest } from "../../../cosmos/base/query/v1beta1/pagination";
import { ContractInfo } from "./types";
/**
 * QueryContractInfoRequest is the request type for the Query/ContractInfo RPC
 * method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryContractInfoRequest
 */
export interface QueryContractInfoRequest {
    /**
     * address is the address of the contract to query
     *
     * @generated from protobuf field: string address = 1;
     */
    address: string;
}
/**
 * QueryContractInfoResponse is the response type for the Query/ContractInfo RPC
 * method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryContractInfoResponse
 */
export interface QueryContractInfoResponse {
    /**
     * address is the address of the contract
     *
     * @generated from protobuf field: string address = 1;
     */
    address: string;
    /**
     * @generated from protobuf field: cosmwasm.wasm.v1.ContractInfo contract_info = 2;
     */
    contractInfo?: ContractInfo;
}
/**
 * QueryContractHistoryRequest is the request type for the Query/ContractHistory
 * RPC method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryContractHistoryRequest
 */
export interface QueryContractHistoryRequest {
    /**
     * address is the address of the contract to query
     *
     * @generated from protobuf field: string address = 1;
     */
    address: string;
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryContractHistoryResponse is the response type for the
 * Query/ContractHistory RPC method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryContractHistoryResponse
 */
export interface QueryContractHistoryResponse {
    /**
     * @generated from protobuf field: repeated cosmwasm.wasm.v1.ContractCodeHistoryEntry entries = 1;
     */
    entries: ContractCodeHistoryEntry[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryContractsByCodeRequest is the request type for the Query/ContractsByCode
 * RPC method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryContractsByCodeRequest
 */
export interface QueryContractsByCodeRequest {
    /**
     * @generated from protobuf field: uint64 code_id = 1;
     */
    codeId: string;
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryContractsByCodeResponse is the response type for the
 * Query/ContractsByCode RPC method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryContractsByCodeResponse
 */
export interface QueryContractsByCodeResponse {
    /**
     * contracts are a set of contract addresses
     *
     * @generated from protobuf field: repeated string contracts = 1;
     */
    contracts: string[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryAllContractStateRequest is the request type for the
 * Query/AllContractState RPC method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryAllContractStateRequest
 */
export interface QueryAllContractStateRequest {
    /**
     * address is the address of the contract
     *
     * @generated from protobuf field: string address = 1;
     */
    address: string;
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryAllContractStateResponse is the response type for the
 * Query/AllContractState RPC method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryAllContractStateResponse
 */
export interface QueryAllContractStateResponse {
    /**
     * @generated from protobuf field: repeated cosmwasm.wasm.v1.Model models = 1;
     */
    models: Model[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryRawContractStateRequest is the request type for the
 * Query/RawContractState RPC method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryRawContractStateRequest
 */
export interface QueryRawContractStateRequest {
    /**
     * address is the address of the contract
     *
     * @generated from protobuf field: string address = 1;
     */
    address: string;
    /**
     * @generated from protobuf field: bytes query_data = 2;
     */
    queryData: Uint8Array;
}
/**
 * QueryRawContractStateResponse is the response type for the
 * Query/RawContractState RPC method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryRawContractStateResponse
 */
export interface QueryRawContractStateResponse {
    /**
     * Data contains the raw store data
     *
     * @generated from protobuf field: bytes data = 1;
     */
    data: Uint8Array;
}
/**
 * QuerySmartContractStateRequest is the request type for the
 * Query/SmartContractState RPC method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QuerySmartContractStateRequest
 */
export interface QuerySmartContractStateRequest {
    /**
     * address is the address of the contract
     *
     * @generated from protobuf field: string address = 1;
     */
    address: string;
    /**
     * QueryData contains the query data passed to the contract
     *
     * @generated from protobuf field: bytes query_data = 2;
     */
    queryData: Uint8Array;
}
/**
 * QuerySmartContractStateResponse is the response type for the
 * Query/SmartContractState RPC method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QuerySmartContractStateResponse
 */
export interface QuerySmartContractStateResponse {
    /**
     * Data contains the json data returned from the smart contract
     *
     * @generated from protobuf field: bytes data = 1;
     */
    data: Uint8Array;
}
/**
 * QueryCodeRequest is the request type for the Query/Code RPC method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryCodeRequest
 */
export interface QueryCodeRequest {
    /**
     * @generated from protobuf field: uint64 code_id = 1;
     */
    codeId: string;
}
/**
 * CodeInfoResponse contains code meta data from CodeInfo
 *
 * @generated from protobuf message cosmwasm.wasm.v1.CodeInfoResponse
 */
export interface CodeInfoResponse {
    /**
     * @generated from protobuf field: uint64 code_id = 1;
     */
    codeId: string;
    /**
     * @generated from protobuf field: string creator = 2;
     */
    creator: string;
    /**
     * @generated from protobuf field: bytes data_hash = 3;
     */
    dataHash: Uint8Array;
    /**
     * @generated from protobuf field: cosmwasm.wasm.v1.AccessConfig instantiate_permission = 6;
     */
    instantiatePermission?: AccessConfig;
}
/**
 * QueryCodeResponse is the response type for the Query/Code RPC method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryCodeResponse
 */
export interface QueryCodeResponse {
    /**
     * @generated from protobuf field: cosmwasm.wasm.v1.CodeInfoResponse code_info = 1;
     */
    codeInfo?: CodeInfoResponse;
    /**
     * @generated from protobuf field: bytes data = 2;
     */
    data: Uint8Array;
}
/**
 * QueryCodesRequest is the request type for the Query/Codes RPC method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryCodesRequest
 */
export interface QueryCodesRequest {
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
     */
    pagination?: PageRequest;
}
/**
 * QueryCodesResponse is the response type for the Query/Codes RPC method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryCodesResponse
 */
export interface QueryCodesResponse {
    /**
     * @generated from protobuf field: repeated cosmwasm.wasm.v1.CodeInfoResponse code_infos = 1;
     */
    codeInfos: CodeInfoResponse[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryPinnedCodesRequest is the request type for the Query/PinnedCodes
 * RPC method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryPinnedCodesRequest
 */
export interface QueryPinnedCodesRequest {
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryPinnedCodesResponse is the response type for the
 * Query/PinnedCodes RPC method
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryPinnedCodesResponse
 */
export interface QueryPinnedCodesResponse {
    /**
     * @generated from protobuf field: repeated uint64 code_ids = 1;
     */
    codeIds: string[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryParamsRequest
 */
export interface QueryParamsRequest {
}
/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryParamsResponse
 */
export interface QueryParamsResponse {
    /**
     * params defines the parameters of the module.
     *
     * @generated from protobuf field: cosmwasm.wasm.v1.Params params = 1;
     */
    params?: Params;
}
/**
 * QueryContractsByCreatorRequest is the request type for the
 * Query/ContractsByCreator RPC method.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryContractsByCreatorRequest
 */
export interface QueryContractsByCreatorRequest {
    /**
     * CreatorAddress is the address of contract creator
     *
     * @generated from protobuf field: string creator_address = 1;
     */
    creatorAddress: string;
    /**
     * Pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryContractsByCreatorResponse is the response type for the
 * Query/ContractsByCreator RPC method.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.QueryContractsByCreatorResponse
 */
export interface QueryContractsByCreatorResponse {
    /**
     * ContractAddresses result set
     *
     * @generated from protobuf field: repeated string contract_addresses = 1;
     */
    contractAddresses: string[];
    /**
     * Pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
declare class QueryContractInfoRequest$Type extends MessageType<QueryContractInfoRequest> {
    constructor();
    create(value?: PartialMessage<QueryContractInfoRequest>): QueryContractInfoRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryContractInfoRequest): QueryContractInfoRequest;
    internalBinaryWrite(message: QueryContractInfoRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryContractInfoRequest
 */
export declare const QueryContractInfoRequest: QueryContractInfoRequest$Type;
declare class QueryContractInfoResponse$Type extends MessageType<QueryContractInfoResponse> {
    constructor();
    create(value?: PartialMessage<QueryContractInfoResponse>): QueryContractInfoResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryContractInfoResponse): QueryContractInfoResponse;
    internalBinaryWrite(message: QueryContractInfoResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryContractInfoResponse
 */
export declare const QueryContractInfoResponse: QueryContractInfoResponse$Type;
declare class QueryContractHistoryRequest$Type extends MessageType<QueryContractHistoryRequest> {
    constructor();
    create(value?: PartialMessage<QueryContractHistoryRequest>): QueryContractHistoryRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryContractHistoryRequest): QueryContractHistoryRequest;
    internalBinaryWrite(message: QueryContractHistoryRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryContractHistoryRequest
 */
export declare const QueryContractHistoryRequest: QueryContractHistoryRequest$Type;
declare class QueryContractHistoryResponse$Type extends MessageType<QueryContractHistoryResponse> {
    constructor();
    create(value?: PartialMessage<QueryContractHistoryResponse>): QueryContractHistoryResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryContractHistoryResponse): QueryContractHistoryResponse;
    internalBinaryWrite(message: QueryContractHistoryResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryContractHistoryResponse
 */
export declare const QueryContractHistoryResponse: QueryContractHistoryResponse$Type;
declare class QueryContractsByCodeRequest$Type extends MessageType<QueryContractsByCodeRequest> {
    constructor();
    create(value?: PartialMessage<QueryContractsByCodeRequest>): QueryContractsByCodeRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryContractsByCodeRequest): QueryContractsByCodeRequest;
    internalBinaryWrite(message: QueryContractsByCodeRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryContractsByCodeRequest
 */
export declare const QueryContractsByCodeRequest: QueryContractsByCodeRequest$Type;
declare class QueryContractsByCodeResponse$Type extends MessageType<QueryContractsByCodeResponse> {
    constructor();
    create(value?: PartialMessage<QueryContractsByCodeResponse>): QueryContractsByCodeResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryContractsByCodeResponse): QueryContractsByCodeResponse;
    internalBinaryWrite(message: QueryContractsByCodeResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryContractsByCodeResponse
 */
export declare const QueryContractsByCodeResponse: QueryContractsByCodeResponse$Type;
declare class QueryAllContractStateRequest$Type extends MessageType<QueryAllContractStateRequest> {
    constructor();
    create(value?: PartialMessage<QueryAllContractStateRequest>): QueryAllContractStateRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAllContractStateRequest): QueryAllContractStateRequest;
    internalBinaryWrite(message: QueryAllContractStateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryAllContractStateRequest
 */
export declare const QueryAllContractStateRequest: QueryAllContractStateRequest$Type;
declare class QueryAllContractStateResponse$Type extends MessageType<QueryAllContractStateResponse> {
    constructor();
    create(value?: PartialMessage<QueryAllContractStateResponse>): QueryAllContractStateResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAllContractStateResponse): QueryAllContractStateResponse;
    internalBinaryWrite(message: QueryAllContractStateResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryAllContractStateResponse
 */
export declare const QueryAllContractStateResponse: QueryAllContractStateResponse$Type;
declare class QueryRawContractStateRequest$Type extends MessageType<QueryRawContractStateRequest> {
    constructor();
    create(value?: PartialMessage<QueryRawContractStateRequest>): QueryRawContractStateRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryRawContractStateRequest): QueryRawContractStateRequest;
    internalBinaryWrite(message: QueryRawContractStateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryRawContractStateRequest
 */
export declare const QueryRawContractStateRequest: QueryRawContractStateRequest$Type;
declare class QueryRawContractStateResponse$Type extends MessageType<QueryRawContractStateResponse> {
    constructor();
    create(value?: PartialMessage<QueryRawContractStateResponse>): QueryRawContractStateResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryRawContractStateResponse): QueryRawContractStateResponse;
    internalBinaryWrite(message: QueryRawContractStateResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryRawContractStateResponse
 */
export declare const QueryRawContractStateResponse: QueryRawContractStateResponse$Type;
declare class QuerySmartContractStateRequest$Type extends MessageType<QuerySmartContractStateRequest> {
    constructor();
    create(value?: PartialMessage<QuerySmartContractStateRequest>): QuerySmartContractStateRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuerySmartContractStateRequest): QuerySmartContractStateRequest;
    internalBinaryWrite(message: QuerySmartContractStateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QuerySmartContractStateRequest
 */
export declare const QuerySmartContractStateRequest: QuerySmartContractStateRequest$Type;
declare class QuerySmartContractStateResponse$Type extends MessageType<QuerySmartContractStateResponse> {
    constructor();
    create(value?: PartialMessage<QuerySmartContractStateResponse>): QuerySmartContractStateResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuerySmartContractStateResponse): QuerySmartContractStateResponse;
    internalBinaryWrite(message: QuerySmartContractStateResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QuerySmartContractStateResponse
 */
export declare const QuerySmartContractStateResponse: QuerySmartContractStateResponse$Type;
declare class QueryCodeRequest$Type extends MessageType<QueryCodeRequest> {
    constructor();
    create(value?: PartialMessage<QueryCodeRequest>): QueryCodeRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryCodeRequest): QueryCodeRequest;
    internalBinaryWrite(message: QueryCodeRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryCodeRequest
 */
export declare const QueryCodeRequest: QueryCodeRequest$Type;
declare class CodeInfoResponse$Type extends MessageType<CodeInfoResponse> {
    constructor();
    create(value?: PartialMessage<CodeInfoResponse>): CodeInfoResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CodeInfoResponse): CodeInfoResponse;
    internalBinaryWrite(message: CodeInfoResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.CodeInfoResponse
 */
export declare const CodeInfoResponse: CodeInfoResponse$Type;
declare class QueryCodeResponse$Type extends MessageType<QueryCodeResponse> {
    constructor();
    create(value?: PartialMessage<QueryCodeResponse>): QueryCodeResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryCodeResponse): QueryCodeResponse;
    internalBinaryWrite(message: QueryCodeResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryCodeResponse
 */
export declare const QueryCodeResponse: QueryCodeResponse$Type;
declare class QueryCodesRequest$Type extends MessageType<QueryCodesRequest> {
    constructor();
    create(value?: PartialMessage<QueryCodesRequest>): QueryCodesRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryCodesRequest): QueryCodesRequest;
    internalBinaryWrite(message: QueryCodesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryCodesRequest
 */
export declare const QueryCodesRequest: QueryCodesRequest$Type;
declare class QueryCodesResponse$Type extends MessageType<QueryCodesResponse> {
    constructor();
    create(value?: PartialMessage<QueryCodesResponse>): QueryCodesResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryCodesResponse): QueryCodesResponse;
    internalBinaryWrite(message: QueryCodesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryCodesResponse
 */
export declare const QueryCodesResponse: QueryCodesResponse$Type;
declare class QueryPinnedCodesRequest$Type extends MessageType<QueryPinnedCodesRequest> {
    constructor();
    create(value?: PartialMessage<QueryPinnedCodesRequest>): QueryPinnedCodesRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryPinnedCodesRequest): QueryPinnedCodesRequest;
    internalBinaryWrite(message: QueryPinnedCodesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryPinnedCodesRequest
 */
export declare const QueryPinnedCodesRequest: QueryPinnedCodesRequest$Type;
declare class QueryPinnedCodesResponse$Type extends MessageType<QueryPinnedCodesResponse> {
    constructor();
    create(value?: PartialMessage<QueryPinnedCodesResponse>): QueryPinnedCodesResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryPinnedCodesResponse): QueryPinnedCodesResponse;
    internalBinaryWrite(message: QueryPinnedCodesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryPinnedCodesResponse
 */
export declare const QueryPinnedCodesResponse: QueryPinnedCodesResponse$Type;
declare class QueryParamsRequest$Type extends MessageType<QueryParamsRequest> {
    constructor();
    create(value?: PartialMessage<QueryParamsRequest>): QueryParamsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryParamsRequest): QueryParamsRequest;
    internalBinaryWrite(message: QueryParamsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryParamsRequest
 */
export declare const QueryParamsRequest: QueryParamsRequest$Type;
declare class QueryParamsResponse$Type extends MessageType<QueryParamsResponse> {
    constructor();
    create(value?: PartialMessage<QueryParamsResponse>): QueryParamsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryParamsResponse): QueryParamsResponse;
    internalBinaryWrite(message: QueryParamsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryParamsResponse
 */
export declare const QueryParamsResponse: QueryParamsResponse$Type;
declare class QueryContractsByCreatorRequest$Type extends MessageType<QueryContractsByCreatorRequest> {
    constructor();
    create(value?: PartialMessage<QueryContractsByCreatorRequest>): QueryContractsByCreatorRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryContractsByCreatorRequest): QueryContractsByCreatorRequest;
    internalBinaryWrite(message: QueryContractsByCreatorRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryContractsByCreatorRequest
 */
export declare const QueryContractsByCreatorRequest: QueryContractsByCreatorRequest$Type;
declare class QueryContractsByCreatorResponse$Type extends MessageType<QueryContractsByCreatorResponse> {
    constructor();
    create(value?: PartialMessage<QueryContractsByCreatorResponse>): QueryContractsByCreatorResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryContractsByCreatorResponse): QueryContractsByCreatorResponse;
    internalBinaryWrite(message: QueryContractsByCreatorResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.QueryContractsByCreatorResponse
 */
export declare const QueryContractsByCreatorResponse: QueryContractsByCreatorResponse$Type;
/**
 * @generated ServiceType for protobuf service cosmwasm.wasm.v1.Query
 */
export declare const Query: any;
export {};
