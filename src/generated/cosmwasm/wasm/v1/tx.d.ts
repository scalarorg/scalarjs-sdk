// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmwasm/wasm/v1/tx.proto" (package "cosmwasm.wasm.v1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Coin } from "../../../cosmos/base/v1beta1/coin";
import { AccessConfig } from "./types";
/**
 * MsgStoreCode submit Wasm code to the system
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgStoreCode
 */
export interface MsgStoreCode {
    /**
     * Sender is the actor that signed the messages
     *
     * @generated from protobuf field: string sender = 1;
     */
    sender: string;
    /**
     * WASMByteCode can be raw or gzip compressed
     *
     * @generated from protobuf field: bytes wasm_byte_code = 2;
     */
    wasmByteCode: Uint8Array;
    /**
     * InstantiatePermission access control to apply on contract creation,
     * optional
     *
     * @generated from protobuf field: cosmwasm.wasm.v1.AccessConfig instantiate_permission = 5;
     */
    instantiatePermission?: AccessConfig;
}
/**
 * MsgStoreCodeResponse returns store result data.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgStoreCodeResponse
 */
export interface MsgStoreCodeResponse {
    /**
     * CodeID is the reference to the stored WASM code
     *
     * @generated from protobuf field: uint64 code_id = 1;
     */
    codeId: string;
    /**
     * Checksum is the sha256 hash of the stored code
     *
     * @generated from protobuf field: bytes checksum = 2;
     */
    checksum: Uint8Array;
}
/**
 * MsgInstantiateContract create a new smart contract instance for the given
 * code id.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgInstantiateContract
 */
export interface MsgInstantiateContract {
    /**
     * Sender is the that actor that signed the messages
     *
     * @generated from protobuf field: string sender = 1;
     */
    sender: string;
    /**
     * Admin is an optional address that can execute migrations
     *
     * @generated from protobuf field: string admin = 2;
     */
    admin: string;
    /**
     * CodeID is the reference to the stored WASM code
     *
     * @generated from protobuf field: uint64 code_id = 3;
     */
    codeId: string;
    /**
     * Label is optional metadata to be stored with a contract instance.
     *
     * @generated from protobuf field: string label = 4;
     */
    label: string;
    /**
     * Msg json encoded message to be passed to the contract on instantiation
     *
     * @generated from protobuf field: bytes msg = 5;
     */
    msg: Uint8Array;
    /**
     * Funds coins that are transferred to the contract on instantiation
     *
     * @generated from protobuf field: repeated cosmos.base.v1beta1.Coin funds = 6;
     */
    funds: Coin[];
}
/**
 * MsgInstantiateContract2 create a new smart contract instance for the given
 * code id with a predicable address.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgInstantiateContract2
 */
export interface MsgInstantiateContract2 {
    /**
     * Sender is the that actor that signed the messages
     *
     * @generated from protobuf field: string sender = 1;
     */
    sender: string;
    /**
     * Admin is an optional address that can execute migrations
     *
     * @generated from protobuf field: string admin = 2;
     */
    admin: string;
    /**
     * CodeID is the reference to the stored WASM code
     *
     * @generated from protobuf field: uint64 code_id = 3;
     */
    codeId: string;
    /**
     * Label is optional metadata to be stored with a contract instance.
     *
     * @generated from protobuf field: string label = 4;
     */
    label: string;
    /**
     * Msg json encoded message to be passed to the contract on instantiation
     *
     * @generated from protobuf field: bytes msg = 5;
     */
    msg: Uint8Array;
    /**
     * Funds coins that are transferred to the contract on instantiation
     *
     * @generated from protobuf field: repeated cosmos.base.v1beta1.Coin funds = 6;
     */
    funds: Coin[];
    /**
     * Salt is an arbitrary value provided by the sender. Size can be 1 to 64.
     *
     * @generated from protobuf field: bytes salt = 7;
     */
    salt: Uint8Array;
    /**
     * FixMsg include the msg value into the hash for the predictable address.
     * Default is false
     *
     * @generated from protobuf field: bool fix_msg = 8;
     */
    fixMsg: boolean;
}
/**
 * MsgInstantiateContractResponse return instantiation result data
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgInstantiateContractResponse
 */
export interface MsgInstantiateContractResponse {
    /**
     * Address is the bech32 address of the new contract instance.
     *
     * @generated from protobuf field: string address = 1;
     */
    address: string;
    /**
     * Data contains bytes to returned from the contract
     *
     * @generated from protobuf field: bytes data = 2;
     */
    data: Uint8Array;
}
/**
 * MsgInstantiateContract2Response return instantiation result data
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgInstantiateContract2Response
 */
export interface MsgInstantiateContract2Response {
    /**
     * Address is the bech32 address of the new contract instance.
     *
     * @generated from protobuf field: string address = 1;
     */
    address: string;
    /**
     * Data contains bytes to returned from the contract
     *
     * @generated from protobuf field: bytes data = 2;
     */
    data: Uint8Array;
}
/**
 * MsgExecuteContract submits the given message data to a smart contract
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgExecuteContract
 */
export interface MsgExecuteContract {
    /**
     * Sender is the that actor that signed the messages
     *
     * @generated from protobuf field: string sender = 1;
     */
    sender: string;
    /**
     * Contract is the address of the smart contract
     *
     * @generated from protobuf field: string contract = 2;
     */
    contract: string;
    /**
     * Msg json encoded message to be passed to the contract
     *
     * @generated from protobuf field: bytes msg = 3;
     */
    msg: Uint8Array;
    /**
     * Funds coins that are transferred to the contract on execution
     *
     * @generated from protobuf field: repeated cosmos.base.v1beta1.Coin funds = 5;
     */
    funds: Coin[];
}
/**
 * MsgExecuteContractResponse returns execution result data.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgExecuteContractResponse
 */
export interface MsgExecuteContractResponse {
    /**
     * Data contains bytes to returned from the contract
     *
     * @generated from protobuf field: bytes data = 1;
     */
    data: Uint8Array;
}
/**
 * MsgMigrateContract runs a code upgrade/ downgrade for a smart contract
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgMigrateContract
 */
export interface MsgMigrateContract {
    /**
     * Sender is the that actor that signed the messages
     *
     * @generated from protobuf field: string sender = 1;
     */
    sender: string;
    /**
     * Contract is the address of the smart contract
     *
     * @generated from protobuf field: string contract = 2;
     */
    contract: string;
    /**
     * CodeID references the new WASM code
     *
     * @generated from protobuf field: uint64 code_id = 3;
     */
    codeId: string;
    /**
     * Msg json encoded message to be passed to the contract on migration
     *
     * @generated from protobuf field: bytes msg = 4;
     */
    msg: Uint8Array;
}
/**
 * MsgMigrateContractResponse returns contract migration result data.
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgMigrateContractResponse
 */
export interface MsgMigrateContractResponse {
    /**
     * Data contains same raw bytes returned as data from the wasm contract.
     * (May be empty)
     *
     * @generated from protobuf field: bytes data = 1;
     */
    data: Uint8Array;
}
/**
 * MsgUpdateAdmin sets a new admin for a smart contract
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgUpdateAdmin
 */
export interface MsgUpdateAdmin {
    /**
     * Sender is the that actor that signed the messages
     *
     * @generated from protobuf field: string sender = 1;
     */
    sender: string;
    /**
     * NewAdmin address to be set
     *
     * @generated from protobuf field: string new_admin = 2;
     */
    newAdmin: string;
    /**
     * Contract is the address of the smart contract
     *
     * @generated from protobuf field: string contract = 3;
     */
    contract: string;
}
/**
 * MsgUpdateAdminResponse returns empty data
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgUpdateAdminResponse
 */
export interface MsgUpdateAdminResponse {
}
/**
 * MsgClearAdmin removes any admin stored for a smart contract
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgClearAdmin
 */
export interface MsgClearAdmin {
    /**
     * Sender is the actor that signed the messages
     *
     * @generated from protobuf field: string sender = 1;
     */
    sender: string;
    /**
     * Contract is the address of the smart contract
     *
     * @generated from protobuf field: string contract = 3;
     */
    contract: string;
}
/**
 * MsgClearAdminResponse returns empty data
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgClearAdminResponse
 */
export interface MsgClearAdminResponse {
}
/**
 * MsgUpdateInstantiateConfig updates instantiate config for a smart contract
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgUpdateInstantiateConfig
 */
export interface MsgUpdateInstantiateConfig {
    /**
     * Sender is the that actor that signed the messages
     *
     * @generated from protobuf field: string sender = 1;
     */
    sender: string;
    /**
     * CodeID references the stored WASM code
     *
     * @generated from protobuf field: uint64 code_id = 2;
     */
    codeId: string;
    /**
     * NewInstantiatePermission is the new access control
     *
     * @generated from protobuf field: cosmwasm.wasm.v1.AccessConfig new_instantiate_permission = 3;
     */
    newInstantiatePermission?: AccessConfig;
}
/**
 * MsgUpdateInstantiateConfigResponse returns empty data
 *
 * @generated from protobuf message cosmwasm.wasm.v1.MsgUpdateInstantiateConfigResponse
 */
export interface MsgUpdateInstantiateConfigResponse {
}
declare class MsgStoreCode$Type extends MessageType<MsgStoreCode> {
    constructor();
    create(value?: PartialMessage<MsgStoreCode>): MsgStoreCode;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgStoreCode): MsgStoreCode;
    internalBinaryWrite(message: MsgStoreCode, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgStoreCode
 */
export declare const MsgStoreCode: MsgStoreCode$Type;
declare class MsgStoreCodeResponse$Type extends MessageType<MsgStoreCodeResponse> {
    constructor();
    create(value?: PartialMessage<MsgStoreCodeResponse>): MsgStoreCodeResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgStoreCodeResponse): MsgStoreCodeResponse;
    internalBinaryWrite(message: MsgStoreCodeResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgStoreCodeResponse
 */
export declare const MsgStoreCodeResponse: MsgStoreCodeResponse$Type;
declare class MsgInstantiateContract$Type extends MessageType<MsgInstantiateContract> {
    constructor();
    create(value?: PartialMessage<MsgInstantiateContract>): MsgInstantiateContract;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgInstantiateContract): MsgInstantiateContract;
    internalBinaryWrite(message: MsgInstantiateContract, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgInstantiateContract
 */
export declare const MsgInstantiateContract: MsgInstantiateContract$Type;
declare class MsgInstantiateContract2$Type extends MessageType<MsgInstantiateContract2> {
    constructor();
    create(value?: PartialMessage<MsgInstantiateContract2>): MsgInstantiateContract2;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgInstantiateContract2): MsgInstantiateContract2;
    internalBinaryWrite(message: MsgInstantiateContract2, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgInstantiateContract2
 */
export declare const MsgInstantiateContract2: MsgInstantiateContract2$Type;
declare class MsgInstantiateContractResponse$Type extends MessageType<MsgInstantiateContractResponse> {
    constructor();
    create(value?: PartialMessage<MsgInstantiateContractResponse>): MsgInstantiateContractResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgInstantiateContractResponse): MsgInstantiateContractResponse;
    internalBinaryWrite(message: MsgInstantiateContractResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgInstantiateContractResponse
 */
export declare const MsgInstantiateContractResponse: MsgInstantiateContractResponse$Type;
declare class MsgInstantiateContract2Response$Type extends MessageType<MsgInstantiateContract2Response> {
    constructor();
    create(value?: PartialMessage<MsgInstantiateContract2Response>): MsgInstantiateContract2Response;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgInstantiateContract2Response): MsgInstantiateContract2Response;
    internalBinaryWrite(message: MsgInstantiateContract2Response, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgInstantiateContract2Response
 */
export declare const MsgInstantiateContract2Response: MsgInstantiateContract2Response$Type;
declare class MsgExecuteContract$Type extends MessageType<MsgExecuteContract> {
    constructor();
    create(value?: PartialMessage<MsgExecuteContract>): MsgExecuteContract;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgExecuteContract): MsgExecuteContract;
    internalBinaryWrite(message: MsgExecuteContract, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgExecuteContract
 */
export declare const MsgExecuteContract: MsgExecuteContract$Type;
declare class MsgExecuteContractResponse$Type extends MessageType<MsgExecuteContractResponse> {
    constructor();
    create(value?: PartialMessage<MsgExecuteContractResponse>): MsgExecuteContractResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgExecuteContractResponse): MsgExecuteContractResponse;
    internalBinaryWrite(message: MsgExecuteContractResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgExecuteContractResponse
 */
export declare const MsgExecuteContractResponse: MsgExecuteContractResponse$Type;
declare class MsgMigrateContract$Type extends MessageType<MsgMigrateContract> {
    constructor();
    create(value?: PartialMessage<MsgMigrateContract>): MsgMigrateContract;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgMigrateContract): MsgMigrateContract;
    internalBinaryWrite(message: MsgMigrateContract, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgMigrateContract
 */
export declare const MsgMigrateContract: MsgMigrateContract$Type;
declare class MsgMigrateContractResponse$Type extends MessageType<MsgMigrateContractResponse> {
    constructor();
    create(value?: PartialMessage<MsgMigrateContractResponse>): MsgMigrateContractResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgMigrateContractResponse): MsgMigrateContractResponse;
    internalBinaryWrite(message: MsgMigrateContractResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgMigrateContractResponse
 */
export declare const MsgMigrateContractResponse: MsgMigrateContractResponse$Type;
declare class MsgUpdateAdmin$Type extends MessageType<MsgUpdateAdmin> {
    constructor();
    create(value?: PartialMessage<MsgUpdateAdmin>): MsgUpdateAdmin;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgUpdateAdmin): MsgUpdateAdmin;
    internalBinaryWrite(message: MsgUpdateAdmin, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgUpdateAdmin
 */
export declare const MsgUpdateAdmin: MsgUpdateAdmin$Type;
declare class MsgUpdateAdminResponse$Type extends MessageType<MsgUpdateAdminResponse> {
    constructor();
    create(value?: PartialMessage<MsgUpdateAdminResponse>): MsgUpdateAdminResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgUpdateAdminResponse): MsgUpdateAdminResponse;
    internalBinaryWrite(message: MsgUpdateAdminResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgUpdateAdminResponse
 */
export declare const MsgUpdateAdminResponse: MsgUpdateAdminResponse$Type;
declare class MsgClearAdmin$Type extends MessageType<MsgClearAdmin> {
    constructor();
    create(value?: PartialMessage<MsgClearAdmin>): MsgClearAdmin;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgClearAdmin): MsgClearAdmin;
    internalBinaryWrite(message: MsgClearAdmin, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgClearAdmin
 */
export declare const MsgClearAdmin: MsgClearAdmin$Type;
declare class MsgClearAdminResponse$Type extends MessageType<MsgClearAdminResponse> {
    constructor();
    create(value?: PartialMessage<MsgClearAdminResponse>): MsgClearAdminResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgClearAdminResponse): MsgClearAdminResponse;
    internalBinaryWrite(message: MsgClearAdminResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgClearAdminResponse
 */
export declare const MsgClearAdminResponse: MsgClearAdminResponse$Type;
declare class MsgUpdateInstantiateConfig$Type extends MessageType<MsgUpdateInstantiateConfig> {
    constructor();
    create(value?: PartialMessage<MsgUpdateInstantiateConfig>): MsgUpdateInstantiateConfig;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgUpdateInstantiateConfig): MsgUpdateInstantiateConfig;
    internalBinaryWrite(message: MsgUpdateInstantiateConfig, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgUpdateInstantiateConfig
 */
export declare const MsgUpdateInstantiateConfig: MsgUpdateInstantiateConfig$Type;
declare class MsgUpdateInstantiateConfigResponse$Type extends MessageType<MsgUpdateInstantiateConfigResponse> {
    constructor();
    create(value?: PartialMessage<MsgUpdateInstantiateConfigResponse>): MsgUpdateInstantiateConfigResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgUpdateInstantiateConfigResponse): MsgUpdateInstantiateConfigResponse;
    internalBinaryWrite(message: MsgUpdateInstantiateConfigResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmwasm.wasm.v1.MsgUpdateInstantiateConfigResponse
 */
export declare const MsgUpdateInstantiateConfigResponse: MsgUpdateInstantiateConfigResponse$Type;
/**
 * @generated ServiceType for protobuf service cosmwasm.wasm.v1.Msg
 */
export declare const Msg: any;
export {};
