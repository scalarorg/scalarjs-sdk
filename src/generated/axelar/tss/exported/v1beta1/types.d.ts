// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "axelar/tss/exported/v1beta1/types.proto" (package "axelar.tss.exported.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Threshold } from "../../../utils/v1beta1/threshold";
/**
 * KeyRequirement defines requirements for keys
 *
 * @generated from protobuf message axelar.tss.exported.v1beta1.KeyRequirement
 */
export interface KeyRequirement {
    /**
     * @generated from protobuf field: axelar.tss.exported.v1beta1.KeyRole key_role = 1;
     */
    keyRole: KeyRole;
    /**
     * @generated from protobuf field: axelar.tss.exported.v1beta1.KeyType key_type = 2;
     */
    keyType: KeyType;
    /**
     * @generated from protobuf field: axelar.utils.v1beta1.Threshold min_keygen_threshold = 3;
     */
    minKeygenThreshold?: Threshold;
    /**
     * @generated from protobuf field: axelar.utils.v1beta1.Threshold safety_threshold = 4;
     */
    safetyThreshold?: Threshold;
    /**
     * @generated from protobuf field: axelar.tss.exported.v1beta1.KeyShareDistributionPolicy key_share_distribution_policy = 5;
     */
    keyShareDistributionPolicy: KeyShareDistributionPolicy;
    /**
     * @generated from protobuf field: int64 max_total_share_count = 6;
     */
    maxTotalShareCount: string;
    /**
     * @generated from protobuf field: int64 min_total_share_count = 7;
     */
    minTotalShareCount: string;
    /**
     * @generated from protobuf field: axelar.utils.v1beta1.Threshold keygen_voting_threshold = 8;
     */
    keygenVotingThreshold?: Threshold;
    /**
     * @generated from protobuf field: axelar.utils.v1beta1.Threshold sign_voting_threshold = 9;
     */
    signVotingThreshold?: Threshold;
    /**
     * @generated from protobuf field: int64 keygen_timeout = 10;
     */
    keygenTimeout: string;
    /**
     * @generated from protobuf field: int64 sign_timeout = 11;
     */
    signTimeout: string;
}
/**
 * PubKeyInfo holds a pubkey and a signature
 *
 * @generated from protobuf message axelar.tss.exported.v1beta1.SigKeyPair
 */
export interface SigKeyPair {
    /**
     * @generated from protobuf field: bytes pub_key = 1;
     */
    pubKey: Uint8Array;
    /**
     * @generated from protobuf field: bytes signature = 2;
     */
    signature: Uint8Array;
}
/**
 * @generated from protobuf enum axelar.tss.exported.v1beta1.KeyRole
 */
export declare enum KeyRole {
    /**
     * @generated from protobuf enum value: KEY_ROLE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: KEY_ROLE_MASTER_KEY = 1;
     */
    MASTER_KEY = 1,
    /**
     * @generated from protobuf enum value: KEY_ROLE_SECONDARY_KEY = 2;
     */
    SECONDARY_KEY = 2,
    /**
     * @generated from protobuf enum value: KEY_ROLE_EXTERNAL_KEY = 3;
     */
    EXTERNAL_KEY = 3
}
/**
 * @generated from protobuf enum axelar.tss.exported.v1beta1.KeyType
 */
export declare enum KeyType {
    /**
     * @generated from protobuf enum value: KEY_TYPE_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: KEY_TYPE_NONE = 1;
     */
    NONE = 1,
    /**
     * @generated from protobuf enum value: KEY_TYPE_THRESHOLD = 2;
     */
    THRESHOLD = 2,
    /**
     * @generated from protobuf enum value: KEY_TYPE_MULTISIG = 3;
     */
    MULTISIG = 3
}
/**
 * @generated from protobuf enum axelar.tss.exported.v1beta1.KeyShareDistributionPolicy
 */
export declare enum KeyShareDistributionPolicy {
    /**
     * @generated from protobuf enum value: KEY_SHARE_DISTRIBUTION_POLICY_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: KEY_SHARE_DISTRIBUTION_POLICY_WEIGHTED_BY_STAKE = 1;
     */
    WEIGHTED_BY_STAKE = 1,
    /**
     * @generated from protobuf enum value: KEY_SHARE_DISTRIBUTION_POLICY_ONE_PER_VALIDATOR = 2;
     */
    ONE_PER_VALIDATOR = 2
}
declare class KeyRequirement$Type extends MessageType<KeyRequirement> {
    constructor();
    create(value?: PartialMessage<KeyRequirement>): KeyRequirement;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeyRequirement): KeyRequirement;
    internalBinaryWrite(message: KeyRequirement, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.tss.exported.v1beta1.KeyRequirement
 */
export declare const KeyRequirement: KeyRequirement$Type;
declare class SigKeyPair$Type extends MessageType<SigKeyPair> {
    constructor();
    create(value?: PartialMessage<SigKeyPair>): SigKeyPair;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SigKeyPair): SigKeyPair;
    internalBinaryWrite(message: SigKeyPair, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.tss.exported.v1beta1.SigKeyPair
 */
export declare const SigKeyPair: SigKeyPair$Type;
export {};
