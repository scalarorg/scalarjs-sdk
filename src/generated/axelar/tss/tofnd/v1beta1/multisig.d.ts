// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "axelar/tss/tofnd/v1beta1/multisig.proto" (package "axelar.tss.tofnd.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message axelar.tss.tofnd.v1beta1.KeygenRequest
 */
export interface KeygenRequest {
    /**
     * @generated from protobuf field: string key_uid = 1;
     */
    keyUid: string;
    /**
     * @generated from protobuf field: string party_uid = 2;
     */
    partyUid: string;
}
/**
 * @generated from protobuf message axelar.tss.tofnd.v1beta1.KeygenResponse
 */
export interface KeygenResponse {
    /**
     * @generated from protobuf oneof: keygen_response
     */
    keygenResponse: {
        oneofKind: "pubKey";
        /**
         * @generated from protobuf field: bytes pub_key = 1;
         */
        pubKey: Uint8Array;
    } | {
        oneofKind: "error";
        /**
         * @generated from protobuf field: string error = 2;
         */
        error: string;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message axelar.tss.tofnd.v1beta1.SignRequest
 */
export interface SignRequest {
    /**
     * @generated from protobuf field: string key_uid = 1;
     */
    keyUid: string;
    /**
     * @generated from protobuf field: bytes msg_to_sign = 2;
     */
    msgToSign: Uint8Array;
    /**
     * @generated from protobuf field: string party_uid = 3;
     */
    partyUid: string;
    /**
     * @generated from protobuf field: bytes pub_key = 4;
     */
    pubKey: Uint8Array;
}
/**
 * @generated from protobuf message axelar.tss.tofnd.v1beta1.SignResponse
 */
export interface SignResponse {
    /**
     * @generated from protobuf oneof: sign_response
     */
    signResponse: {
        oneofKind: "signature";
        /**
         * @generated from protobuf field: bytes signature = 1;
         */
        signature: Uint8Array;
    } | {
        oneofKind: "error";
        /**
         * @generated from protobuf field: string error = 2;
         */
        error: string;
    } | {
        oneofKind: undefined;
    };
}
declare class KeygenRequest$Type extends MessageType<KeygenRequest> {
    constructor();
    create(value?: PartialMessage<KeygenRequest>): KeygenRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeygenRequest): KeygenRequest;
    internalBinaryWrite(message: KeygenRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.tss.tofnd.v1beta1.KeygenRequest
 */
export declare const KeygenRequest: KeygenRequest$Type;
declare class KeygenResponse$Type extends MessageType<KeygenResponse> {
    constructor();
    create(value?: PartialMessage<KeygenResponse>): KeygenResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: KeygenResponse): KeygenResponse;
    internalBinaryWrite(message: KeygenResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.tss.tofnd.v1beta1.KeygenResponse
 */
export declare const KeygenResponse: KeygenResponse$Type;
declare class SignRequest$Type extends MessageType<SignRequest> {
    constructor();
    create(value?: PartialMessage<SignRequest>): SignRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SignRequest): SignRequest;
    internalBinaryWrite(message: SignRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.tss.tofnd.v1beta1.SignRequest
 */
export declare const SignRequest: SignRequest$Type;
declare class SignResponse$Type extends MessageType<SignResponse> {
    constructor();
    create(value?: PartialMessage<SignResponse>): SignResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SignResponse): SignResponse;
    internalBinaryWrite(message: SignResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.tss.tofnd.v1beta1.SignResponse
 */
export declare const SignResponse: SignResponse$Type;
export {};
