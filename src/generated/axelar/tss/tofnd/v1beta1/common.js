// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "axelar/tss/tofnd/v1beta1/common.proto" (package "axelar.tss.tofnd.v1beta1", syntax proto3)
// tslint:disable
import { WireType } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf enum axelar.tss.tofnd.v1beta1.KeyPresenceResponse.Response
 */
export var KeyPresenceResponse_Response;
(function (KeyPresenceResponse_Response) {
    /**
     * @generated from protobuf enum value: RESPONSE_UNSPECIFIED = 0;
     */
    KeyPresenceResponse_Response[KeyPresenceResponse_Response["UNSPECIFIED"] = 0] = "UNSPECIFIED";
    /**
     * @generated from protobuf enum value: RESPONSE_PRESENT = 1;
     */
    KeyPresenceResponse_Response[KeyPresenceResponse_Response["PRESENT"] = 1] = "PRESENT";
    /**
     * @generated from protobuf enum value: RESPONSE_ABSENT = 2;
     */
    KeyPresenceResponse_Response[KeyPresenceResponse_Response["ABSENT"] = 2] = "ABSENT";
    /**
     * @generated from protobuf enum value: RESPONSE_FAIL = 3;
     */
    KeyPresenceResponse_Response[KeyPresenceResponse_Response["FAIL"] = 3] = "FAIL";
})(KeyPresenceResponse_Response || (KeyPresenceResponse_Response = {}));
// @generated message type with reflection information, may provide speed optimized methods
class KeyPresenceRequest$Type extends MessageType {
    constructor() {
        super("axelar.tss.tofnd.v1beta1.KeyPresenceRequest", [
            { no: 1, name: "key_uid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "pub_key", kind: "scalar", T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.keyUid = "";
        message.pubKey = new Uint8Array(0);
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string key_uid */ 1:
                    message.keyUid = reader.string();
                    break;
                case /* bytes pub_key */ 2:
                    message.pubKey = reader.bytes();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string key_uid = 1; */
        if (message.keyUid !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.keyUid);
        /* bytes pub_key = 2; */
        if (message.pubKey.length)
            writer.tag(2, WireType.LengthDelimited).bytes(message.pubKey);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message axelar.tss.tofnd.v1beta1.KeyPresenceRequest
 */
export const KeyPresenceRequest = new KeyPresenceRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class KeyPresenceResponse$Type extends MessageType {
    constructor() {
        super("axelar.tss.tofnd.v1beta1.KeyPresenceResponse", [
            { no: 1, name: "response", kind: "enum", T: () => ["axelar.tss.tofnd.v1beta1.KeyPresenceResponse.Response", KeyPresenceResponse_Response, "RESPONSE_"] }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.response = 0;
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* axelar.tss.tofnd.v1beta1.KeyPresenceResponse.Response response */ 1:
                    message.response = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* axelar.tss.tofnd.v1beta1.KeyPresenceResponse.Response response = 1; */
        if (message.response !== 0)
            writer.tag(1, WireType.Varint).int32(message.response);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message axelar.tss.tofnd.v1beta1.KeyPresenceResponse
 */
export const KeyPresenceResponse = new KeyPresenceResponse$Type();
