// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "axelar/auxiliary/v1beta1/events.proto" (package "axelar.auxiliary.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message axelar.auxiliary.v1beta1.BatchedMessageFailed
 */
export interface BatchedMessageFailed {
    /**
     * @generated from protobuf field: int32 index = 1;
     */
    index: number;
    /**
     * @generated from protobuf field: string error = 2;
     */
    error: string;
}
declare class BatchedMessageFailed$Type extends MessageType<BatchedMessageFailed> {
    constructor();
    create(value?: PartialMessage<BatchedMessageFailed>): BatchedMessageFailed;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BatchedMessageFailed): BatchedMessageFailed;
    internalBinaryWrite(message: BatchedMessageFailed, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.auxiliary.v1beta1.BatchedMessageFailed
 */
export declare const BatchedMessageFailed: BatchedMessageFailed$Type;
export {};
