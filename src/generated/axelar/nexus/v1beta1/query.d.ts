// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "axelar/nexus/v1beta1/query.proto" (package "axelar.nexus.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Params } from "./params";
import { GeneralMessage } from "../exported/v1beta1/types";
import { Duration } from "../../../google/protobuf/duration";
import { ChainState } from "./types";
import { Coin } from "../../../cosmos/base/v1beta1/coin";
import { FeeInfo } from "../exported/v1beta1/types";
import { PageResponse } from "../../../cosmos/base/query/v1beta1/pagination";
import { CrossChainTransfer } from "../exported/v1beta1/types";
import { PageRequest } from "../../../cosmos/base/query/v1beta1/pagination";
import { TransferState } from "../exported/v1beta1/types";
/**
 * ChainMaintainersRequest represents a message that queries
 * the chain maintainers for the specified chain
 *
 * @generated from protobuf message axelar.nexus.v1beta1.ChainMaintainersRequest
 */
export interface ChainMaintainersRequest {
    /**
     * @generated from protobuf field: string chain = 1;
     */
    chain: string;
}
/**
 * @generated from protobuf message axelar.nexus.v1beta1.ChainMaintainersResponse
 */
export interface ChainMaintainersResponse {
    /**
     * @generated from protobuf field: repeated bytes maintainers = 1;
     */
    maintainers: Uint8Array[];
}
/**
 * LatestDepositAddressRequest represents a message that queries a deposit
 * address by recipient address
 *
 * @generated from protobuf message axelar.nexus.v1beta1.LatestDepositAddressRequest
 */
export interface LatestDepositAddressRequest {
    /**
     * @generated from protobuf field: string recipient_addr = 1;
     */
    recipientAddr: string;
    /**
     * @generated from protobuf field: string recipient_chain = 2;
     */
    recipientChain: string;
    /**
     * @generated from protobuf field: string deposit_chain = 3;
     */
    depositChain: string;
}
/**
 * @generated from protobuf message axelar.nexus.v1beta1.LatestDepositAddressResponse
 */
export interface LatestDepositAddressResponse {
    /**
     * @generated from protobuf field: string deposit_addr = 1;
     */
    depositAddr: string;
}
/**
 * TransfersForChainRequest represents a message that queries the
 * transfers for the specified chain
 *
 * @generated from protobuf message axelar.nexus.v1beta1.TransfersForChainRequest
 */
export interface TransfersForChainRequest {
    /**
     * @generated from protobuf field: string chain = 1;
     */
    chain: string;
    /**
     * @generated from protobuf field: axelar.nexus.exported.v1beta1.TransferState state = 2;
     */
    state: TransferState;
    /**
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 3;
     */
    pagination?: PageRequest;
}
/**
 * @generated from protobuf message axelar.nexus.v1beta1.TransfersForChainResponse
 */
export interface TransfersForChainResponse {
    /**
     * @generated from protobuf field: repeated axelar.nexus.exported.v1beta1.CrossChainTransfer transfers = 1;
     */
    transfers: CrossChainTransfer[];
    /**
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * FeeInfoRequest represents a message that queries the transfer fees associated
 * to an asset on a chain
 *
 * @generated from protobuf message axelar.nexus.v1beta1.FeeInfoRequest
 */
export interface FeeInfoRequest {
    /**
     * @generated from protobuf field: string chain = 1;
     */
    chain: string;
    /**
     * @generated from protobuf field: string asset = 2;
     */
    asset: string;
}
/**
 * @generated from protobuf message axelar.nexus.v1beta1.FeeInfoResponse
 */
export interface FeeInfoResponse {
    /**
     * @generated from protobuf field: axelar.nexus.exported.v1beta1.FeeInfo fee_info = 1;
     */
    feeInfo?: FeeInfo;
}
/**
 * TransferFeeRequest represents a message that queries the fees charged by
 * the network for a cross-chain transfer
 *
 * @generated from protobuf message axelar.nexus.v1beta1.TransferFeeRequest
 */
export interface TransferFeeRequest {
    /**
     * @generated from protobuf field: string source_chain = 1;
     */
    sourceChain: string;
    /**
     * @generated from protobuf field: string destination_chain = 2;
     */
    destinationChain: string;
    /**
     * @generated from protobuf field: string amount = 3;
     */
    amount: string;
}
/**
 * @generated from protobuf message axelar.nexus.v1beta1.TransferFeeResponse
 */
export interface TransferFeeResponse {
    /**
     * @generated from protobuf field: cosmos.base.v1beta1.Coin fee = 1;
     */
    fee?: Coin;
}
/**
 * ChainsRequest represents a message that queries the chains
 * registered on the network
 *
 * @generated from protobuf message axelar.nexus.v1beta1.ChainsRequest
 */
export interface ChainsRequest {
    /**
     * @generated from protobuf field: axelar.nexus.v1beta1.ChainStatus status = 1;
     */
    status: ChainStatus;
}
/**
 * @generated from protobuf message axelar.nexus.v1beta1.ChainsResponse
 */
export interface ChainsResponse {
    /**
     * @generated from protobuf field: repeated string chains = 1;
     */
    chains: string[];
}
/**
 * AssetsRequest represents a message that queries the registered assets of a
 * chain
 *
 * @generated from protobuf message axelar.nexus.v1beta1.AssetsRequest
 */
export interface AssetsRequest {
    /**
     * @generated from protobuf field: string chain = 1;
     */
    chain: string;
}
/**
 * @generated from protobuf message axelar.nexus.v1beta1.AssetsResponse
 */
export interface AssetsResponse {
    /**
     * @generated from protobuf field: repeated string assets = 1;
     */
    assets: string[];
}
/**
 * ChainStateRequest represents a message that queries the state of a chain
 * registered on the network
 *
 * @generated from protobuf message axelar.nexus.v1beta1.ChainStateRequest
 */
export interface ChainStateRequest {
    /**
     * @generated from protobuf field: string chain = 1;
     */
    chain: string;
}
/**
 * @generated from protobuf message axelar.nexus.v1beta1.ChainStateResponse
 */
export interface ChainStateResponse {
    /**
     * @generated from protobuf field: axelar.nexus.v1beta1.ChainState state = 1;
     */
    state?: ChainState;
}
/**
 * ChainsByAssetRequest represents a message that queries the chains
 * that support an asset on the network
 *
 * @generated from protobuf message axelar.nexus.v1beta1.ChainsByAssetRequest
 */
export interface ChainsByAssetRequest {
    /**
     * @generated from protobuf field: string asset = 1;
     */
    asset: string;
}
/**
 * @generated from protobuf message axelar.nexus.v1beta1.ChainsByAssetResponse
 */
export interface ChainsByAssetResponse {
    /**
     * @generated from protobuf field: repeated string chains = 1;
     */
    chains: string[];
}
/**
 * RecipientAddressRequest represents a message that queries the registered
 * recipient address for a given deposit address
 *
 * @generated from protobuf message axelar.nexus.v1beta1.RecipientAddressRequest
 */
export interface RecipientAddressRequest {
    /**
     * @generated from protobuf field: string deposit_addr = 1;
     */
    depositAddr: string;
    /**
     * @generated from protobuf field: string deposit_chain = 2;
     */
    depositChain: string;
}
/**
 * @generated from protobuf message axelar.nexus.v1beta1.RecipientAddressResponse
 */
export interface RecipientAddressResponse {
    /**
     * @generated from protobuf field: string recipient_addr = 1;
     */
    recipientAddr: string;
    /**
     * @generated from protobuf field: string recipient_chain = 2;
     */
    recipientChain: string;
}
/**
 * TransferRateLimitRequest represents a message that queries the registered
 * transfer rate limit and current transfer amounts for a given chain and asset
 *
 * @generated from protobuf message axelar.nexus.v1beta1.TransferRateLimitRequest
 */
export interface TransferRateLimitRequest {
    /**
     * @generated from protobuf field: string chain = 1;
     */
    chain: string;
    /**
     * @generated from protobuf field: string asset = 2;
     */
    asset: string;
}
/**
 * @generated from protobuf message axelar.nexus.v1beta1.TransferRateLimitResponse
 */
export interface TransferRateLimitResponse {
    /**
     * @generated from protobuf field: axelar.nexus.v1beta1.TransferRateLimit transfer_rate_limit = 1;
     */
    transferRateLimit?: TransferRateLimit;
}
/**
 * @generated from protobuf message axelar.nexus.v1beta1.TransferRateLimit
 */
export interface TransferRateLimit {
    /**
     * @generated from protobuf field: bytes limit = 1;
     */
    limit: Uint8Array;
    /**
     * @generated from protobuf field: google.protobuf.Duration window = 2;
     */
    window?: Duration;
    /**
     * @deprecated
     * @generated from protobuf field: bytes incoming = 3 [deprecated = true];
     */
    incoming: Uint8Array;
    /**
     * @deprecated
     * @generated from protobuf field: bytes outgoing = 4 [deprecated = true];
     */
    outgoing: Uint8Array;
    /**
     * time_left indicates the time left in the rate limit window
     *
     * @generated from protobuf field: google.protobuf.Duration time_left = 5;
     */
    timeLeft?: Duration;
    /**
     * @generated from protobuf field: bytes from = 6;
     */
    from: Uint8Array;
    /**
     * @generated from protobuf field: bytes to = 7;
     */
    to: Uint8Array;
}
/**
 * @generated from protobuf message axelar.nexus.v1beta1.MessageRequest
 */
export interface MessageRequest {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
}
/**
 * @generated from protobuf message axelar.nexus.v1beta1.MessageResponse
 */
export interface MessageResponse {
    /**
     * @generated from protobuf field: axelar.nexus.exported.v1beta1.GeneralMessage message = 1;
     */
    message?: GeneralMessage;
}
/**
 * ParamsRequest represents a message that queries the params
 *
 * @generated from protobuf message axelar.nexus.v1beta1.ParamsRequest
 */
export interface ParamsRequest {
}
/**
 * @generated from protobuf message axelar.nexus.v1beta1.ParamsResponse
 */
export interface ParamsResponse {
    /**
     * @generated from protobuf field: axelar.nexus.v1beta1.Params params = 1;
     */
    params?: Params;
}
/**
 * @generated from protobuf enum axelar.nexus.v1beta1.ChainStatus
 */
export declare enum ChainStatus {
    /**
     * @generated from protobuf enum value: CHAIN_STATUS_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: CHAIN_STATUS_ACTIVATED = 1;
     */
    ACTIVATED = 1,
    /**
     * @generated from protobuf enum value: CHAIN_STATUS_DEACTIVATED = 2;
     */
    DEACTIVATED = 2
}
declare class ChainMaintainersRequest$Type extends MessageType<ChainMaintainersRequest> {
    constructor();
    create(value?: PartialMessage<ChainMaintainersRequest>): ChainMaintainersRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChainMaintainersRequest): ChainMaintainersRequest;
    internalBinaryWrite(message: ChainMaintainersRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.ChainMaintainersRequest
 */
export declare const ChainMaintainersRequest: ChainMaintainersRequest$Type;
declare class ChainMaintainersResponse$Type extends MessageType<ChainMaintainersResponse> {
    constructor();
    create(value?: PartialMessage<ChainMaintainersResponse>): ChainMaintainersResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChainMaintainersResponse): ChainMaintainersResponse;
    internalBinaryWrite(message: ChainMaintainersResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.ChainMaintainersResponse
 */
export declare const ChainMaintainersResponse: ChainMaintainersResponse$Type;
declare class LatestDepositAddressRequest$Type extends MessageType<LatestDepositAddressRequest> {
    constructor();
    create(value?: PartialMessage<LatestDepositAddressRequest>): LatestDepositAddressRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LatestDepositAddressRequest): LatestDepositAddressRequest;
    internalBinaryWrite(message: LatestDepositAddressRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.LatestDepositAddressRequest
 */
export declare const LatestDepositAddressRequest: LatestDepositAddressRequest$Type;
declare class LatestDepositAddressResponse$Type extends MessageType<LatestDepositAddressResponse> {
    constructor();
    create(value?: PartialMessage<LatestDepositAddressResponse>): LatestDepositAddressResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LatestDepositAddressResponse): LatestDepositAddressResponse;
    internalBinaryWrite(message: LatestDepositAddressResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.LatestDepositAddressResponse
 */
export declare const LatestDepositAddressResponse: LatestDepositAddressResponse$Type;
declare class TransfersForChainRequest$Type extends MessageType<TransfersForChainRequest> {
    constructor();
    create(value?: PartialMessage<TransfersForChainRequest>): TransfersForChainRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TransfersForChainRequest): TransfersForChainRequest;
    internalBinaryWrite(message: TransfersForChainRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.TransfersForChainRequest
 */
export declare const TransfersForChainRequest: TransfersForChainRequest$Type;
declare class TransfersForChainResponse$Type extends MessageType<TransfersForChainResponse> {
    constructor();
    create(value?: PartialMessage<TransfersForChainResponse>): TransfersForChainResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TransfersForChainResponse): TransfersForChainResponse;
    internalBinaryWrite(message: TransfersForChainResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.TransfersForChainResponse
 */
export declare const TransfersForChainResponse: TransfersForChainResponse$Type;
declare class FeeInfoRequest$Type extends MessageType<FeeInfoRequest> {
    constructor();
    create(value?: PartialMessage<FeeInfoRequest>): FeeInfoRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FeeInfoRequest): FeeInfoRequest;
    internalBinaryWrite(message: FeeInfoRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.FeeInfoRequest
 */
export declare const FeeInfoRequest: FeeInfoRequest$Type;
declare class FeeInfoResponse$Type extends MessageType<FeeInfoResponse> {
    constructor();
    create(value?: PartialMessage<FeeInfoResponse>): FeeInfoResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FeeInfoResponse): FeeInfoResponse;
    internalBinaryWrite(message: FeeInfoResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.FeeInfoResponse
 */
export declare const FeeInfoResponse: FeeInfoResponse$Type;
declare class TransferFeeRequest$Type extends MessageType<TransferFeeRequest> {
    constructor();
    create(value?: PartialMessage<TransferFeeRequest>): TransferFeeRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TransferFeeRequest): TransferFeeRequest;
    internalBinaryWrite(message: TransferFeeRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.TransferFeeRequest
 */
export declare const TransferFeeRequest: TransferFeeRequest$Type;
declare class TransferFeeResponse$Type extends MessageType<TransferFeeResponse> {
    constructor();
    create(value?: PartialMessage<TransferFeeResponse>): TransferFeeResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TransferFeeResponse): TransferFeeResponse;
    internalBinaryWrite(message: TransferFeeResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.TransferFeeResponse
 */
export declare const TransferFeeResponse: TransferFeeResponse$Type;
declare class ChainsRequest$Type extends MessageType<ChainsRequest> {
    constructor();
    create(value?: PartialMessage<ChainsRequest>): ChainsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChainsRequest): ChainsRequest;
    internalBinaryWrite(message: ChainsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.ChainsRequest
 */
export declare const ChainsRequest: ChainsRequest$Type;
declare class ChainsResponse$Type extends MessageType<ChainsResponse> {
    constructor();
    create(value?: PartialMessage<ChainsResponse>): ChainsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChainsResponse): ChainsResponse;
    internalBinaryWrite(message: ChainsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.ChainsResponse
 */
export declare const ChainsResponse: ChainsResponse$Type;
declare class AssetsRequest$Type extends MessageType<AssetsRequest> {
    constructor();
    create(value?: PartialMessage<AssetsRequest>): AssetsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AssetsRequest): AssetsRequest;
    internalBinaryWrite(message: AssetsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.AssetsRequest
 */
export declare const AssetsRequest: AssetsRequest$Type;
declare class AssetsResponse$Type extends MessageType<AssetsResponse> {
    constructor();
    create(value?: PartialMessage<AssetsResponse>): AssetsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AssetsResponse): AssetsResponse;
    internalBinaryWrite(message: AssetsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.AssetsResponse
 */
export declare const AssetsResponse: AssetsResponse$Type;
declare class ChainStateRequest$Type extends MessageType<ChainStateRequest> {
    constructor();
    create(value?: PartialMessage<ChainStateRequest>): ChainStateRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChainStateRequest): ChainStateRequest;
    internalBinaryWrite(message: ChainStateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.ChainStateRequest
 */
export declare const ChainStateRequest: ChainStateRequest$Type;
declare class ChainStateResponse$Type extends MessageType<ChainStateResponse> {
    constructor();
    create(value?: PartialMessage<ChainStateResponse>): ChainStateResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChainStateResponse): ChainStateResponse;
    internalBinaryWrite(message: ChainStateResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.ChainStateResponse
 */
export declare const ChainStateResponse: ChainStateResponse$Type;
declare class ChainsByAssetRequest$Type extends MessageType<ChainsByAssetRequest> {
    constructor();
    create(value?: PartialMessage<ChainsByAssetRequest>): ChainsByAssetRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChainsByAssetRequest): ChainsByAssetRequest;
    internalBinaryWrite(message: ChainsByAssetRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.ChainsByAssetRequest
 */
export declare const ChainsByAssetRequest: ChainsByAssetRequest$Type;
declare class ChainsByAssetResponse$Type extends MessageType<ChainsByAssetResponse> {
    constructor();
    create(value?: PartialMessage<ChainsByAssetResponse>): ChainsByAssetResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChainsByAssetResponse): ChainsByAssetResponse;
    internalBinaryWrite(message: ChainsByAssetResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.ChainsByAssetResponse
 */
export declare const ChainsByAssetResponse: ChainsByAssetResponse$Type;
declare class RecipientAddressRequest$Type extends MessageType<RecipientAddressRequest> {
    constructor();
    create(value?: PartialMessage<RecipientAddressRequest>): RecipientAddressRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RecipientAddressRequest): RecipientAddressRequest;
    internalBinaryWrite(message: RecipientAddressRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.RecipientAddressRequest
 */
export declare const RecipientAddressRequest: RecipientAddressRequest$Type;
declare class RecipientAddressResponse$Type extends MessageType<RecipientAddressResponse> {
    constructor();
    create(value?: PartialMessage<RecipientAddressResponse>): RecipientAddressResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RecipientAddressResponse): RecipientAddressResponse;
    internalBinaryWrite(message: RecipientAddressResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.RecipientAddressResponse
 */
export declare const RecipientAddressResponse: RecipientAddressResponse$Type;
declare class TransferRateLimitRequest$Type extends MessageType<TransferRateLimitRequest> {
    constructor();
    create(value?: PartialMessage<TransferRateLimitRequest>): TransferRateLimitRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TransferRateLimitRequest): TransferRateLimitRequest;
    internalBinaryWrite(message: TransferRateLimitRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.TransferRateLimitRequest
 */
export declare const TransferRateLimitRequest: TransferRateLimitRequest$Type;
declare class TransferRateLimitResponse$Type extends MessageType<TransferRateLimitResponse> {
    constructor();
    create(value?: PartialMessage<TransferRateLimitResponse>): TransferRateLimitResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TransferRateLimitResponse): TransferRateLimitResponse;
    internalBinaryWrite(message: TransferRateLimitResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.TransferRateLimitResponse
 */
export declare const TransferRateLimitResponse: TransferRateLimitResponse$Type;
declare class TransferRateLimit$Type extends MessageType<TransferRateLimit> {
    constructor();
    create(value?: PartialMessage<TransferRateLimit>): TransferRateLimit;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TransferRateLimit): TransferRateLimit;
    internalBinaryWrite(message: TransferRateLimit, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.TransferRateLimit
 */
export declare const TransferRateLimit: TransferRateLimit$Type;
declare class MessageRequest$Type extends MessageType<MessageRequest> {
    constructor();
    create(value?: PartialMessage<MessageRequest>): MessageRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MessageRequest): MessageRequest;
    internalBinaryWrite(message: MessageRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.MessageRequest
 */
export declare const MessageRequest: MessageRequest$Type;
declare class MessageResponse$Type extends MessageType<MessageResponse> {
    constructor();
    create(value?: PartialMessage<MessageResponse>): MessageResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MessageResponse): MessageResponse;
    internalBinaryWrite(message: MessageResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.MessageResponse
 */
export declare const MessageResponse: MessageResponse$Type;
declare class ParamsRequest$Type extends MessageType<ParamsRequest> {
    constructor();
    create(value?: PartialMessage<ParamsRequest>): ParamsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ParamsRequest): ParamsRequest;
    internalBinaryWrite(message: ParamsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.ParamsRequest
 */
export declare const ParamsRequest: ParamsRequest$Type;
declare class ParamsResponse$Type extends MessageType<ParamsResponse> {
    constructor();
    create(value?: PartialMessage<ParamsResponse>): ParamsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ParamsResponse): ParamsResponse;
    internalBinaryWrite(message: ParamsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.nexus.v1beta1.ParamsResponse
 */
export declare const ParamsResponse: ParamsResponse$Type;
export {};
