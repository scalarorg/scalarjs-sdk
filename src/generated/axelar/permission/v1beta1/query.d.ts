// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "axelar/permission/v1beta1/query.proto" (package "axelar.permission.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Params } from "./params";
import { LegacyAminoPubKey } from "../../../cosmos/crypto/multisig/keys";
/**
 * QueryGovernanceKeyRequest is the request type for the
 * Query/GovernanceKey RPC method
 *
 * @generated from protobuf message axelar.permission.v1beta1.QueryGovernanceKeyRequest
 */
export interface QueryGovernanceKeyRequest {
}
/**
 * QueryGovernanceKeyResponse is the response type for the
 * Query/GovernanceKey RPC method
 *
 * @generated from protobuf message axelar.permission.v1beta1.QueryGovernanceKeyResponse
 */
export interface QueryGovernanceKeyResponse {
    /**
     * @generated from protobuf field: cosmos.crypto.multisig.LegacyAminoPubKey governance_key = 1;
     */
    governanceKey?: LegacyAminoPubKey;
}
/**
 * ParamsRequest represents a message that queries the params
 *
 * @generated from protobuf message axelar.permission.v1beta1.ParamsRequest
 */
export interface ParamsRequest {
}
/**
 * @generated from protobuf message axelar.permission.v1beta1.ParamsResponse
 */
export interface ParamsResponse {
    /**
     * @generated from protobuf field: axelar.permission.v1beta1.Params params = 1;
     */
    params?: Params;
}
declare class QueryGovernanceKeyRequest$Type extends MessageType<QueryGovernanceKeyRequest> {
    constructor();
    create(value?: PartialMessage<QueryGovernanceKeyRequest>): QueryGovernanceKeyRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGovernanceKeyRequest): QueryGovernanceKeyRequest;
    internalBinaryWrite(message: QueryGovernanceKeyRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.permission.v1beta1.QueryGovernanceKeyRequest
 */
export declare const QueryGovernanceKeyRequest: QueryGovernanceKeyRequest$Type;
declare class QueryGovernanceKeyResponse$Type extends MessageType<QueryGovernanceKeyResponse> {
    constructor();
    create(value?: PartialMessage<QueryGovernanceKeyResponse>): QueryGovernanceKeyResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGovernanceKeyResponse): QueryGovernanceKeyResponse;
    internalBinaryWrite(message: QueryGovernanceKeyResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.permission.v1beta1.QueryGovernanceKeyResponse
 */
export declare const QueryGovernanceKeyResponse: QueryGovernanceKeyResponse$Type;
declare class ParamsRequest$Type extends MessageType<ParamsRequest> {
    constructor();
    create(value?: PartialMessage<ParamsRequest>): ParamsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ParamsRequest): ParamsRequest;
    internalBinaryWrite(message: ParamsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.permission.v1beta1.ParamsRequest
 */
export declare const ParamsRequest: ParamsRequest$Type;
declare class ParamsResponse$Type extends MessageType<ParamsResponse> {
    constructor();
    create(value?: PartialMessage<ParamsResponse>): ParamsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ParamsResponse): ParamsResponse;
    internalBinaryWrite(message: ParamsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.permission.v1beta1.ParamsResponse
 */
export declare const ParamsResponse: ParamsResponse$Type;
export {};
