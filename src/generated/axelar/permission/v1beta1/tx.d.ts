// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "axelar/permission/v1beta1/tx.proto" (package "axelar.permission.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { LegacyAminoPubKey } from "../../../cosmos/crypto/multisig/keys";
/**
 * @generated from protobuf message axelar.permission.v1beta1.UpdateGovernanceKeyRequest
 */
export interface UpdateGovernanceKeyRequest {
    /**
     * @generated from protobuf field: bytes sender = 1;
     */
    sender: Uint8Array;
    /**
     * @generated from protobuf field: cosmos.crypto.multisig.LegacyAminoPubKey governance_key = 2;
     */
    governanceKey?: LegacyAminoPubKey;
}
/**
 * @generated from protobuf message axelar.permission.v1beta1.UpdateGovernanceKeyResponse
 */
export interface UpdateGovernanceKeyResponse {
}
/**
 * MsgRegisterController represents a message to register a controller account
 *
 * @generated from protobuf message axelar.permission.v1beta1.RegisterControllerRequest
 */
export interface RegisterControllerRequest {
    /**
     * @generated from protobuf field: bytes sender = 1;
     */
    sender: Uint8Array;
    /**
     * @generated from protobuf field: bytes controller = 2;
     */
    controller: Uint8Array;
}
/**
 * @generated from protobuf message axelar.permission.v1beta1.RegisterControllerResponse
 */
export interface RegisterControllerResponse {
}
/**
 * DeregisterController represents a message to deregister a controller account
 *
 * @generated from protobuf message axelar.permission.v1beta1.DeregisterControllerRequest
 */
export interface DeregisterControllerRequest {
    /**
     * @generated from protobuf field: bytes sender = 1;
     */
    sender: Uint8Array;
    /**
     * @generated from protobuf field: bytes controller = 2;
     */
    controller: Uint8Array;
}
/**
 * @generated from protobuf message axelar.permission.v1beta1.DeregisterControllerResponse
 */
export interface DeregisterControllerResponse {
}
declare class UpdateGovernanceKeyRequest$Type extends MessageType<UpdateGovernanceKeyRequest> {
    constructor();
    create(value?: PartialMessage<UpdateGovernanceKeyRequest>): UpdateGovernanceKeyRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdateGovernanceKeyRequest): UpdateGovernanceKeyRequest;
    internalBinaryWrite(message: UpdateGovernanceKeyRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.permission.v1beta1.UpdateGovernanceKeyRequest
 */
export declare const UpdateGovernanceKeyRequest: UpdateGovernanceKeyRequest$Type;
declare class UpdateGovernanceKeyResponse$Type extends MessageType<UpdateGovernanceKeyResponse> {
    constructor();
    create(value?: PartialMessage<UpdateGovernanceKeyResponse>): UpdateGovernanceKeyResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdateGovernanceKeyResponse): UpdateGovernanceKeyResponse;
    internalBinaryWrite(message: UpdateGovernanceKeyResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.permission.v1beta1.UpdateGovernanceKeyResponse
 */
export declare const UpdateGovernanceKeyResponse: UpdateGovernanceKeyResponse$Type;
declare class RegisterControllerRequest$Type extends MessageType<RegisterControllerRequest> {
    constructor();
    create(value?: PartialMessage<RegisterControllerRequest>): RegisterControllerRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RegisterControllerRequest): RegisterControllerRequest;
    internalBinaryWrite(message: RegisterControllerRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.permission.v1beta1.RegisterControllerRequest
 */
export declare const RegisterControllerRequest: RegisterControllerRequest$Type;
declare class RegisterControllerResponse$Type extends MessageType<RegisterControllerResponse> {
    constructor();
    create(value?: PartialMessage<RegisterControllerResponse>): RegisterControllerResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RegisterControllerResponse): RegisterControllerResponse;
    internalBinaryWrite(message: RegisterControllerResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.permission.v1beta1.RegisterControllerResponse
 */
export declare const RegisterControllerResponse: RegisterControllerResponse$Type;
declare class DeregisterControllerRequest$Type extends MessageType<DeregisterControllerRequest> {
    constructor();
    create(value?: PartialMessage<DeregisterControllerRequest>): DeregisterControllerRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeregisterControllerRequest): DeregisterControllerRequest;
    internalBinaryWrite(message: DeregisterControllerRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.permission.v1beta1.DeregisterControllerRequest
 */
export declare const DeregisterControllerRequest: DeregisterControllerRequest$Type;
declare class DeregisterControllerResponse$Type extends MessageType<DeregisterControllerResponse> {
    constructor();
    create(value?: PartialMessage<DeregisterControllerResponse>): DeregisterControllerResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeregisterControllerResponse): DeregisterControllerResponse;
    internalBinaryWrite(message: DeregisterControllerResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.permission.v1beta1.DeregisterControllerResponse
 */
export declare const DeregisterControllerResponse: DeregisterControllerResponse$Type;
export {};
