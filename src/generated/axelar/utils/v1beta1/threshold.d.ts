// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "axelar/utils/v1beta1/threshold.proto" (package "axelar.utils.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message axelar.utils.v1beta1.Threshold
 */
export interface Threshold {
    /**
     * split threshold into Numerator and denominator to avoid floating point
     * errors down the line
     *
     * @generated from protobuf field: int64 numerator = 1;
     */
    numerator: string;
    /**
     * @generated from protobuf field: int64 denominator = 2;
     */
    denominator: string;
}
declare class Threshold$Type extends MessageType<Threshold> {
    constructor();
    create(value?: PartialMessage<Threshold>): Threshold;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Threshold): Threshold;
    internalBinaryWrite(message: Threshold, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.utils.v1beta1.Threshold
 */
export declare const Threshold: Threshold$Type;
export {};
