// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "axelar/utils/v1beta1/queuer.proto" (package "axelar.utils.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message axelar.utils.v1beta1.QueueState
 */
export interface QueueState {
    /**
     * @generated from protobuf field: map<string, axelar.utils.v1beta1.QueueState.Item> items = 1;
     */
    items: {
        [key: string]: QueueState_Item;
    };
}
/**
 * @generated from protobuf message axelar.utils.v1beta1.QueueState.Item
 */
export interface QueueState_Item {
    /**
     * @generated from protobuf field: bytes key = 1;
     */
    key: Uint8Array;
    /**
     * @generated from protobuf field: bytes value = 2;
     */
    value: Uint8Array;
}
declare class QueueState$Type extends MessageType<QueueState> {
    constructor();
    create(value?: PartialMessage<QueueState>): QueueState;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueueState): QueueState;
    private binaryReadMap1;
    internalBinaryWrite(message: QueueState, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.utils.v1beta1.QueueState
 */
export declare const QueueState: QueueState$Type;
declare class QueueState_Item$Type extends MessageType<QueueState_Item> {
    constructor();
    create(value?: PartialMessage<QueueState_Item>): QueueState_Item;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueueState_Item): QueueState_Item;
    internalBinaryWrite(message: QueueState_Item, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.utils.v1beta1.QueueState.Item
 */
export declare const QueueState_Item: QueueState_Item$Type;
export {};
