// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "axelar/axelarnet/v1beta1/service.proto" (package "axelar.axelarnet.v1beta1", syntax proto3)
// tslint:disable
// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "axelar/axelarnet/v1beta1/service.proto" (package "axelar.axelarnet.v1beta1", syntax proto3)
// tslint:disable
import { ChainByIBCPathResponse } from "./query";
import { ChainByIBCPathRequest } from "./query";
import { IBCPathResponse } from "./query";
import { IBCPathRequest } from "./query";
import { ParamsResponse } from "./query";
import { ParamsRequest } from "./query";
import { PendingIBCTransferCountResponse } from "./query";
import { PendingIBCTransferCountRequest } from "./query";
import { CallContractResponse } from "./tx";
import { CallContractRequest } from "./tx";
import { RouteMessageResponse } from "./tx";
import { RouteMessageRequest } from "./tx";
import { RetryIBCTransferResponse } from "./tx";
import { RetryIBCTransferRequest } from "./tx";
import { RegisterFeeCollectorResponse } from "./tx";
import { RegisterFeeCollectorRequest } from "./tx";
import { RouteIBCTransfersResponse } from "./tx";
import { RouteIBCTransfersRequest } from "./tx";
import { RegisterAssetResponse } from "./tx";
import { RegisterAssetRequest } from "./tx";
import { AddCosmosBasedChainResponse } from "./tx";
import { AddCosmosBasedChainRequest } from "./tx";
import { ExecutePendingTransfersResponse } from "./tx";
import { ExecutePendingTransfersRequest } from "./tx";
import { ConfirmDepositResponse } from "./tx";
import { ConfirmDepositRequest } from "./tx";
import { LinkResponse } from "./tx";
import { LinkRequest } from "./tx";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
/**
 * @generated ServiceType for protobuf service axelar.axelarnet.v1beta1.MsgService
 */
export const MsgService = new ServiceType("axelar.axelarnet.v1beta1.MsgService", [
    { name: "Link", options: { "google.api.http": { post: "/axelar/axelarnet/link", body: "*" } }, I: LinkRequest, O: LinkResponse },
    { name: "ConfirmDeposit", options: { "google.api.http": { post: "/axelar/axelarnet/confirm_deposit", body: "*" } }, I: ConfirmDepositRequest, O: ConfirmDepositResponse },
    { name: "ExecutePendingTransfers", options: { "google.api.http": { post: "/axelar/axelarnet/execute_pending_transfers", body: "*" } }, I: ExecutePendingTransfersRequest, O: ExecutePendingTransfersResponse },
    { name: "AddCosmosBasedChain", options: { "google.api.http": { post: "/axelar/axelarnet/add_cosmos_based_chain", body: "*" } }, I: AddCosmosBasedChainRequest, O: AddCosmosBasedChainResponse },
    { name: "RegisterAsset", options: { "google.api.http": { post: "/axelar/axelarnet/register_asset", body: "*" } }, I: RegisterAssetRequest, O: RegisterAssetResponse },
    { name: "RouteIBCTransfers", options: { "google.api.http": { post: "/axelar/axelarnet/route_ibc_transfers", body: "*" } }, I: RouteIBCTransfersRequest, O: RouteIBCTransfersResponse },
    { name: "RegisterFeeCollector", options: { "google.api.http": { post: "/axelar/axelarnet/register_fee_collector", body: "*" } }, I: RegisterFeeCollectorRequest, O: RegisterFeeCollectorResponse },
    { name: "RetryIBCTransfer", options: { "google.api.http": { post: "/axelar/axelarnet/retry_ibc_transfer", body: "*" } }, I: RetryIBCTransferRequest, O: RetryIBCTransferResponse },
    { name: "RouteMessage", options: { "google.api.http": { post: "/axelar/axelarnet/route_message", body: "*" } }, I: RouteMessageRequest, O: RouteMessageResponse },
    { name: "CallContract", options: { "google.api.http": { post: "/axelar/axelarnet/call_contract", body: "*" } }, I: CallContractRequest, O: CallContractResponse }
]);
/**
 * @generated ServiceType for protobuf service axelar.axelarnet.v1beta1.QueryService
 */
export const QueryService = new ServiceType("axelar.axelarnet.v1beta1.QueryService", [
    { name: "PendingIBCTransferCount", options: { "google.api.http": { get: "/axelar/axelarnet/v1beta1/ibc_transfer_count" } }, I: PendingIBCTransferCountRequest, O: PendingIBCTransferCountResponse },
    { name: "Params", options: { "google.api.http": { get: "/axelar/axelarnet/v1beta1/params" } }, I: ParamsRequest, O: ParamsResponse },
    { name: "IBCPath", options: { "google.api.http": { get: "/axelar/axelarnet/v1beta1/ibc_path/{chain}" } }, I: IBCPathRequest, O: IBCPathResponse },
    { name: "ChainByIBCPath", options: { "google.api.http": { get: "/axelar/axelarnet/v1beta1/chain_by_ibc_path/{ibc_path}" } }, I: ChainByIBCPathRequest, O: ChainByIBCPathResponse }
]);
