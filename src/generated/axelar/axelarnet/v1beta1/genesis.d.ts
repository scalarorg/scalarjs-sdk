// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "axelar/axelarnet/v1beta1/genesis.proto" (package "axelar.axelarnet.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { IBCTransfer } from "./types";
import { QueueState } from "../../utils/v1beta1/queuer";
import { CosmosChain } from "./types";
import { Params } from "./params";
/**
 * @generated from protobuf message axelar.axelarnet.v1beta1.GenesisState
 */
export interface GenesisState {
    /**
     * @generated from protobuf field: axelar.axelarnet.v1beta1.Params params = 1;
     */
    params?: Params;
    /**
     * @generated from protobuf field: bytes collector_address = 2;
     */
    collectorAddress: Uint8Array;
    /**
     * @generated from protobuf field: repeated axelar.axelarnet.v1beta1.CosmosChain chains = 3;
     */
    chains: CosmosChain[];
    /**
     * @generated from protobuf field: axelar.utils.v1beta1.QueueState transfer_queue = 5;
     */
    transferQueue?: QueueState;
    /**
     * @generated from protobuf field: repeated axelar.axelarnet.v1beta1.IBCTransfer ibc_transfers = 7;
     */
    ibcTransfers: IBCTransfer[];
    /**
     * @generated from protobuf field: map<string, uint64> seq_id_mapping = 8;
     */
    seqIdMapping: {
        [key: string]: string;
    };
}
declare class GenesisState$Type extends MessageType<GenesisState> {
    constructor();
    create(value?: PartialMessage<GenesisState>): GenesisState;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GenesisState): GenesisState;
    private binaryReadMap8;
    internalBinaryWrite(message: GenesisState, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message axelar.axelarnet.v1beta1.GenesisState
 */
export declare const GenesisState: GenesisState$Type;
export {};
