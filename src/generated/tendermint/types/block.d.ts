// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "tendermint/types/block.proto" (package "tendermint.types", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Commit } from "./types";
import { EvidenceList } from "./evidence";
import { Data } from "./types";
import { Header } from "./types";
/**
 * @generated from protobuf message tendermint.types.Block
 */
export interface Block {
    /**
     * @generated from protobuf field: tendermint.types.Header header = 1;
     */
    header?: Header;
    /**
     * @generated from protobuf field: tendermint.types.Data data = 2;
     */
    data?: Data;
    /**
     * @generated from protobuf field: tendermint.types.EvidenceList evidence = 3;
     */
    evidence?: EvidenceList;
    /**
     * @generated from protobuf field: tendermint.types.Commit last_commit = 4;
     */
    lastCommit?: Commit;
}
declare class Block$Type extends MessageType<Block> {
    constructor();
    create(value?: PartialMessage<Block>): Block;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Block): Block;
    internalBinaryWrite(message: Block, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message tendermint.types.Block
 */
export declare const Block: Block$Type;
export {};
