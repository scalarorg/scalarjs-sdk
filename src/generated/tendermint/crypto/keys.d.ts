// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "tendermint/crypto/keys.proto" (package "tendermint.crypto", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * PublicKey defines the keys available for use with Validators
 *
 * @generated from protobuf message tendermint.crypto.PublicKey
 */
export interface PublicKey {
    /**
     * @generated from protobuf oneof: sum
     */
    sum: {
        oneofKind: "ed25519";
        /**
         * @generated from protobuf field: bytes ed25519 = 1;
         */
        ed25519: Uint8Array;
    } | {
        oneofKind: "secp256K1";
        /**
         * @generated from protobuf field: bytes secp256k1 = 2 [json_name = "secp256k1"];
         */
        secp256K1: Uint8Array;
    } | {
        oneofKind: undefined;
    };
}
declare class PublicKey$Type extends MessageType<PublicKey> {
    constructor();
    create(value?: PartialMessage<PublicKey>): PublicKey;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PublicKey): PublicKey;
    internalBinaryWrite(message: PublicKey, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message tendermint.crypto.PublicKey
 */
export declare const PublicKey: PublicKey$Type;
export {};
