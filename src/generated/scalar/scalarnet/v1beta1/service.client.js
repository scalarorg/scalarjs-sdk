// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "scalar/scalarnet/v1beta1/service.proto" (package "scalar.scalarnet.v1beta1", syntax proto3)
// tslint:disable
// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "scalar/scalarnet/v1beta1/service.proto" (package "scalar.scalarnet.v1beta1", syntax proto3)
// tslint:disable
import { QueryService } from "./service";
import { MsgService } from "./service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
/**
 * Msg defines the scalarnet Msg service.
 *
 * @generated from protobuf service scalar.scalarnet.v1beta1.MsgService
 */
export class MsgServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = MsgService.typeName;
        this.methods = MsgService.methods;
        this.options = MsgService.options;
    }
    /**
     * @generated from protobuf rpc: Link(scalar.scalarnet.v1beta1.LinkRequest) returns (scalar.scalarnet.v1beta1.LinkResponse);
     */
    link(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ConfirmDeposit(scalar.scalarnet.v1beta1.ConfirmDepositRequest) returns (scalar.scalarnet.v1beta1.ConfirmDepositResponse);
     */
    confirmDeposit(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ExecutePendingTransfers(scalar.scalarnet.v1beta1.ExecutePendingTransfersRequest) returns (scalar.scalarnet.v1beta1.ExecutePendingTransfersResponse);
     */
    executePendingTransfers(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AddCosmosBasedChain(scalar.scalarnet.v1beta1.AddCosmosBasedChainRequest) returns (scalar.scalarnet.v1beta1.AddCosmosBasedChainResponse);
     */
    addCosmosBasedChain(input, options) {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RegisterAsset(scalar.scalarnet.v1beta1.RegisterAssetRequest) returns (scalar.scalarnet.v1beta1.RegisterAssetResponse);
     */
    registerAsset(input, options) {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RouteIBCTransfers(scalar.scalarnet.v1beta1.RouteIBCTransfersRequest) returns (scalar.scalarnet.v1beta1.RouteIBCTransfersResponse);
     */
    routeIBCTransfers(input, options) {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RegisterFeeCollector(scalar.scalarnet.v1beta1.RegisterFeeCollectorRequest) returns (scalar.scalarnet.v1beta1.RegisterFeeCollectorResponse);
     */
    registerFeeCollector(input, options) {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RetryIBCTransfer(scalar.scalarnet.v1beta1.RetryIBCTransferRequest) returns (scalar.scalarnet.v1beta1.RetryIBCTransferResponse);
     */
    retryIBCTransfer(input, options) {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: RouteMessage(scalar.scalarnet.v1beta1.RouteMessageRequest) returns (scalar.scalarnet.v1beta1.RouteMessageResponse);
     */
    routeMessage(input, options) {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CallContract(scalar.scalarnet.v1beta1.CallContractRequest) returns (scalar.scalarnet.v1beta1.CallContractResponse);
     */
    callContract(input, options) {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
}
/**
 * QueryService defines the gRPC querier service.
 *
 * @generated from protobuf service scalar.scalarnet.v1beta1.QueryService
 */
export class QueryServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = QueryService.typeName;
        this.methods = QueryService.methods;
        this.options = QueryService.options;
    }
    /**
     * PendingIBCTransferCount queries the pending ibc transfers for all chains
     *
     * @generated from protobuf rpc: PendingIBCTransferCount(scalar.scalarnet.v1beta1.PendingIBCTransferCountRequest) returns (scalar.scalarnet.v1beta1.PendingIBCTransferCountResponse);
     */
    pendingIBCTransferCount(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Params(scalar.scalarnet.v1beta1.ParamsRequest) returns (scalar.scalarnet.v1beta1.ParamsResponse);
     */
    params(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: IBCPath(scalar.scalarnet.v1beta1.IBCPathRequest) returns (scalar.scalarnet.v1beta1.IBCPathResponse);
     */
    iBCPath(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ChainByIBCPath(scalar.scalarnet.v1beta1.ChainByIBCPathRequest) returns (scalar.scalarnet.v1beta1.ChainByIBCPathResponse);
     */
    chainByIBCPath(input, options) {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
}
