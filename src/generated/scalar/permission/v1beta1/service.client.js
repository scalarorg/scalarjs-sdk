// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "scalar/permission/v1beta1/service.proto" (package "scalar.permission.v1beta1", syntax proto3)
// tslint:disable
// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "scalar/permission/v1beta1/service.proto" (package "scalar.permission.v1beta1", syntax proto3)
// tslint:disable
import { Query } from "./service";
import { Msg } from "./service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
/**
 * Msg defines the gov Msg service.
 *
 * @generated from protobuf service scalar.permission.v1beta1.Msg
 */
export class MsgClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = Msg.typeName;
        this.methods = Msg.methods;
        this.options = Msg.options;
    }
    /**
     * @generated from protobuf rpc: RegisterController(scalar.permission.v1beta1.RegisterControllerRequest) returns (scalar.permission.v1beta1.RegisterControllerResponse);
     */
    registerController(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeregisterController(scalar.permission.v1beta1.DeregisterControllerRequest) returns (scalar.permission.v1beta1.DeregisterControllerResponse);
     */
    deregisterController(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateGovernanceKey(scalar.permission.v1beta1.UpdateGovernanceKeyRequest) returns (scalar.permission.v1beta1.UpdateGovernanceKeyResponse);
     */
    updateGovernanceKey(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
}
/**
 * Query defines the gRPC querier service.
 *
 * @generated from protobuf service scalar.permission.v1beta1.Query
 */
export class QueryClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = Query.typeName;
        this.methods = Query.methods;
        this.options = Query.options;
    }
    /**
     * GovernanceKey returns the multisig governance key
     *
     * @generated from protobuf rpc: GovernanceKey(scalar.permission.v1beta1.QueryGovernanceKeyRequest) returns (scalar.permission.v1beta1.QueryGovernanceKeyResponse);
     */
    governanceKey(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: Params(scalar.permission.v1beta1.ParamsRequest) returns (scalar.permission.v1beta1.ParamsResponse);
     */
    params(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
}
