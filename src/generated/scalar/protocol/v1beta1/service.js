// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "scalar/protocol/v1beta1/service.proto" (package "scalar.protocol.v1beta1", syntax proto3)
// tslint:disable
// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "scalar/protocol/v1beta1/service.proto" (package "scalar.protocol.v1beta1", syntax proto3)
// tslint:disable
import { ProtocolsResponse } from "./query";
import { ProtocolsRequest } from "./query";
import { UpdateSupportedChainResponse } from "./tx";
import { UpdateSupportedChainRequest } from "./tx";
import { AddSupportedChainResponse } from "./tx";
import { AddSupportedChainRequest } from "./tx";
import { UpdateProtocolResponse } from "./tx";
import { UpdateProtocolRequest } from "./tx";
import { CreateProtocolResponse } from "./tx";
import { CreateProtocolRequest } from "./tx";
import { ServiceType } from "@protobuf-ts/runtime-rpc";
/**
 * @generated ServiceType for protobuf service scalar.protocol.v1beta1.Msg
 */
export const Msg = new ServiceType("scalar.protocol.v1beta1.Msg", [
    { name: "CreateProtocol", options: { "google.api.http": { post: "/scalar/protocol/v1beta1/create_protocol", body: "*" } }, I: CreateProtocolRequest, O: CreateProtocolResponse },
    { name: "UpdateProtocol", options: { "google.api.http": { post: "/scalar/protocol/v1beta1/update_protocol", body: "*" } }, I: UpdateProtocolRequest, O: UpdateProtocolResponse },
    { name: "AddSupportedChain", options: { "google.api.http": { post: "/scalar/protocol/v1beta1/add_supported_chain", body: "*" } }, I: AddSupportedChainRequest, O: AddSupportedChainResponse },
    { name: "UpdateSupportedChain", options: { "google.api.http": { post: "/scalar/protocol/v1beta1/update_supported_chain", body: "*" } }, I: UpdateSupportedChainRequest, O: UpdateSupportedChainResponse }
]);
/**
 * @generated ServiceType for protobuf service scalar.protocol.v1beta1.Query
 */
export const Query = new ServiceType("scalar.protocol.v1beta1.Query", [
    { name: "Protocols", options: { "google.api.http": { get: "/scalar/protocol/v1beta1" } }, I: ProtocolsRequest, O: ProtocolsResponse }
]);
