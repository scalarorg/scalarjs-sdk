// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "scalar/tss/tofnd/v1beta1/multisig.proto" (package "tofnd", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { SignResponse } from "./multisig";
import type { SignRequest } from "./multisig";
import type { KeygenResponse } from "./multisig";
import type { KeygenRequest } from "./multisig";
import type { KeyPresenceResponse } from "./common";
import type { KeyPresenceRequest } from "./common";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service tofnd.Multisig
 */
export interface IMultisigClient {
    /**
     * @generated from protobuf rpc: KeyPresence(tofnd.KeyPresenceRequest) returns (tofnd.KeyPresenceResponse);
     */
    keyPresence(input: KeyPresenceRequest, options?: RpcOptions): UnaryCall<KeyPresenceRequest, KeyPresenceResponse>;
    /**
     * @generated from protobuf rpc: Keygen(tofnd.KeygenRequest) returns (tofnd.KeygenResponse);
     */
    keygen(input: KeygenRequest, options?: RpcOptions): UnaryCall<KeygenRequest, KeygenResponse>;
    /**
     * @generated from protobuf rpc: Sign(tofnd.SignRequest) returns (tofnd.SignResponse);
     */
    sign(input: SignRequest, options?: RpcOptions): UnaryCall<SignRequest, SignResponse>;
}
/**
 * @generated from protobuf service tofnd.Multisig
 */
export declare class MultisigClient implements IMultisigClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * @generated from protobuf rpc: KeyPresence(tofnd.KeyPresenceRequest) returns (tofnd.KeyPresenceResponse);
     */
    keyPresence(input: KeyPresenceRequest, options?: RpcOptions): UnaryCall<KeyPresenceRequest, KeyPresenceResponse>;
    /**
     * @generated from protobuf rpc: Keygen(tofnd.KeygenRequest) returns (tofnd.KeygenResponse);
     */
    keygen(input: KeygenRequest, options?: RpcOptions): UnaryCall<KeygenRequest, KeygenResponse>;
    /**
     * @generated from protobuf rpc: Sign(tofnd.SignRequest) returns (tofnd.SignResponse);
     */
    sign(input: SignRequest, options?: RpcOptions): UnaryCall<SignRequest, SignResponse>;
}
