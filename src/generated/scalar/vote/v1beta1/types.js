// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "scalar/vote/v1beta1/types.proto" (package "scalar.vote.v1beta1", syntax proto3)
// tslint:disable
import { WireType } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "../../../google/protobuf/any";
// @generated message type with reflection information, may provide speed optimized methods
class TalliedVote$Type extends MessageType {
    constructor() {
        super("scalar.vote.v1beta1.TalliedVote", [
            { no: 1, name: "tally", kind: "scalar", T: 12 /*ScalarType.BYTES*/, options: { "gogoproto.nullable": false, "gogoproto.customtype": "github.com/cosmos/cosmos-sdk/types.Uint" } },
            { no: 3, name: "data", kind: "message", T: () => Any, options: { "cosmos_proto.accepts_interface": "github.com/cosmos/codec/ProtoMarshaler" } },
            { no: 4, name: "poll_id", kind: "scalar", T: 4 /*ScalarType.UINT64*/, options: { "gogoproto.nullable": false, "gogoproto.customtype": "github.com/scalarorg/scalar-core/x/vote/exported.PollID", "gogoproto.customname": "PollID" } },
            { no: 5, name: "is_voter_late", kind: "map", K: 9 /*ScalarType.STRING*/, V: { kind: "scalar", T: 8 /*ScalarType.BOOL*/ } }
        ], { "gogoproto.stable_marshaler": true });
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.tally = new Uint8Array(0);
        message.pollId = "0";
        message.isVoterLate = {};
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bytes tally */ 1:
                    message.tally = reader.bytes();
                    break;
                case /* google.protobuf.Any data */ 3:
                    message.data = Any.internalBinaryRead(reader, reader.uint32(), options, message.data);
                    break;
                case /* uint64 poll_id */ 4:
                    message.pollId = reader.uint64().toString();
                    break;
                case /* map<string, bool> is_voter_late */ 5:
                    this.binaryReadMap5(message.isVoterLate, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    binaryReadMap5(map, reader, options) {
        let len = reader.uint32(), end = reader.pos + len, key, val;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.string();
                    break;
                case 2:
                    val = reader.bool();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field scalar.vote.v1beta1.TalliedVote.is_voter_late");
            }
        }
        map[key !== null && key !== void 0 ? key : ""] = val !== null && val !== void 0 ? val : false;
    }
    internalBinaryWrite(message, writer, options) {
        /* bytes tally = 1; */
        if (message.tally.length)
            writer.tag(1, WireType.LengthDelimited).bytes(message.tally);
        /* google.protobuf.Any data = 3; */
        if (message.data)
            Any.internalBinaryWrite(message.data, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* uint64 poll_id = 4; */
        if (message.pollId !== "0")
            writer.tag(4, WireType.Varint).uint64(message.pollId);
        /* map<string, bool> is_voter_late = 5; */
        for (let k of globalThis.Object.keys(message.isVoterLate))
            writer.tag(5, WireType.LengthDelimited).fork().tag(1, WireType.LengthDelimited).string(k).tag(2, WireType.Varint).bool(message.isVoterLate[k]).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message scalar.vote.v1beta1.TalliedVote
 */
export const TalliedVote = new TalliedVote$Type();
