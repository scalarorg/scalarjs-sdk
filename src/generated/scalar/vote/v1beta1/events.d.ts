// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "scalar/vote/v1beta1/events.proto" (package "scalar.vote.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message scalar.vote.v1beta1.Voted
 */
export interface Voted {
    /**
     * @generated from protobuf field: string module = 1;
     */
    module: string;
    /**
     * @generated from protobuf field: string action = 2;
     */
    action: string;
    /**
     * @generated from protobuf field: string poll = 3;
     */
    poll: string;
    /**
     * @generated from protobuf field: string voter = 4;
     */
    voter: string;
    /**
     * @generated from protobuf field: string state = 5;
     */
    state: string;
}
declare class Voted$Type extends MessageType<Voted> {
    constructor();
    create(value?: PartialMessage<Voted>): Voted;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Voted): Voted;
    internalBinaryWrite(message: Voted, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message scalar.vote.v1beta1.Voted
 */
export declare const Voted: Voted$Type;
export {};
