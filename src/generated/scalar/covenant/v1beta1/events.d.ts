// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "scalar/covenant/v1beta1/events.proto" (package "scalar.covenant.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { TapScriptSig } from "../exported/v1beta1/types";
/**
 * @generated from protobuf message scalar.covenant.v1beta1.SigningPsbtStarted
 */
export interface SigningPsbtStarted {
    /**
     * @generated from protobuf field: string module = 1;
     */
    module: string;
    /**
     * @generated from protobuf field: string chain = 2;
     */
    chain: string;
    /**
     * @generated from protobuf field: uint64 sig_id = 3;
     */
    sigId: string;
    /**
     * @generated from protobuf field: string key_id = 4;
     */
    keyId: string;
    /**
     * @generated from protobuf field: map<string, bytes> pub_keys = 5;
     */
    pubKeys: {
        [key: string]: Uint8Array;
    };
    /**
     * @generated from protobuf field: string requesting_module = 6;
     */
    requestingModule: string;
    /**
     * @generated from protobuf field: bytes psbt = 7;
     */
    psbt: Uint8Array;
}
/**
 * @generated from protobuf message scalar.covenant.v1beta1.SigningPsbtCompleted
 */
export interface SigningPsbtCompleted {
    /**
     * @generated from protobuf field: string module = 1;
     */
    module: string;
    /**
     * @generated from protobuf field: uint64 sig_id = 2;
     */
    sigId: string;
}
/**
 * @generated from protobuf message scalar.covenant.v1beta1.SigningPsbtExpired
 */
export interface SigningPsbtExpired {
    /**
     * @generated from protobuf field: string module = 1;
     */
    module: string;
    /**
     * @generated from protobuf field: uint64 sig_id = 2;
     */
    sigId: string;
}
/**
 * @generated from protobuf message scalar.covenant.v1beta1.TapScriptSigSubmitted
 */
export interface TapScriptSigSubmitted {
    /**
     * @generated from protobuf field: string module = 1;
     */
    module: string;
    /**
     * @generated from protobuf field: uint64 sig_id = 2;
     */
    sigId: string;
    /**
     * @generated from protobuf field: bytes participant = 3;
     */
    participant: Uint8Array;
    /**
     * @generated from protobuf field: scalar.covenant.exported.v1beta1.TapScriptSig tap_script_sig = 4;
     */
    tapScriptSig?: TapScriptSig;
}
declare class SigningPsbtStarted$Type extends MessageType<SigningPsbtStarted> {
    constructor();
    create(value?: PartialMessage<SigningPsbtStarted>): SigningPsbtStarted;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SigningPsbtStarted): SigningPsbtStarted;
    private binaryReadMap5;
    internalBinaryWrite(message: SigningPsbtStarted, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message scalar.covenant.v1beta1.SigningPsbtStarted
 */
export declare const SigningPsbtStarted: SigningPsbtStarted$Type;
declare class SigningPsbtCompleted$Type extends MessageType<SigningPsbtCompleted> {
    constructor();
    create(value?: PartialMessage<SigningPsbtCompleted>): SigningPsbtCompleted;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SigningPsbtCompleted): SigningPsbtCompleted;
    internalBinaryWrite(message: SigningPsbtCompleted, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message scalar.covenant.v1beta1.SigningPsbtCompleted
 */
export declare const SigningPsbtCompleted: SigningPsbtCompleted$Type;
declare class SigningPsbtExpired$Type extends MessageType<SigningPsbtExpired> {
    constructor();
    create(value?: PartialMessage<SigningPsbtExpired>): SigningPsbtExpired;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SigningPsbtExpired): SigningPsbtExpired;
    internalBinaryWrite(message: SigningPsbtExpired, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message scalar.covenant.v1beta1.SigningPsbtExpired
 */
export declare const SigningPsbtExpired: SigningPsbtExpired$Type;
declare class TapScriptSigSubmitted$Type extends MessageType<TapScriptSigSubmitted> {
    constructor();
    create(value?: PartialMessage<TapScriptSigSubmitted>): TapScriptSigSubmitted;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TapScriptSigSubmitted): TapScriptSigSubmitted;
    internalBinaryWrite(message: TapScriptSigSubmitted, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message scalar.covenant.v1beta1.TapScriptSigSubmitted
 */
export declare const TapScriptSigSubmitted: TapScriptSigSubmitted$Type;
export {};
