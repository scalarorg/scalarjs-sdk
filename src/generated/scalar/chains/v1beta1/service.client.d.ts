// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "scalar/chains/v1beta1/service.proto" (package "scalar.chains.v1beta1", syntax proto3)
// tslint:disable
import type { BatchedCommandsResponse } from "./query";
import type { BatchedCommandsRequest } from "./query";
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { ConfirmDestTxsResponse } from "./tx";
import type { ConfirmDestTxsRequest } from "./tx";
import type { ConfirmSourceTxsResponse } from "./tx";
import type { ConfirmSourceTxsRequest } from "./tx";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Msg defines the btc Msg service.
 *
 * @generated from protobuf service scalar.chains.v1beta1.MsgService
 */
export interface IMsgServiceClient {
    /**
     * @generated from protobuf rpc: ConfirmSourceTxs(scalar.chains.v1beta1.ConfirmSourceTxsRequest) returns (scalar.chains.v1beta1.ConfirmSourceTxsResponse);
     */
    confirmSourceTxs(input: ConfirmSourceTxsRequest, options?: RpcOptions): UnaryCall<ConfirmSourceTxsRequest, ConfirmSourceTxsResponse>;
    /**
     * @generated from protobuf rpc: ConfirmDestTxs(scalar.chains.v1beta1.ConfirmDestTxsRequest) returns (scalar.chains.v1beta1.ConfirmDestTxsResponse);
     */
    confirmDestTxs(input: ConfirmDestTxsRequest, options?: RpcOptions): UnaryCall<ConfirmDestTxsRequest, ConfirmDestTxsResponse>;
}
/**
 * Msg defines the btc Msg service.
 *
 * @generated from protobuf service scalar.chains.v1beta1.MsgService
 */
export declare class MsgServiceClient implements IMsgServiceClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * @generated from protobuf rpc: ConfirmSourceTxs(scalar.chains.v1beta1.ConfirmSourceTxsRequest) returns (scalar.chains.v1beta1.ConfirmSourceTxsResponse);
     */
    confirmSourceTxs(input: ConfirmSourceTxsRequest, options?: RpcOptions): UnaryCall<ConfirmSourceTxsRequest, ConfirmSourceTxsResponse>;
    /**
     * @generated from protobuf rpc: ConfirmDestTxs(scalar.chains.v1beta1.ConfirmDestTxsRequest) returns (scalar.chains.v1beta1.ConfirmDestTxsResponse);
     */
    confirmDestTxs(input: ConfirmDestTxsRequest, options?: RpcOptions): UnaryCall<ConfirmDestTxsRequest, ConfirmDestTxsResponse>;
}
/**
 * QueryService defines the gRPC querier service.
 *
 * @generated from protobuf service scalar.chains.v1beta1.QueryService
 */
export interface IQueryServiceClient {
    /**
     * BatchedCommands queries the batched commands for a specified chain and
     * BatchedCommandsID if no BatchedCommandsID is specified, then it returns the
     * latest batched commands
     *
     * @generated from protobuf rpc: BatchedCommands(scalar.chains.v1beta1.BatchedCommandsRequest) returns (scalar.chains.v1beta1.BatchedCommandsResponse);
     */
    batchedCommands(input: BatchedCommandsRequest, options?: RpcOptions): UnaryCall<BatchedCommandsRequest, BatchedCommandsResponse>;
}
/**
 * QueryService defines the gRPC querier service.
 *
 * @generated from protobuf service scalar.chains.v1beta1.QueryService
 */
export declare class QueryServiceClient implements IQueryServiceClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * BatchedCommands queries the batched commands for a specified chain and
     * BatchedCommandsID if no BatchedCommandsID is specified, then it returns the
     * latest batched commands
     *
     * @generated from protobuf rpc: BatchedCommands(scalar.chains.v1beta1.BatchedCommandsRequest) returns (scalar.chains.v1beta1.BatchedCommandsResponse);
     */
    batchedCommands(input: BatchedCommandsRequest, options?: RpcOptions): UnaryCall<BatchedCommandsRequest, BatchedCommandsResponse>;
}
