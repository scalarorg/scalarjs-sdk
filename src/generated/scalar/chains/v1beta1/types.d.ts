// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "scalar/chains/v1beta1/types.proto" (package "scalar.chains.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "../../../google/protobuf/any";
/**
 * @generated from protobuf message scalar.chains.v1beta1.Proof
 */
export interface Proof {
    /**
     * @generated from protobuf field: repeated string addresses = 1;
     */
    addresses: string[];
    /**
     * @generated from protobuf field: repeated string weights = 2;
     */
    weights: string[];
    /**
     * @generated from protobuf field: string threshold = 3;
     */
    threshold: string;
    /**
     * @generated from protobuf field: repeated string signatures = 4;
     */
    signatures: string[];
}
/**
 * @generated from protobuf message scalar.chains.v1beta1.StakingTx
 */
export interface StakingTx {
    /**
     * @generated from protobuf field: bytes tx_id = 1;
     */
    txId: Uint8Array;
    /**
     * @generated from protobuf field: bytes amount = 2;
     */
    amount: Uint8Array;
    /**
     * @generated from protobuf field: string asset = 3;
     */
    asset: string;
    /**
     * @generated from protobuf field: string destination_chain = 4;
     */
    destinationChain: string;
    /**
     * @generated from protobuf field: bytes destination_recipient_address = 5;
     */
    destinationRecipientAddress: Uint8Array;
    /**
     * @generated from protobuf field: uint64 log_index = 6;
     */
    logIndex: string;
}
/**
 * @generated from protobuf message scalar.chains.v1beta1.CommandBatchMetadata
 */
export interface CommandBatchMetadata {
    /**
     * @generated from protobuf field: bytes id = 1;
     */
    id: Uint8Array;
    /**
     * @generated from protobuf field: repeated bytes command_ids = 2;
     */
    commandIds: Uint8Array[];
    /**
     * @generated from protobuf field: bytes data = 3;
     */
    data: Uint8Array;
    /**
     * @generated from protobuf field: bytes sig_hash = 4;
     */
    sigHash: Uint8Array;
    /**
     * @generated from protobuf field: scalar.chains.v1beta1.BatchedCommandsStatus status = 5;
     */
    status: BatchedCommandsStatus;
    /**
     * @generated from protobuf field: string key_id = 6;
     */
    keyId: string;
    /**
     * @generated from protobuf field: bytes prev_batched_commands_id = 7;
     */
    prevBatchedCommandsId: Uint8Array;
    /**
     * @generated from protobuf field: google.protobuf.Any signature = 8;
     */
    signature?: Any;
}
/**
 * @generated from protobuf message scalar.chains.v1beta1.Command
 */
export interface Command {
    /**
     * @generated from protobuf field: bytes id = 1;
     */
    id: Uint8Array;
    /**
     * @generated from protobuf field: bytes params = 2;
     */
    params: Uint8Array;
    /**
     * @generated from protobuf field: string key_id = 3;
     */
    keyId: string;
    /**
     * @generated from protobuf field: uint32 max_gas_cost = 4;
     */
    maxGasCost: number;
    /**
     * @generated from protobuf field: scalar.chains.v1beta1.CommandType type = 5;
     */
    type: CommandType;
}
/**
 * @generated from protobuf enum scalar.chains.v1beta1.NetworkKind
 */
export declare enum NetworkKind {
    /**
     * @generated from protobuf enum value: NETWORK_KIND_MAINNET = 0;
     */
    MAINNET = 0,
    /**
     * @generated from protobuf enum value: NETWORK_KIND_TESTNET = 1;
     */
    TESTNET = 1
}
/**
 * @generated from protobuf enum scalar.chains.v1beta1.BatchedCommandsStatus
 */
export declare enum BatchedCommandsStatus {
    /**
     * @generated from protobuf enum value: BATCHED_COMMANDS_STATUS_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: BATCHED_COMMANDS_STATUS_SIGNING = 1;
     */
    SIGNING = 1,
    /**
     * @generated from protobuf enum value: BATCHED_COMMANDS_STATUS_ABORTED = 2;
     */
    ABORTED = 2,
    /**
     * @generated from protobuf enum value: BATCHED_COMMANDS_STATUS_SIGNED = 3;
     */
    SIGNED = 3
}
/**
 * @generated from protobuf enum scalar.chains.v1beta1.StakingTxStatus
 */
export declare enum StakingTxStatus {
    /**
     * @generated from protobuf enum value: STAKING_TX_STATUS_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * @generated from protobuf enum value: STAKING_TX_STATUS_PENDING = 1;
     */
    PENDING = 1,
    /**
     * @generated from protobuf enum value: STAKING_TX_STATUS_CONFIRMED = 2;
     */
    CONFIRMED = 2,
    /**
     * @generated from protobuf enum value: STAKING_TX_STATUS_COMPLETED = 3;
     */
    COMPLETED = 3
}
/**
 * @generated from protobuf enum scalar.chains.v1beta1.CommandType
 */
export declare enum CommandType {
    /**
     * @generated from protobuf enum value: COMMAND_TYPE_APPROVE_BRIDGE_CALL = 0;
     */
    APPROVE_BRIDGE_CALL = 0
}
declare class Proof$Type extends MessageType<Proof> {
    constructor();
    create(value?: PartialMessage<Proof>): Proof;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Proof): Proof;
    internalBinaryWrite(message: Proof, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message scalar.chains.v1beta1.Proof
 */
export declare const Proof: Proof$Type;
declare class StakingTx$Type extends MessageType<StakingTx> {
    constructor();
    create(value?: PartialMessage<StakingTx>): StakingTx;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StakingTx): StakingTx;
    internalBinaryWrite(message: StakingTx, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message scalar.chains.v1beta1.StakingTx
 */
export declare const StakingTx: StakingTx$Type;
declare class CommandBatchMetadata$Type extends MessageType<CommandBatchMetadata> {
    constructor();
    create(value?: PartialMessage<CommandBatchMetadata>): CommandBatchMetadata;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CommandBatchMetadata): CommandBatchMetadata;
    internalBinaryWrite(message: CommandBatchMetadata, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message scalar.chains.v1beta1.CommandBatchMetadata
 */
export declare const CommandBatchMetadata: CommandBatchMetadata$Type;
declare class Command$Type extends MessageType<Command> {
    constructor();
    create(value?: PartialMessage<Command>): Command;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Command): Command;
    internalBinaryWrite(message: Command, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message scalar.chains.v1beta1.Command
 */
export declare const Command: Command$Type;
export {};
