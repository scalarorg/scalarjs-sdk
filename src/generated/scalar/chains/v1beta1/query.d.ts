// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "scalar/chains/v1beta1/query.proto" (package "scalar.chains.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Proof } from "./types";
import { BatchedCommandsStatus } from "./types";
/**
 * @generated from protobuf message scalar.chains.v1beta1.BatchedCommandsRequest
 */
export interface BatchedCommandsRequest {
    /**
     * @generated from protobuf field: string chain = 1;
     */
    chain: string;
    /**
     * id defines an optional id for the commandsbatch. If not specified the
     * latest will be returned
     *
     * @generated from protobuf field: string id = 2;
     */
    id: string;
}
/**
 * @generated from protobuf message scalar.chains.v1beta1.BatchedCommandsResponse
 */
export interface BatchedCommandsResponse {
    /**
     * @generated from protobuf field: string id = 1;
     */
    id: string;
    /**
     * @generated from protobuf field: string data = 2;
     */
    data: string;
    /**
     * @generated from protobuf field: scalar.chains.v1beta1.BatchedCommandsStatus status = 3;
     */
    status: BatchedCommandsStatus;
    /**
     * @generated from protobuf field: string key_id = 4;
     */
    keyId: string;
    /**
     * @generated from protobuf field: string execute_data = 6;
     */
    executeData: string;
    /**
     * @generated from protobuf field: string prev_batched_commands_id = 7;
     */
    prevBatchedCommandsId: string;
    /**
     * @generated from protobuf field: repeated string command_ids = 8;
     */
    commandIds: string[];
    /**
     * @generated from protobuf field: scalar.chains.v1beta1.Proof proof = 9;
     */
    proof?: Proof;
}
declare class BatchedCommandsRequest$Type extends MessageType<BatchedCommandsRequest> {
    constructor();
    create(value?: PartialMessage<BatchedCommandsRequest>): BatchedCommandsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BatchedCommandsRequest): BatchedCommandsRequest;
    internalBinaryWrite(message: BatchedCommandsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message scalar.chains.v1beta1.BatchedCommandsRequest
 */
export declare const BatchedCommandsRequest: BatchedCommandsRequest$Type;
declare class BatchedCommandsResponse$Type extends MessageType<BatchedCommandsResponse> {
    constructor();
    create(value?: PartialMessage<BatchedCommandsResponse>): BatchedCommandsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BatchedCommandsResponse): BatchedCommandsResponse;
    internalBinaryWrite(message: BatchedCommandsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message scalar.chains.v1beta1.BatchedCommandsResponse
 */
export declare const BatchedCommandsResponse: BatchedCommandsResponse$Type;
export {};
