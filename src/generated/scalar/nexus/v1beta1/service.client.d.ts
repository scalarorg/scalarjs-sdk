// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "scalar/nexus/v1beta1/service.proto" (package "scalar.nexus.v1beta1", syntax proto3)
// tslint:disable
import type { ParamsResponse } from "./query";
import type { ParamsRequest } from "./query";
import type { MessageResponse } from "./query";
import type { MessageRequest } from "./query";
import type { TransferRateLimitResponse } from "./query";
import type { TransferRateLimitRequest } from "./query";
import type { ChainMaintainersResponse } from "./query";
import type { ChainMaintainersRequest } from "./query";
import type { RecipientAddressResponse } from "./query";
import type { RecipientAddressRequest } from "./query";
import type { ChainsByAssetResponse } from "./query";
import type { ChainsByAssetRequest } from "./query";
import type { ChainStateResponse } from "./query";
import type { ChainStateRequest } from "./query";
import type { AssetsResponse } from "./query";
import type { AssetsRequest } from "./query";
import type { ChainsResponse } from "./query";
import type { ChainsRequest } from "./query";
import type { TransferFeeResponse } from "./query";
import type { TransferFeeRequest } from "./query";
import type { FeeInfoResponse } from "./query";
import type { FeeInfoRequest } from "./query";
import type { TransfersForChainResponse } from "./query";
import type { TransfersForChainRequest } from "./query";
import type { LatestDepositAddressResponse } from "./query";
import type { LatestDepositAddressRequest } from "./query";
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { SetTransferRateLimitResponse } from "./tx";
import type { SetTransferRateLimitRequest } from "./tx";
import type { RegisterAssetFeeResponse } from "./tx";
import type { RegisterAssetFeeRequest } from "./tx";
import type { DeactivateChainResponse } from "./tx";
import type { DeactivateChainRequest } from "./tx";
import type { ActivateChainResponse } from "./tx";
import type { ActivateChainRequest } from "./tx";
import type { DeregisterChainMaintainerResponse } from "./tx";
import type { DeregisterChainMaintainerRequest } from "./tx";
import type { RegisterChainMaintainerResponse } from "./tx";
import type { RegisterChainMaintainerRequest } from "./tx";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Msg defines the nexus Msg service.
 *
 * @generated from protobuf service scalar.nexus.v1beta1.MsgService
 */
export interface IMsgServiceClient {
    /**
     * @generated from protobuf rpc: RegisterChainMaintainer(scalar.nexus.v1beta1.RegisterChainMaintainerRequest) returns (scalar.nexus.v1beta1.RegisterChainMaintainerResponse);
     */
    registerChainMaintainer(input: RegisterChainMaintainerRequest, options?: RpcOptions): UnaryCall<RegisterChainMaintainerRequest, RegisterChainMaintainerResponse>;
    /**
     * @generated from protobuf rpc: DeregisterChainMaintainer(scalar.nexus.v1beta1.DeregisterChainMaintainerRequest) returns (scalar.nexus.v1beta1.DeregisterChainMaintainerResponse);
     */
    deregisterChainMaintainer(input: DeregisterChainMaintainerRequest, options?: RpcOptions): UnaryCall<DeregisterChainMaintainerRequest, DeregisterChainMaintainerResponse>;
    /**
     * @generated from protobuf rpc: ActivateChain(scalar.nexus.v1beta1.ActivateChainRequest) returns (scalar.nexus.v1beta1.ActivateChainResponse);
     */
    activateChain(input: ActivateChainRequest, options?: RpcOptions): UnaryCall<ActivateChainRequest, ActivateChainResponse>;
    /**
     * @generated from protobuf rpc: DeactivateChain(scalar.nexus.v1beta1.DeactivateChainRequest) returns (scalar.nexus.v1beta1.DeactivateChainResponse);
     */
    deactivateChain(input: DeactivateChainRequest, options?: RpcOptions): UnaryCall<DeactivateChainRequest, DeactivateChainResponse>;
    /**
     * @generated from protobuf rpc: RegisterAssetFee(scalar.nexus.v1beta1.RegisterAssetFeeRequest) returns (scalar.nexus.v1beta1.RegisterAssetFeeResponse);
     */
    registerAssetFee(input: RegisterAssetFeeRequest, options?: RpcOptions): UnaryCall<RegisterAssetFeeRequest, RegisterAssetFeeResponse>;
    /**
     * @generated from protobuf rpc: SetTransferRateLimit(scalar.nexus.v1beta1.SetTransferRateLimitRequest) returns (scalar.nexus.v1beta1.SetTransferRateLimitResponse);
     */
    setTransferRateLimit(input: SetTransferRateLimitRequest, options?: RpcOptions): UnaryCall<SetTransferRateLimitRequest, SetTransferRateLimitResponse>;
}
/**
 * Msg defines the nexus Msg service.
 *
 * @generated from protobuf service scalar.nexus.v1beta1.MsgService
 */
export declare class MsgServiceClient implements IMsgServiceClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * @generated from protobuf rpc: RegisterChainMaintainer(scalar.nexus.v1beta1.RegisterChainMaintainerRequest) returns (scalar.nexus.v1beta1.RegisterChainMaintainerResponse);
     */
    registerChainMaintainer(input: RegisterChainMaintainerRequest, options?: RpcOptions): UnaryCall<RegisterChainMaintainerRequest, RegisterChainMaintainerResponse>;
    /**
     * @generated from protobuf rpc: DeregisterChainMaintainer(scalar.nexus.v1beta1.DeregisterChainMaintainerRequest) returns (scalar.nexus.v1beta1.DeregisterChainMaintainerResponse);
     */
    deregisterChainMaintainer(input: DeregisterChainMaintainerRequest, options?: RpcOptions): UnaryCall<DeregisterChainMaintainerRequest, DeregisterChainMaintainerResponse>;
    /**
     * @generated from protobuf rpc: ActivateChain(scalar.nexus.v1beta1.ActivateChainRequest) returns (scalar.nexus.v1beta1.ActivateChainResponse);
     */
    activateChain(input: ActivateChainRequest, options?: RpcOptions): UnaryCall<ActivateChainRequest, ActivateChainResponse>;
    /**
     * @generated from protobuf rpc: DeactivateChain(scalar.nexus.v1beta1.DeactivateChainRequest) returns (scalar.nexus.v1beta1.DeactivateChainResponse);
     */
    deactivateChain(input: DeactivateChainRequest, options?: RpcOptions): UnaryCall<DeactivateChainRequest, DeactivateChainResponse>;
    /**
     * @generated from protobuf rpc: RegisterAssetFee(scalar.nexus.v1beta1.RegisterAssetFeeRequest) returns (scalar.nexus.v1beta1.RegisterAssetFeeResponse);
     */
    registerAssetFee(input: RegisterAssetFeeRequest, options?: RpcOptions): UnaryCall<RegisterAssetFeeRequest, RegisterAssetFeeResponse>;
    /**
     * @generated from protobuf rpc: SetTransferRateLimit(scalar.nexus.v1beta1.SetTransferRateLimitRequest) returns (scalar.nexus.v1beta1.SetTransferRateLimitResponse);
     */
    setTransferRateLimit(input: SetTransferRateLimitRequest, options?: RpcOptions): UnaryCall<SetTransferRateLimitRequest, SetTransferRateLimitResponse>;
}
/**
 * QueryService defines the gRPC querier service.
 *
 * @generated from protobuf service scalar.nexus.v1beta1.QueryService
 */
export interface IQueryServiceClient {
    /**
     * LatestDepositAddress queries the a deposit address by recipient
     *
     * @generated from protobuf rpc: LatestDepositAddress(scalar.nexus.v1beta1.LatestDepositAddressRequest) returns (scalar.nexus.v1beta1.LatestDepositAddressResponse);
     */
    latestDepositAddress(input: LatestDepositAddressRequest, options?: RpcOptions): UnaryCall<LatestDepositAddressRequest, LatestDepositAddressResponse>;
    /**
     * TransfersForChain queries transfers by chain
     *
     * @generated from protobuf rpc: TransfersForChain(scalar.nexus.v1beta1.TransfersForChainRequest) returns (scalar.nexus.v1beta1.TransfersForChainResponse);
     */
    transfersForChain(input: TransfersForChainRequest, options?: RpcOptions): UnaryCall<TransfersForChainRequest, TransfersForChainResponse>;
    /**
     * FeeInfo queries the fee info by chain and asset
     *
     * @generated from protobuf rpc: FeeInfo(scalar.nexus.v1beta1.FeeInfoRequest) returns (scalar.nexus.v1beta1.FeeInfoResponse);
     */
    feeInfo(input: FeeInfoRequest, options?: RpcOptions): UnaryCall<FeeInfoRequest, FeeInfoResponse>;
    /**
     * TransferFee queries the transfer fee by the source, destination chain,
     * and amount. If amount is 0, the min fee is returned
     *
     * @generated from protobuf rpc: TransferFee(scalar.nexus.v1beta1.TransferFeeRequest) returns (scalar.nexus.v1beta1.TransferFeeResponse);
     */
    transferFee(input: TransferFeeRequest, options?: RpcOptions): UnaryCall<TransferFeeRequest, TransferFeeResponse>;
    /**
     * Chains queries the chains registered on the network
     *
     * @generated from protobuf rpc: Chains(scalar.nexus.v1beta1.ChainsRequest) returns (scalar.nexus.v1beta1.ChainsResponse);
     */
    chains(input: ChainsRequest, options?: RpcOptions): UnaryCall<ChainsRequest, ChainsResponse>;
    /**
     * Assets queries the assets registered for a chain
     *
     * @generated from protobuf rpc: Assets(scalar.nexus.v1beta1.AssetsRequest) returns (scalar.nexus.v1beta1.AssetsResponse);
     */
    assets(input: AssetsRequest, options?: RpcOptions): UnaryCall<AssetsRequest, AssetsResponse>;
    /**
     * ChainState queries the state of a registered chain on the network
     *
     * @generated from protobuf rpc: ChainState(scalar.nexus.v1beta1.ChainStateRequest) returns (scalar.nexus.v1beta1.ChainStateResponse);
     */
    chainState(input: ChainStateRequest, options?: RpcOptions): UnaryCall<ChainStateRequest, ChainStateResponse>;
    /**
     * ChainsByAsset queries the chains that support an asset on the network
     *
     * @generated from protobuf rpc: ChainsByAsset(scalar.nexus.v1beta1.ChainsByAssetRequest) returns (scalar.nexus.v1beta1.ChainsByAssetResponse);
     */
    chainsByAsset(input: ChainsByAssetRequest, options?: RpcOptions): UnaryCall<ChainsByAssetRequest, ChainsByAssetResponse>;
    /**
     * RecipientAddress queries the recipient address for a given deposit address
     *
     * @generated from protobuf rpc: RecipientAddress(scalar.nexus.v1beta1.RecipientAddressRequest) returns (scalar.nexus.v1beta1.RecipientAddressResponse);
     */
    recipientAddress(input: RecipientAddressRequest, options?: RpcOptions): UnaryCall<RecipientAddressRequest, RecipientAddressResponse>;
    /**
     * ChainMaintainers queries the chain maintainers for a given chain
     *
     * @generated from protobuf rpc: ChainMaintainers(scalar.nexus.v1beta1.ChainMaintainersRequest) returns (scalar.nexus.v1beta1.ChainMaintainersResponse);
     */
    chainMaintainers(input: ChainMaintainersRequest, options?: RpcOptions): UnaryCall<ChainMaintainersRequest, ChainMaintainersResponse>;
    /**
     * TransferRateLimit queries the transfer rate limit for a given chain and
     * asset. If a rate limit is not set, nil is returned.
     *
     * @generated from protobuf rpc: TransferRateLimit(scalar.nexus.v1beta1.TransferRateLimitRequest) returns (scalar.nexus.v1beta1.TransferRateLimitResponse);
     */
    transferRateLimit(input: TransferRateLimitRequest, options?: RpcOptions): UnaryCall<TransferRateLimitRequest, TransferRateLimitResponse>;
    /**
     * @generated from protobuf rpc: Message(scalar.nexus.v1beta1.MessageRequest) returns (scalar.nexus.v1beta1.MessageResponse);
     */
    message(input: MessageRequest, options?: RpcOptions): UnaryCall<MessageRequest, MessageResponse>;
    /**
     * @generated from protobuf rpc: Params(scalar.nexus.v1beta1.ParamsRequest) returns (scalar.nexus.v1beta1.ParamsResponse);
     */
    params(input: ParamsRequest, options?: RpcOptions): UnaryCall<ParamsRequest, ParamsResponse>;
}
/**
 * QueryService defines the gRPC querier service.
 *
 * @generated from protobuf service scalar.nexus.v1beta1.QueryService
 */
export declare class QueryServiceClient implements IQueryServiceClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * LatestDepositAddress queries the a deposit address by recipient
     *
     * @generated from protobuf rpc: LatestDepositAddress(scalar.nexus.v1beta1.LatestDepositAddressRequest) returns (scalar.nexus.v1beta1.LatestDepositAddressResponse);
     */
    latestDepositAddress(input: LatestDepositAddressRequest, options?: RpcOptions): UnaryCall<LatestDepositAddressRequest, LatestDepositAddressResponse>;
    /**
     * TransfersForChain queries transfers by chain
     *
     * @generated from protobuf rpc: TransfersForChain(scalar.nexus.v1beta1.TransfersForChainRequest) returns (scalar.nexus.v1beta1.TransfersForChainResponse);
     */
    transfersForChain(input: TransfersForChainRequest, options?: RpcOptions): UnaryCall<TransfersForChainRequest, TransfersForChainResponse>;
    /**
     * FeeInfo queries the fee info by chain and asset
     *
     * @generated from protobuf rpc: FeeInfo(scalar.nexus.v1beta1.FeeInfoRequest) returns (scalar.nexus.v1beta1.FeeInfoResponse);
     */
    feeInfo(input: FeeInfoRequest, options?: RpcOptions): UnaryCall<FeeInfoRequest, FeeInfoResponse>;
    /**
     * TransferFee queries the transfer fee by the source, destination chain,
     * and amount. If amount is 0, the min fee is returned
     *
     * @generated from protobuf rpc: TransferFee(scalar.nexus.v1beta1.TransferFeeRequest) returns (scalar.nexus.v1beta1.TransferFeeResponse);
     */
    transferFee(input: TransferFeeRequest, options?: RpcOptions): UnaryCall<TransferFeeRequest, TransferFeeResponse>;
    /**
     * Chains queries the chains registered on the network
     *
     * @generated from protobuf rpc: Chains(scalar.nexus.v1beta1.ChainsRequest) returns (scalar.nexus.v1beta1.ChainsResponse);
     */
    chains(input: ChainsRequest, options?: RpcOptions): UnaryCall<ChainsRequest, ChainsResponse>;
    /**
     * Assets queries the assets registered for a chain
     *
     * @generated from protobuf rpc: Assets(scalar.nexus.v1beta1.AssetsRequest) returns (scalar.nexus.v1beta1.AssetsResponse);
     */
    assets(input: AssetsRequest, options?: RpcOptions): UnaryCall<AssetsRequest, AssetsResponse>;
    /**
     * ChainState queries the state of a registered chain on the network
     *
     * @generated from protobuf rpc: ChainState(scalar.nexus.v1beta1.ChainStateRequest) returns (scalar.nexus.v1beta1.ChainStateResponse);
     */
    chainState(input: ChainStateRequest, options?: RpcOptions): UnaryCall<ChainStateRequest, ChainStateResponse>;
    /**
     * ChainsByAsset queries the chains that support an asset on the network
     *
     * @generated from protobuf rpc: ChainsByAsset(scalar.nexus.v1beta1.ChainsByAssetRequest) returns (scalar.nexus.v1beta1.ChainsByAssetResponse);
     */
    chainsByAsset(input: ChainsByAssetRequest, options?: RpcOptions): UnaryCall<ChainsByAssetRequest, ChainsByAssetResponse>;
    /**
     * RecipientAddress queries the recipient address for a given deposit address
     *
     * @generated from protobuf rpc: RecipientAddress(scalar.nexus.v1beta1.RecipientAddressRequest) returns (scalar.nexus.v1beta1.RecipientAddressResponse);
     */
    recipientAddress(input: RecipientAddressRequest, options?: RpcOptions): UnaryCall<RecipientAddressRequest, RecipientAddressResponse>;
    /**
     * ChainMaintainers queries the chain maintainers for a given chain
     *
     * @generated from protobuf rpc: ChainMaintainers(scalar.nexus.v1beta1.ChainMaintainersRequest) returns (scalar.nexus.v1beta1.ChainMaintainersResponse);
     */
    chainMaintainers(input: ChainMaintainersRequest, options?: RpcOptions): UnaryCall<ChainMaintainersRequest, ChainMaintainersResponse>;
    /**
     * TransferRateLimit queries the transfer rate limit for a given chain and
     * asset. If a rate limit is not set, nil is returned.
     *
     * @generated from protobuf rpc: TransferRateLimit(scalar.nexus.v1beta1.TransferRateLimitRequest) returns (scalar.nexus.v1beta1.TransferRateLimitResponse);
     */
    transferRateLimit(input: TransferRateLimitRequest, options?: RpcOptions): UnaryCall<TransferRateLimitRequest, TransferRateLimitResponse>;
    /**
     * @generated from protobuf rpc: Message(scalar.nexus.v1beta1.MessageRequest) returns (scalar.nexus.v1beta1.MessageResponse);
     */
    message(input: MessageRequest, options?: RpcOptions): UnaryCall<MessageRequest, MessageResponse>;
    /**
     * @generated from protobuf rpc: Params(scalar.nexus.v1beta1.ParamsRequest) returns (scalar.nexus.v1beta1.ParamsResponse);
     */
    params(input: ParamsRequest, options?: RpcOptions): UnaryCall<ParamsRequest, ParamsResponse>;
}
