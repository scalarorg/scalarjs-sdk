// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "scalar/nexus/v1beta1/types.proto" (package "scalar.nexus.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { TransferDirection } from "../exported/v1beta1/types";
import { Duration } from "../../../google/protobuf/duration";
import { Coin } from "../../../cosmos/base/v1beta1/coin";
import { CrossChainAddress } from "../exported/v1beta1/types";
import { Asset } from "../exported/v1beta1/types";
import { Chain } from "../exported/v1beta1/types";
import { Bitmap } from "../../utils/v1beta1/bitmap";
/**
 * @generated from protobuf message scalar.nexus.v1beta1.MaintainerState
 */
export interface MaintainerState {
    /**
     * @generated from protobuf field: bytes address = 1;
     */
    address: Uint8Array;
    /**
     * @generated from protobuf field: scalar.utils.v1beta1.Bitmap missing_votes = 2;
     */
    missingVotes?: Bitmap;
    /**
     * @generated from protobuf field: scalar.utils.v1beta1.Bitmap incorrect_votes = 3;
     */
    incorrectVotes?: Bitmap;
    /**
     * @generated from protobuf field: string chain = 4;
     */
    chain: string;
}
/**
 * ChainState represents the state of a registered blockchain
 *
 * @generated from protobuf message scalar.nexus.v1beta1.ChainState
 */
export interface ChainState {
    /**
     * @generated from protobuf field: scalar.nexus.exported.v1beta1.Chain chain = 1;
     */
    chain?: Chain;
    /**
     * @generated from protobuf field: bool activated = 3;
     */
    activated: boolean;
    /**
     * @generated from protobuf field: repeated scalar.nexus.exported.v1beta1.Asset assets = 5;
     */
    assets: Asset[];
    /**
     * @deprecated
     * @generated from protobuf field: repeated scalar.nexus.v1beta1.MaintainerState maintainer_states = 6 [deprecated = true];
     */
    maintainerStates: MaintainerState[];
}
/**
 * @generated from protobuf message scalar.nexus.v1beta1.LinkedAddresses
 */
export interface LinkedAddresses {
    /**
     * @generated from protobuf field: scalar.nexus.exported.v1beta1.CrossChainAddress deposit_address = 1;
     */
    depositAddress?: CrossChainAddress;
    /**
     * @generated from protobuf field: scalar.nexus.exported.v1beta1.CrossChainAddress recipient_address = 2;
     */
    recipientAddress?: CrossChainAddress;
}
/**
 * @generated from protobuf message scalar.nexus.v1beta1.RateLimit
 */
export interface RateLimit {
    /**
     * @generated from protobuf field: string chain = 1;
     */
    chain: string;
    /**
     * @generated from protobuf field: cosmos.base.v1beta1.Coin limit = 2;
     */
    limit?: Coin;
    /**
     * @generated from protobuf field: google.protobuf.Duration window = 3;
     */
    window?: Duration;
}
/**
 * @generated from protobuf message scalar.nexus.v1beta1.TransferEpoch
 */
export interface TransferEpoch {
    /**
     * @generated from protobuf field: string chain = 1;
     */
    chain: string;
    /**
     * @generated from protobuf field: cosmos.base.v1beta1.Coin amount = 2;
     */
    amount?: Coin;
    /**
     * @generated from protobuf field: uint64 epoch = 3;
     */
    epoch: string;
    /**
     * @generated from protobuf field: scalar.nexus.exported.v1beta1.TransferDirection direction = 4;
     */
    direction: TransferDirection;
}
declare class MaintainerState$Type extends MessageType<MaintainerState> {
    constructor();
    create(value?: PartialMessage<MaintainerState>): MaintainerState;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MaintainerState): MaintainerState;
    internalBinaryWrite(message: MaintainerState, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message scalar.nexus.v1beta1.MaintainerState
 */
export declare const MaintainerState: MaintainerState$Type;
declare class ChainState$Type extends MessageType<ChainState> {
    constructor();
    create(value?: PartialMessage<ChainState>): ChainState;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChainState): ChainState;
    internalBinaryWrite(message: ChainState, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message scalar.nexus.v1beta1.ChainState
 */
export declare const ChainState: ChainState$Type;
declare class LinkedAddresses$Type extends MessageType<LinkedAddresses> {
    constructor();
    create(value?: PartialMessage<LinkedAddresses>): LinkedAddresses;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LinkedAddresses): LinkedAddresses;
    internalBinaryWrite(message: LinkedAddresses, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message scalar.nexus.v1beta1.LinkedAddresses
 */
export declare const LinkedAddresses: LinkedAddresses$Type;
declare class RateLimit$Type extends MessageType<RateLimit> {
    constructor();
    create(value?: PartialMessage<RateLimit>): RateLimit;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RateLimit): RateLimit;
    internalBinaryWrite(message: RateLimit, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message scalar.nexus.v1beta1.RateLimit
 */
export declare const RateLimit: RateLimit$Type;
declare class TransferEpoch$Type extends MessageType<TransferEpoch> {
    constructor();
    create(value?: PartialMessage<TransferEpoch>): TransferEpoch;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TransferEpoch): TransferEpoch;
    internalBinaryWrite(message: TransferEpoch, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message scalar.nexus.v1beta1.TransferEpoch
 */
export declare const TransferEpoch: TransferEpoch$Type;
export {};
