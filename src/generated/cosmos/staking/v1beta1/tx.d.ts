// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/staking/v1beta1/tx.proto" (package "cosmos.staking.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "../../../google/protobuf/timestamp";
import { Coin } from "../../base/v1beta1/coin";
import { Any } from "../../../google/protobuf/any";
import { CommissionRates } from "./staking";
import { Description } from "./staking";
/**
 * MsgCreateValidator defines a SDK message for creating a new validator.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgCreateValidator
 */
export interface MsgCreateValidator {
    /**
     * @generated from protobuf field: cosmos.staking.v1beta1.Description description = 1;
     */
    description?: Description;
    /**
     * @generated from protobuf field: cosmos.staking.v1beta1.CommissionRates commission = 2;
     */
    commission?: CommissionRates;
    /**
     * @generated from protobuf field: string min_self_delegation = 3;
     */
    minSelfDelegation: string;
    /**
     * @generated from protobuf field: string delegator_address = 4;
     */
    delegatorAddress: string;
    /**
     * @generated from protobuf field: string validator_address = 5;
     */
    validatorAddress: string;
    /**
     * @generated from protobuf field: google.protobuf.Any pubkey = 6;
     */
    pubkey?: Any;
    /**
     * @generated from protobuf field: cosmos.base.v1beta1.Coin value = 7;
     */
    value?: Coin;
}
/**
 * MsgCreateValidatorResponse defines the Msg/CreateValidator response type.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgCreateValidatorResponse
 */
export interface MsgCreateValidatorResponse {
}
/**
 * MsgEditValidator defines a SDK message for editing an existing validator.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgEditValidator
 */
export interface MsgEditValidator {
    /**
     * @generated from protobuf field: cosmos.staking.v1beta1.Description description = 1;
     */
    description?: Description;
    /**
     * @generated from protobuf field: string validator_address = 2;
     */
    validatorAddress: string;
    /**
     * We pass a reference to the new commission rate and min self delegation as
     * it's not mandatory to update. If not updated, the deserialized rate will be
     * zero with no way to distinguish if an update was intended.
     * REF: #2373
     *
     * @generated from protobuf field: string commission_rate = 3;
     */
    commissionRate: string;
    /**
     * @generated from protobuf field: string min_self_delegation = 4;
     */
    minSelfDelegation: string;
}
/**
 * MsgEditValidatorResponse defines the Msg/EditValidator response type.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgEditValidatorResponse
 */
export interface MsgEditValidatorResponse {
}
/**
 * MsgDelegate defines a SDK message for performing a delegation of coins
 * from a delegator to a validator.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgDelegate
 */
export interface MsgDelegate {
    /**
     * @generated from protobuf field: string delegator_address = 1;
     */
    delegatorAddress: string;
    /**
     * @generated from protobuf field: string validator_address = 2;
     */
    validatorAddress: string;
    /**
     * @generated from protobuf field: cosmos.base.v1beta1.Coin amount = 3;
     */
    amount?: Coin;
}
/**
 * MsgDelegateResponse defines the Msg/Delegate response type.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgDelegateResponse
 */
export interface MsgDelegateResponse {
}
/**
 * MsgBeginRedelegate defines a SDK message for performing a redelegation
 * of coins from a delegator and source validator to a destination validator.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgBeginRedelegate
 */
export interface MsgBeginRedelegate {
    /**
     * @generated from protobuf field: string delegator_address = 1;
     */
    delegatorAddress: string;
    /**
     * @generated from protobuf field: string validator_src_address = 2;
     */
    validatorSrcAddress: string;
    /**
     * @generated from protobuf field: string validator_dst_address = 3;
     */
    validatorDstAddress: string;
    /**
     * @generated from protobuf field: cosmos.base.v1beta1.Coin amount = 4;
     */
    amount?: Coin;
}
/**
 * MsgBeginRedelegateResponse defines the Msg/BeginRedelegate response type.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgBeginRedelegateResponse
 */
export interface MsgBeginRedelegateResponse {
    /**
     * @generated from protobuf field: google.protobuf.Timestamp completion_time = 1;
     */
    completionTime?: Timestamp;
}
/**
 * MsgUndelegate defines a SDK message for performing an undelegation from a
 * delegate and a validator.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgUndelegate
 */
export interface MsgUndelegate {
    /**
     * @generated from protobuf field: string delegator_address = 1;
     */
    delegatorAddress: string;
    /**
     * @generated from protobuf field: string validator_address = 2;
     */
    validatorAddress: string;
    /**
     * @generated from protobuf field: cosmos.base.v1beta1.Coin amount = 3;
     */
    amount?: Coin;
}
/**
 * MsgUndelegateResponse defines the Msg/Undelegate response type.
 *
 * @generated from protobuf message cosmos.staking.v1beta1.MsgUndelegateResponse
 */
export interface MsgUndelegateResponse {
    /**
     * @generated from protobuf field: google.protobuf.Timestamp completion_time = 1;
     */
    completionTime?: Timestamp;
}
declare class MsgCreateValidator$Type extends MessageType<MsgCreateValidator> {
    constructor();
    create(value?: PartialMessage<MsgCreateValidator>): MsgCreateValidator;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgCreateValidator): MsgCreateValidator;
    internalBinaryWrite(message: MsgCreateValidator, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgCreateValidator
 */
export declare const MsgCreateValidator: MsgCreateValidator$Type;
declare class MsgCreateValidatorResponse$Type extends MessageType<MsgCreateValidatorResponse> {
    constructor();
    create(value?: PartialMessage<MsgCreateValidatorResponse>): MsgCreateValidatorResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgCreateValidatorResponse): MsgCreateValidatorResponse;
    internalBinaryWrite(message: MsgCreateValidatorResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgCreateValidatorResponse
 */
export declare const MsgCreateValidatorResponse: MsgCreateValidatorResponse$Type;
declare class MsgEditValidator$Type extends MessageType<MsgEditValidator> {
    constructor();
    create(value?: PartialMessage<MsgEditValidator>): MsgEditValidator;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgEditValidator): MsgEditValidator;
    internalBinaryWrite(message: MsgEditValidator, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgEditValidator
 */
export declare const MsgEditValidator: MsgEditValidator$Type;
declare class MsgEditValidatorResponse$Type extends MessageType<MsgEditValidatorResponse> {
    constructor();
    create(value?: PartialMessage<MsgEditValidatorResponse>): MsgEditValidatorResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgEditValidatorResponse): MsgEditValidatorResponse;
    internalBinaryWrite(message: MsgEditValidatorResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgEditValidatorResponse
 */
export declare const MsgEditValidatorResponse: MsgEditValidatorResponse$Type;
declare class MsgDelegate$Type extends MessageType<MsgDelegate> {
    constructor();
    create(value?: PartialMessage<MsgDelegate>): MsgDelegate;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgDelegate): MsgDelegate;
    internalBinaryWrite(message: MsgDelegate, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgDelegate
 */
export declare const MsgDelegate: MsgDelegate$Type;
declare class MsgDelegateResponse$Type extends MessageType<MsgDelegateResponse> {
    constructor();
    create(value?: PartialMessage<MsgDelegateResponse>): MsgDelegateResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgDelegateResponse): MsgDelegateResponse;
    internalBinaryWrite(message: MsgDelegateResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgDelegateResponse
 */
export declare const MsgDelegateResponse: MsgDelegateResponse$Type;
declare class MsgBeginRedelegate$Type extends MessageType<MsgBeginRedelegate> {
    constructor();
    create(value?: PartialMessage<MsgBeginRedelegate>): MsgBeginRedelegate;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgBeginRedelegate): MsgBeginRedelegate;
    internalBinaryWrite(message: MsgBeginRedelegate, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgBeginRedelegate
 */
export declare const MsgBeginRedelegate: MsgBeginRedelegate$Type;
declare class MsgBeginRedelegateResponse$Type extends MessageType<MsgBeginRedelegateResponse> {
    constructor();
    create(value?: PartialMessage<MsgBeginRedelegateResponse>): MsgBeginRedelegateResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgBeginRedelegateResponse): MsgBeginRedelegateResponse;
    internalBinaryWrite(message: MsgBeginRedelegateResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgBeginRedelegateResponse
 */
export declare const MsgBeginRedelegateResponse: MsgBeginRedelegateResponse$Type;
declare class MsgUndelegate$Type extends MessageType<MsgUndelegate> {
    constructor();
    create(value?: PartialMessage<MsgUndelegate>): MsgUndelegate;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgUndelegate): MsgUndelegate;
    internalBinaryWrite(message: MsgUndelegate, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgUndelegate
 */
export declare const MsgUndelegate: MsgUndelegate$Type;
declare class MsgUndelegateResponse$Type extends MessageType<MsgUndelegateResponse> {
    constructor();
    create(value?: PartialMessage<MsgUndelegateResponse>): MsgUndelegateResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgUndelegateResponse): MsgUndelegateResponse;
    internalBinaryWrite(message: MsgUndelegateResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.staking.v1beta1.MsgUndelegateResponse
 */
export declare const MsgUndelegateResponse: MsgUndelegateResponse$Type;
/**
 * @generated ServiceType for protobuf service cosmos.staking.v1beta1.Msg
 */
export declare const Msg: any;
export {};
