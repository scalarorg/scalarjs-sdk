// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/authz/v1beta1/query.proto" (package "cosmos.authz.v1beta1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { QueryGranteeGrantsResponse } from "./query";
import type { QueryGranteeGrantsRequest } from "./query";
import type { QueryGranterGrantsResponse } from "./query";
import type { QueryGranterGrantsRequest } from "./query";
import type { QueryGrantsResponse } from "./query";
import type { QueryGrantsRequest } from "./query";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Query defines the gRPC querier service.
 *
 * @generated from protobuf service cosmos.authz.v1beta1.Query
 */
export interface IQueryClient {
    /**
     * Returns list of `Authorization`, granted to the grantee by the granter.
     *
     * @generated from protobuf rpc: Grants(cosmos.authz.v1beta1.QueryGrantsRequest) returns (cosmos.authz.v1beta1.QueryGrantsResponse);
     */
    grants(input: QueryGrantsRequest, options?: RpcOptions): UnaryCall<QueryGrantsRequest, QueryGrantsResponse>;
    /**
     * GranterGrants returns list of `GrantAuthorization`, granted by granter.
     *
     * Since: cosmos-sdk 0.45.2
     *
     * @generated from protobuf rpc: GranterGrants(cosmos.authz.v1beta1.QueryGranterGrantsRequest) returns (cosmos.authz.v1beta1.QueryGranterGrantsResponse);
     */
    granterGrants(input: QueryGranterGrantsRequest, options?: RpcOptions): UnaryCall<QueryGranterGrantsRequest, QueryGranterGrantsResponse>;
    /**
     * GranteeGrants returns a list of `GrantAuthorization` by grantee.
     *
     * Since: cosmos-sdk 0.45.2
     *
     * @generated from protobuf rpc: GranteeGrants(cosmos.authz.v1beta1.QueryGranteeGrantsRequest) returns (cosmos.authz.v1beta1.QueryGranteeGrantsResponse);
     */
    granteeGrants(input: QueryGranteeGrantsRequest, options?: RpcOptions): UnaryCall<QueryGranteeGrantsRequest, QueryGranteeGrantsResponse>;
}
/**
 * Query defines the gRPC querier service.
 *
 * @generated from protobuf service cosmos.authz.v1beta1.Query
 */
export declare class QueryClient implements IQueryClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * Returns list of `Authorization`, granted to the grantee by the granter.
     *
     * @generated from protobuf rpc: Grants(cosmos.authz.v1beta1.QueryGrantsRequest) returns (cosmos.authz.v1beta1.QueryGrantsResponse);
     */
    grants(input: QueryGrantsRequest, options?: RpcOptions): UnaryCall<QueryGrantsRequest, QueryGrantsResponse>;
    /**
     * GranterGrants returns list of `GrantAuthorization`, granted by granter.
     *
     * Since: cosmos-sdk 0.45.2
     *
     * @generated from protobuf rpc: GranterGrants(cosmos.authz.v1beta1.QueryGranterGrantsRequest) returns (cosmos.authz.v1beta1.QueryGranterGrantsResponse);
     */
    granterGrants(input: QueryGranterGrantsRequest, options?: RpcOptions): UnaryCall<QueryGranterGrantsRequest, QueryGranterGrantsResponse>;
    /**
     * GranteeGrants returns a list of `GrantAuthorization` by grantee.
     *
     * Since: cosmos-sdk 0.45.2
     *
     * @generated from protobuf rpc: GranteeGrants(cosmos.authz.v1beta1.QueryGranteeGrantsRequest) returns (cosmos.authz.v1beta1.QueryGranteeGrantsResponse);
     */
    granteeGrants(input: QueryGranteeGrantsRequest, options?: RpcOptions): UnaryCall<QueryGranteeGrantsRequest, QueryGranteeGrantsResponse>;
}
