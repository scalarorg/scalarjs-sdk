// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/authz/v1beta1/query.proto" (package "cosmos.authz.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { GrantAuthorization } from "./authz";
import { PageResponse } from "../../base/query/v1beta1/pagination";
import { Grant } from "./authz";
import { PageRequest } from "../../base/query/v1beta1/pagination";
/**
 * QueryGrantsRequest is the request type for the Query/Grants RPC method.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.QueryGrantsRequest
 */
export interface QueryGrantsRequest {
    /**
     * @generated from protobuf field: string granter = 1;
     */
    granter: string;
    /**
     * @generated from protobuf field: string grantee = 2;
     */
    grantee: string;
    /**
     * Optional, msg_type_url, when set, will query only grants matching given msg type.
     *
     * @generated from protobuf field: string msg_type_url = 3;
     */
    msgTypeUrl: string;
    /**
     * pagination defines an pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 4;
     */
    pagination?: PageRequest;
}
/**
 * QueryGrantsResponse is the response type for the Query/Authorizations RPC method.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.QueryGrantsResponse
 */
export interface QueryGrantsResponse {
    /**
     * authorizations is a list of grants granted for grantee by granter.
     *
     * @generated from protobuf field: repeated cosmos.authz.v1beta1.Grant grants = 1;
     */
    grants: Grant[];
    /**
     * pagination defines an pagination for the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryGranterGrantsRequest is the request type for the Query/GranterGrants RPC method.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.QueryGranterGrantsRequest
 */
export interface QueryGranterGrantsRequest {
    /**
     * @generated from protobuf field: string granter = 1;
     */
    granter: string;
    /**
     * pagination defines an pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryGranterGrantsResponse is the response type for the Query/GranterGrants RPC method.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.QueryGranterGrantsResponse
 */
export interface QueryGranterGrantsResponse {
    /**
     * grants is a list of grants granted by the granter.
     *
     * @generated from protobuf field: repeated cosmos.authz.v1beta1.GrantAuthorization grants = 1;
     */
    grants: GrantAuthorization[];
    /**
     * pagination defines an pagination for the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryGranteeGrantsRequest is the request type for the Query/IssuedGrants RPC method.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.QueryGranteeGrantsRequest
 */
export interface QueryGranteeGrantsRequest {
    /**
     * @generated from protobuf field: string grantee = 1;
     */
    grantee: string;
    /**
     * pagination defines an pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants RPC method.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.QueryGranteeGrantsResponse
 */
export interface QueryGranteeGrantsResponse {
    /**
     * grants is a list of grants granted to the grantee.
     *
     * @generated from protobuf field: repeated cosmos.authz.v1beta1.GrantAuthorization grants = 1;
     */
    grants: GrantAuthorization[];
    /**
     * pagination defines an pagination for the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
declare class QueryGrantsRequest$Type extends MessageType<QueryGrantsRequest> {
    constructor();
    create(value?: PartialMessage<QueryGrantsRequest>): QueryGrantsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGrantsRequest): QueryGrantsRequest;
    internalBinaryWrite(message: QueryGrantsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.QueryGrantsRequest
 */
export declare const QueryGrantsRequest: QueryGrantsRequest$Type;
declare class QueryGrantsResponse$Type extends MessageType<QueryGrantsResponse> {
    constructor();
    create(value?: PartialMessage<QueryGrantsResponse>): QueryGrantsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGrantsResponse): QueryGrantsResponse;
    internalBinaryWrite(message: QueryGrantsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.QueryGrantsResponse
 */
export declare const QueryGrantsResponse: QueryGrantsResponse$Type;
declare class QueryGranterGrantsRequest$Type extends MessageType<QueryGranterGrantsRequest> {
    constructor();
    create(value?: PartialMessage<QueryGranterGrantsRequest>): QueryGranterGrantsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGranterGrantsRequest): QueryGranterGrantsRequest;
    internalBinaryWrite(message: QueryGranterGrantsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.QueryGranterGrantsRequest
 */
export declare const QueryGranterGrantsRequest: QueryGranterGrantsRequest$Type;
declare class QueryGranterGrantsResponse$Type extends MessageType<QueryGranterGrantsResponse> {
    constructor();
    create(value?: PartialMessage<QueryGranterGrantsResponse>): QueryGranterGrantsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGranterGrantsResponse): QueryGranterGrantsResponse;
    internalBinaryWrite(message: QueryGranterGrantsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.QueryGranterGrantsResponse
 */
export declare const QueryGranterGrantsResponse: QueryGranterGrantsResponse$Type;
declare class QueryGranteeGrantsRequest$Type extends MessageType<QueryGranteeGrantsRequest> {
    constructor();
    create(value?: PartialMessage<QueryGranteeGrantsRequest>): QueryGranteeGrantsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGranteeGrantsRequest): QueryGranteeGrantsRequest;
    internalBinaryWrite(message: QueryGranteeGrantsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.QueryGranteeGrantsRequest
 */
export declare const QueryGranteeGrantsRequest: QueryGranteeGrantsRequest$Type;
declare class QueryGranteeGrantsResponse$Type extends MessageType<QueryGranteeGrantsResponse> {
    constructor();
    create(value?: PartialMessage<QueryGranteeGrantsResponse>): QueryGranteeGrantsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryGranteeGrantsResponse): QueryGranteeGrantsResponse;
    internalBinaryWrite(message: QueryGranteeGrantsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.QueryGranteeGrantsResponse
 */
export declare const QueryGranteeGrantsResponse: QueryGranteeGrantsResponse$Type;
/**
 * @generated ServiceType for protobuf service cosmos.authz.v1beta1.Query
 */
export declare const Query: any;
export {};
