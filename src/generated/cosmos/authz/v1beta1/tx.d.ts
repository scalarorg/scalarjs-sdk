// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/authz/v1beta1/tx.proto" (package "cosmos.authz.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "../../../google/protobuf/any";
import { Grant } from "./authz";
/**
 * MsgGrant is a request type for Grant method. It declares authorization to the grantee
 * on behalf of the granter with the provided expiration time.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.MsgGrant
 */
export interface MsgGrant {
    /**
     * @generated from protobuf field: string granter = 1;
     */
    granter: string;
    /**
     * @generated from protobuf field: string grantee = 2;
     */
    grantee: string;
    /**
     * @generated from protobuf field: cosmos.authz.v1beta1.Grant grant = 3;
     */
    grant?: Grant;
}
/**
 * MsgExecResponse defines the Msg/MsgExecResponse response type.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.MsgExecResponse
 */
export interface MsgExecResponse {
    /**
     * @generated from protobuf field: repeated bytes results = 1;
     */
    results: Uint8Array[];
}
/**
 * MsgExec attempts to execute the provided messages using
 * authorizations granted to the grantee. Each message should have only
 * one signer corresponding to the granter of the authorization.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.MsgExec
 */
export interface MsgExec {
    /**
     * @generated from protobuf field: string grantee = 1;
     */
    grantee: string;
    /**
     * Authorization Msg requests to execute. Each msg must implement Authorization interface
     * The x/authz will try to find a grant matching (msg.signers[0], grantee, MsgTypeURL(msg))
     * triple and validate it.
     *
     * @generated from protobuf field: repeated google.protobuf.Any msgs = 2;
     */
    msgs: Any[];
}
/**
 * MsgGrantResponse defines the Msg/MsgGrant response type.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.MsgGrantResponse
 */
export interface MsgGrantResponse {
}
/**
 * MsgRevoke revokes any authorization with the provided sdk.Msg type on the
 * granter's account with that has been granted to the grantee.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.MsgRevoke
 */
export interface MsgRevoke {
    /**
     * @generated from protobuf field: string granter = 1;
     */
    granter: string;
    /**
     * @generated from protobuf field: string grantee = 2;
     */
    grantee: string;
    /**
     * @generated from protobuf field: string msg_type_url = 3;
     */
    msgTypeUrl: string;
}
/**
 * MsgRevokeResponse defines the Msg/MsgRevokeResponse response type.
 *
 * @generated from protobuf message cosmos.authz.v1beta1.MsgRevokeResponse
 */
export interface MsgRevokeResponse {
}
declare class MsgGrant$Type extends MessageType<MsgGrant> {
    constructor();
    create(value?: PartialMessage<MsgGrant>): MsgGrant;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgGrant): MsgGrant;
    internalBinaryWrite(message: MsgGrant, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.MsgGrant
 */
export declare const MsgGrant: MsgGrant$Type;
declare class MsgExecResponse$Type extends MessageType<MsgExecResponse> {
    constructor();
    create(value?: PartialMessage<MsgExecResponse>): MsgExecResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgExecResponse): MsgExecResponse;
    internalBinaryWrite(message: MsgExecResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.MsgExecResponse
 */
export declare const MsgExecResponse: MsgExecResponse$Type;
declare class MsgExec$Type extends MessageType<MsgExec> {
    constructor();
    create(value?: PartialMessage<MsgExec>): MsgExec;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgExec): MsgExec;
    internalBinaryWrite(message: MsgExec, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.MsgExec
 */
export declare const MsgExec: MsgExec$Type;
declare class MsgGrantResponse$Type extends MessageType<MsgGrantResponse> {
    constructor();
    create(value?: PartialMessage<MsgGrantResponse>): MsgGrantResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgGrantResponse): MsgGrantResponse;
    internalBinaryWrite(message: MsgGrantResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.MsgGrantResponse
 */
export declare const MsgGrantResponse: MsgGrantResponse$Type;
declare class MsgRevoke$Type extends MessageType<MsgRevoke> {
    constructor();
    create(value?: PartialMessage<MsgRevoke>): MsgRevoke;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgRevoke): MsgRevoke;
    internalBinaryWrite(message: MsgRevoke, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.MsgRevoke
 */
export declare const MsgRevoke: MsgRevoke$Type;
declare class MsgRevokeResponse$Type extends MessageType<MsgRevokeResponse> {
    constructor();
    create(value?: PartialMessage<MsgRevokeResponse>): MsgRevokeResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MsgRevokeResponse): MsgRevokeResponse;
    internalBinaryWrite(message: MsgRevokeResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.authz.v1beta1.MsgRevokeResponse
 */
export declare const MsgRevokeResponse: MsgRevokeResponse$Type;
/**
 * @generated ServiceType for protobuf service cosmos.authz.v1beta1.Msg
 */
export declare const Msg: any;
export {};
