// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/slashing/v1beta1/query.proto" (package "cosmos.slashing.v1beta1", syntax proto3)
// tslint:disable
import { Query } from "./query";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
/**
 * Query provides defines the gRPC querier service
 *
 * @generated from protobuf service cosmos.slashing.v1beta1.Query
 */
export class QueryClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = Query.typeName;
        this.methods = Query.methods;
        this.options = Query.options;
    }
    /**
     * Params queries the parameters of slashing module
     *
     * @generated from protobuf rpc: Params(cosmos.slashing.v1beta1.QueryParamsRequest) returns (cosmos.slashing.v1beta1.QueryParamsResponse);
     */
    params(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * SigningInfo queries the signing info of given cons address
     *
     * @generated from protobuf rpc: SigningInfo(cosmos.slashing.v1beta1.QuerySigningInfoRequest) returns (cosmos.slashing.v1beta1.QuerySigningInfoResponse);
     */
    signingInfo(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * SigningInfos queries signing info of all validators
     *
     * @generated from protobuf rpc: SigningInfos(cosmos.slashing.v1beta1.QuerySigningInfosRequest) returns (cosmos.slashing.v1beta1.QuerySigningInfosResponse);
     */
    signingInfos(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
}
