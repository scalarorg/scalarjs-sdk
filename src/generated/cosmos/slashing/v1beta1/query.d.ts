// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/slashing/v1beta1/query.proto" (package "cosmos.slashing.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { PageResponse } from "../../base/query/v1beta1/pagination";
import { PageRequest } from "../../base/query/v1beta1/pagination";
import { ValidatorSigningInfo } from "./slashing";
import { Params } from "./slashing";
/**
 * QueryParamsRequest is the request type for the Query/Params RPC method
 *
 * @generated from protobuf message cosmos.slashing.v1beta1.QueryParamsRequest
 */
export interface QueryParamsRequest {
}
/**
 * QueryParamsResponse is the response type for the Query/Params RPC method
 *
 * @generated from protobuf message cosmos.slashing.v1beta1.QueryParamsResponse
 */
export interface QueryParamsResponse {
    /**
     * @generated from protobuf field: cosmos.slashing.v1beta1.Params params = 1;
     */
    params?: Params;
}
/**
 * QuerySigningInfoRequest is the request type for the Query/SigningInfo RPC
 * method
 *
 * @generated from protobuf message cosmos.slashing.v1beta1.QuerySigningInfoRequest
 */
export interface QuerySigningInfoRequest {
    /**
     * cons_address is the address to query signing info of
     *
     * @generated from protobuf field: string cons_address = 1;
     */
    consAddress: string;
}
/**
 * QuerySigningInfoResponse is the response type for the Query/SigningInfo RPC
 * method
 *
 * @generated from protobuf message cosmos.slashing.v1beta1.QuerySigningInfoResponse
 */
export interface QuerySigningInfoResponse {
    /**
     * val_signing_info is the signing info of requested val cons address
     *
     * @generated from protobuf field: cosmos.slashing.v1beta1.ValidatorSigningInfo val_signing_info = 1;
     */
    valSigningInfo?: ValidatorSigningInfo;
}
/**
 * QuerySigningInfosRequest is the request type for the Query/SigningInfos RPC
 * method
 *
 * @generated from protobuf message cosmos.slashing.v1beta1.QuerySigningInfosRequest
 */
export interface QuerySigningInfosRequest {
    /**
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
     */
    pagination?: PageRequest;
}
/**
 * QuerySigningInfosResponse is the response type for the Query/SigningInfos RPC
 * method
 *
 * @generated from protobuf message cosmos.slashing.v1beta1.QuerySigningInfosResponse
 */
export interface QuerySigningInfosResponse {
    /**
     * info is the signing info of all validators
     *
     * @generated from protobuf field: repeated cosmos.slashing.v1beta1.ValidatorSigningInfo info = 1;
     */
    info: ValidatorSigningInfo[];
    /**
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
declare class QueryParamsRequest$Type extends MessageType<QueryParamsRequest> {
    constructor();
    create(value?: PartialMessage<QueryParamsRequest>): QueryParamsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryParamsRequest): QueryParamsRequest;
    internalBinaryWrite(message: QueryParamsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.slashing.v1beta1.QueryParamsRequest
 */
export declare const QueryParamsRequest: QueryParamsRequest$Type;
declare class QueryParamsResponse$Type extends MessageType<QueryParamsResponse> {
    constructor();
    create(value?: PartialMessage<QueryParamsResponse>): QueryParamsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryParamsResponse): QueryParamsResponse;
    internalBinaryWrite(message: QueryParamsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.slashing.v1beta1.QueryParamsResponse
 */
export declare const QueryParamsResponse: QueryParamsResponse$Type;
declare class QuerySigningInfoRequest$Type extends MessageType<QuerySigningInfoRequest> {
    constructor();
    create(value?: PartialMessage<QuerySigningInfoRequest>): QuerySigningInfoRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuerySigningInfoRequest): QuerySigningInfoRequest;
    internalBinaryWrite(message: QuerySigningInfoRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.slashing.v1beta1.QuerySigningInfoRequest
 */
export declare const QuerySigningInfoRequest: QuerySigningInfoRequest$Type;
declare class QuerySigningInfoResponse$Type extends MessageType<QuerySigningInfoResponse> {
    constructor();
    create(value?: PartialMessage<QuerySigningInfoResponse>): QuerySigningInfoResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuerySigningInfoResponse): QuerySigningInfoResponse;
    internalBinaryWrite(message: QuerySigningInfoResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.slashing.v1beta1.QuerySigningInfoResponse
 */
export declare const QuerySigningInfoResponse: QuerySigningInfoResponse$Type;
declare class QuerySigningInfosRequest$Type extends MessageType<QuerySigningInfosRequest> {
    constructor();
    create(value?: PartialMessage<QuerySigningInfosRequest>): QuerySigningInfosRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuerySigningInfosRequest): QuerySigningInfosRequest;
    internalBinaryWrite(message: QuerySigningInfosRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.slashing.v1beta1.QuerySigningInfosRequest
 */
export declare const QuerySigningInfosRequest: QuerySigningInfosRequest$Type;
declare class QuerySigningInfosResponse$Type extends MessageType<QuerySigningInfosResponse> {
    constructor();
    create(value?: PartialMessage<QuerySigningInfosResponse>): QuerySigningInfosResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuerySigningInfosResponse): QuerySigningInfosResponse;
    internalBinaryWrite(message: QuerySigningInfosResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.slashing.v1beta1.QuerySigningInfosResponse
 */
export declare const QuerySigningInfosResponse: QuerySigningInfosResponse$Type;
/**
 * @generated ServiceType for protobuf service cosmos.slashing.v1beta1.Query
 */
export declare const Query: any;
export {};
