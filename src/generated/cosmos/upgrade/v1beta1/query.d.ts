// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/upgrade/v1beta1/query.proto" (package "cosmos.upgrade.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ModuleVersion } from "./upgrade";
import { Plan } from "./upgrade";
/**
 * QueryCurrentPlanRequest is the request type for the Query/CurrentPlan RPC
 * method.
 *
 * @generated from protobuf message cosmos.upgrade.v1beta1.QueryCurrentPlanRequest
 */
export interface QueryCurrentPlanRequest {
}
/**
 * QueryCurrentPlanResponse is the response type for the Query/CurrentPlan RPC
 * method.
 *
 * @generated from protobuf message cosmos.upgrade.v1beta1.QueryCurrentPlanResponse
 */
export interface QueryCurrentPlanResponse {
    /**
     * plan is the current upgrade plan.
     *
     * @generated from protobuf field: cosmos.upgrade.v1beta1.Plan plan = 1;
     */
    plan?: Plan;
}
/**
 * QueryCurrentPlanRequest is the request type for the Query/AppliedPlan RPC
 * method.
 *
 * @generated from protobuf message cosmos.upgrade.v1beta1.QueryAppliedPlanRequest
 */
export interface QueryAppliedPlanRequest {
    /**
     * name is the name of the applied plan to query for.
     *
     * @generated from protobuf field: string name = 1;
     */
    name: string;
}
/**
 * QueryAppliedPlanResponse is the response type for the Query/AppliedPlan RPC
 * method.
 *
 * @generated from protobuf message cosmos.upgrade.v1beta1.QueryAppliedPlanResponse
 */
export interface QueryAppliedPlanResponse {
    /**
     * height is the block height at which the plan was applied.
     *
     * @generated from protobuf field: int64 height = 1;
     */
    height: string;
}
/**
 * QueryUpgradedConsensusStateRequest is the request type for the Query/UpgradedConsensusState
 * RPC method.
 *
 * @deprecated
 * @generated from protobuf message cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest
 */
export interface QueryUpgradedConsensusStateRequest {
    /**
     * last height of the current chain must be sent in request
     * as this is the height under which next consensus state is stored
     *
     * @generated from protobuf field: int64 last_height = 1;
     */
    lastHeight: string;
}
/**
 * QueryUpgradedConsensusStateResponse is the response type for the Query/UpgradedConsensusState
 * RPC method.
 *
 * @deprecated
 * @generated from protobuf message cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse
 */
export interface QueryUpgradedConsensusStateResponse {
    /**
     * Since: cosmos-sdk 0.43
     *
     * @generated from protobuf field: bytes upgraded_consensus_state = 2;
     */
    upgradedConsensusState: Uint8Array;
}
/**
 * QueryModuleVersionsRequest is the request type for the Query/ModuleVersions
 * RPC method.
 *
 * Since: cosmos-sdk 0.43
 *
 * @generated from protobuf message cosmos.upgrade.v1beta1.QueryModuleVersionsRequest
 */
export interface QueryModuleVersionsRequest {
    /**
     * module_name is a field to query a specific module
     * consensus version from state. Leaving this empty will
     * fetch the full list of module versions from state
     *
     * @generated from protobuf field: string module_name = 1;
     */
    moduleName: string;
}
/**
 * QueryModuleVersionsResponse is the response type for the Query/ModuleVersions
 * RPC method.
 *
 * Since: cosmos-sdk 0.43
 *
 * @generated from protobuf message cosmos.upgrade.v1beta1.QueryModuleVersionsResponse
 */
export interface QueryModuleVersionsResponse {
    /**
     * module_versions is a list of module names with their consensus versions.
     *
     * @generated from protobuf field: repeated cosmos.upgrade.v1beta1.ModuleVersion module_versions = 1;
     */
    moduleVersions: ModuleVersion[];
}
declare class QueryCurrentPlanRequest$Type extends MessageType<QueryCurrentPlanRequest> {
    constructor();
    create(value?: PartialMessage<QueryCurrentPlanRequest>): QueryCurrentPlanRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryCurrentPlanRequest): QueryCurrentPlanRequest;
    internalBinaryWrite(message: QueryCurrentPlanRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.upgrade.v1beta1.QueryCurrentPlanRequest
 */
export declare const QueryCurrentPlanRequest: QueryCurrentPlanRequest$Type;
declare class QueryCurrentPlanResponse$Type extends MessageType<QueryCurrentPlanResponse> {
    constructor();
    create(value?: PartialMessage<QueryCurrentPlanResponse>): QueryCurrentPlanResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryCurrentPlanResponse): QueryCurrentPlanResponse;
    internalBinaryWrite(message: QueryCurrentPlanResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.upgrade.v1beta1.QueryCurrentPlanResponse
 */
export declare const QueryCurrentPlanResponse: QueryCurrentPlanResponse$Type;
declare class QueryAppliedPlanRequest$Type extends MessageType<QueryAppliedPlanRequest> {
    constructor();
    create(value?: PartialMessage<QueryAppliedPlanRequest>): QueryAppliedPlanRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAppliedPlanRequest): QueryAppliedPlanRequest;
    internalBinaryWrite(message: QueryAppliedPlanRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.upgrade.v1beta1.QueryAppliedPlanRequest
 */
export declare const QueryAppliedPlanRequest: QueryAppliedPlanRequest$Type;
declare class QueryAppliedPlanResponse$Type extends MessageType<QueryAppliedPlanResponse> {
    constructor();
    create(value?: PartialMessage<QueryAppliedPlanResponse>): QueryAppliedPlanResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAppliedPlanResponse): QueryAppliedPlanResponse;
    internalBinaryWrite(message: QueryAppliedPlanResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.upgrade.v1beta1.QueryAppliedPlanResponse
 */
export declare const QueryAppliedPlanResponse: QueryAppliedPlanResponse$Type;
declare class QueryUpgradedConsensusStateRequest$Type extends MessageType<QueryUpgradedConsensusStateRequest> {
    constructor();
    create(value?: PartialMessage<QueryUpgradedConsensusStateRequest>): QueryUpgradedConsensusStateRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryUpgradedConsensusStateRequest): QueryUpgradedConsensusStateRequest;
    internalBinaryWrite(message: QueryUpgradedConsensusStateRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @deprecated
 * @generated MessageType for protobuf message cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateRequest
 */
export declare const QueryUpgradedConsensusStateRequest: QueryUpgradedConsensusStateRequest$Type;
declare class QueryUpgradedConsensusStateResponse$Type extends MessageType<QueryUpgradedConsensusStateResponse> {
    constructor();
    create(value?: PartialMessage<QueryUpgradedConsensusStateResponse>): QueryUpgradedConsensusStateResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryUpgradedConsensusStateResponse): QueryUpgradedConsensusStateResponse;
    internalBinaryWrite(message: QueryUpgradedConsensusStateResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @deprecated
 * @generated MessageType for protobuf message cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse
 */
export declare const QueryUpgradedConsensusStateResponse: QueryUpgradedConsensusStateResponse$Type;
declare class QueryModuleVersionsRequest$Type extends MessageType<QueryModuleVersionsRequest> {
    constructor();
    create(value?: PartialMessage<QueryModuleVersionsRequest>): QueryModuleVersionsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryModuleVersionsRequest): QueryModuleVersionsRequest;
    internalBinaryWrite(message: QueryModuleVersionsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.upgrade.v1beta1.QueryModuleVersionsRequest
 */
export declare const QueryModuleVersionsRequest: QueryModuleVersionsRequest$Type;
declare class QueryModuleVersionsResponse$Type extends MessageType<QueryModuleVersionsResponse> {
    constructor();
    create(value?: PartialMessage<QueryModuleVersionsResponse>): QueryModuleVersionsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryModuleVersionsResponse): QueryModuleVersionsResponse;
    internalBinaryWrite(message: QueryModuleVersionsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.upgrade.v1beta1.QueryModuleVersionsResponse
 */
export declare const QueryModuleVersionsResponse: QueryModuleVersionsResponse$Type;
/**
 * @generated ServiceType for protobuf service cosmos.upgrade.v1beta1.Query
 */
export declare const Query: any;
export {};
