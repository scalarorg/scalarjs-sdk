// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/base/query/v1beta1/pagination.proto" (package "cosmos.base.query.v1beta1", syntax proto3)
// tslint:disable
import { WireType } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// @generated message type with reflection information, may provide speed optimized methods
class PageRequest$Type extends MessageType {
    constructor() {
        super("cosmos.base.query.v1beta1.PageRequest", [
            { no: 1, name: "key", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "offset", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 3, name: "limit", kind: "scalar", T: 4 /*ScalarType.UINT64*/ },
            { no: 4, name: "count_total", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "reverse", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.key = new Uint8Array(0);
        message.offset = "0";
        message.limit = "0";
        message.countTotal = false;
        message.reverse = false;
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bytes key */ 1:
                    message.key = reader.bytes();
                    break;
                case /* uint64 offset */ 2:
                    message.offset = reader.uint64().toString();
                    break;
                case /* uint64 limit */ 3:
                    message.limit = reader.uint64().toString();
                    break;
                case /* bool count_total */ 4:
                    message.countTotal = reader.bool();
                    break;
                case /* bool reverse */ 5:
                    message.reverse = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bytes key = 1; */
        if (message.key.length)
            writer.tag(1, WireType.LengthDelimited).bytes(message.key);
        /* uint64 offset = 2; */
        if (message.offset !== "0")
            writer.tag(2, WireType.Varint).uint64(message.offset);
        /* uint64 limit = 3; */
        if (message.limit !== "0")
            writer.tag(3, WireType.Varint).uint64(message.limit);
        /* bool count_total = 4; */
        if (message.countTotal !== false)
            writer.tag(4, WireType.Varint).bool(message.countTotal);
        /* bool reverse = 5; */
        if (message.reverse !== false)
            writer.tag(5, WireType.Varint).bool(message.reverse);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.base.query.v1beta1.PageRequest
 */
export const PageRequest = new PageRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PageResponse$Type extends MessageType {
    constructor() {
        super("cosmos.base.query.v1beta1.PageResponse", [
            { no: 1, name: "next_key", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 2, name: "total", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ]);
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.nextKey = new Uint8Array(0);
        message.total = "0";
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bytes next_key */ 1:
                    message.nextKey = reader.bytes();
                    break;
                case /* uint64 total */ 2:
                    message.total = reader.uint64().toString();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bytes next_key = 1; */
        if (message.nextKey.length)
            writer.tag(1, WireType.LengthDelimited).bytes(message.nextKey);
        /* uint64 total = 2; */
        if (message.total !== "0")
            writer.tag(2, WireType.Varint).uint64(message.total);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.base.query.v1beta1.PageResponse
 */
export const PageResponse = new PageResponse$Type();
