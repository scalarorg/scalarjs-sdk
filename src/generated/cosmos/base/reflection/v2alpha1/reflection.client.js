// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/base/reflection/v2alpha1/reflection.proto" (package "cosmos.base.reflection.v2alpha1", syntax proto3)
// tslint:disable
import { ReflectionService } from "./reflection";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
/**
 * ReflectionService defines a service for application reflection.
 *
 * @generated from protobuf service cosmos.base.reflection.v2alpha1.ReflectionService
 */
export class ReflectionServiceClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = ReflectionService.typeName;
        this.methods = ReflectionService.methods;
        this.options = ReflectionService.options;
    }
    /**
     * GetAuthnDescriptor returns information on how to authenticate transactions in the application
     * NOTE: this RPC is still experimental and might be subject to breaking changes or removal in
     * future releases of the cosmos-sdk.
     *
     * @generated from protobuf rpc: GetAuthnDescriptor(cosmos.base.reflection.v2alpha1.GetAuthnDescriptorRequest) returns (cosmos.base.reflection.v2alpha1.GetAuthnDescriptorResponse);
     */
    getAuthnDescriptor(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * GetChainDescriptor returns the description of the chain
     *
     * @generated from protobuf rpc: GetChainDescriptor(cosmos.base.reflection.v2alpha1.GetChainDescriptorRequest) returns (cosmos.base.reflection.v2alpha1.GetChainDescriptorResponse);
     */
    getChainDescriptor(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * GetCodecDescriptor returns the descriptor of the codec of the application
     *
     * @generated from protobuf rpc: GetCodecDescriptor(cosmos.base.reflection.v2alpha1.GetCodecDescriptorRequest) returns (cosmos.base.reflection.v2alpha1.GetCodecDescriptorResponse);
     */
    getCodecDescriptor(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * GetConfigurationDescriptor returns the descriptor for the sdk.Config of the application
     *
     * @generated from protobuf rpc: GetConfigurationDescriptor(cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorRequest) returns (cosmos.base.reflection.v2alpha1.GetConfigurationDescriptorResponse);
     */
    getConfigurationDescriptor(input, options) {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * GetQueryServicesDescriptor returns the available gRPC queryable services of the application
     *
     * @generated from protobuf rpc: GetQueryServicesDescriptor(cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorRequest) returns (cosmos.base.reflection.v2alpha1.GetQueryServicesDescriptorResponse);
     */
    getQueryServicesDescriptor(input, options) {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * GetTxDescriptor returns information on the used transaction object and available msgs that can be used
     *
     * @generated from protobuf rpc: GetTxDescriptor(cosmos.base.reflection.v2alpha1.GetTxDescriptorRequest) returns (cosmos.base.reflection.v2alpha1.GetTxDescriptorResponse);
     */
    getTxDescriptor(input, options) {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
}
