// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/evidence/v1beta1/query.proto" (package "cosmos.evidence.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { PageResponse } from "../../base/query/v1beta1/pagination";
import { PageRequest } from "../../base/query/v1beta1/pagination";
import { Any } from "../../../google/protobuf/any";
/**
 * QueryEvidenceRequest is the request type for the Query/Evidence RPC method.
 *
 * @generated from protobuf message cosmos.evidence.v1beta1.QueryEvidenceRequest
 */
export interface QueryEvidenceRequest {
    /**
     * evidence_hash defines the hash of the requested evidence.
     *
     * @generated from protobuf field: bytes evidence_hash = 1;
     */
    evidenceHash: Uint8Array;
}
/**
 * QueryEvidenceResponse is the response type for the Query/Evidence RPC method.
 *
 * @generated from protobuf message cosmos.evidence.v1beta1.QueryEvidenceResponse
 */
export interface QueryEvidenceResponse {
    /**
     * evidence returns the requested evidence.
     *
     * @generated from protobuf field: google.protobuf.Any evidence = 1;
     */
    evidence?: Any;
}
/**
 * QueryEvidenceRequest is the request type for the Query/AllEvidence RPC
 * method.
 *
 * @generated from protobuf message cosmos.evidence.v1beta1.QueryAllEvidenceRequest
 */
export interface QueryAllEvidenceRequest {
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
     */
    pagination?: PageRequest;
}
/**
 * QueryAllEvidenceResponse is the response type for the Query/AllEvidence RPC
 * method.
 *
 * @generated from protobuf message cosmos.evidence.v1beta1.QueryAllEvidenceResponse
 */
export interface QueryAllEvidenceResponse {
    /**
     * evidence returns all evidences.
     *
     * @generated from protobuf field: repeated google.protobuf.Any evidence = 1;
     */
    evidence: Any[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
declare class QueryEvidenceRequest$Type extends MessageType<QueryEvidenceRequest> {
    constructor();
    create(value?: PartialMessage<QueryEvidenceRequest>): QueryEvidenceRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryEvidenceRequest): QueryEvidenceRequest;
    internalBinaryWrite(message: QueryEvidenceRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.evidence.v1beta1.QueryEvidenceRequest
 */
export declare const QueryEvidenceRequest: QueryEvidenceRequest$Type;
declare class QueryEvidenceResponse$Type extends MessageType<QueryEvidenceResponse> {
    constructor();
    create(value?: PartialMessage<QueryEvidenceResponse>): QueryEvidenceResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryEvidenceResponse): QueryEvidenceResponse;
    internalBinaryWrite(message: QueryEvidenceResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.evidence.v1beta1.QueryEvidenceResponse
 */
export declare const QueryEvidenceResponse: QueryEvidenceResponse$Type;
declare class QueryAllEvidenceRequest$Type extends MessageType<QueryAllEvidenceRequest> {
    constructor();
    create(value?: PartialMessage<QueryAllEvidenceRequest>): QueryAllEvidenceRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAllEvidenceRequest): QueryAllEvidenceRequest;
    internalBinaryWrite(message: QueryAllEvidenceRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.evidence.v1beta1.QueryAllEvidenceRequest
 */
export declare const QueryAllEvidenceRequest: QueryAllEvidenceRequest$Type;
declare class QueryAllEvidenceResponse$Type extends MessageType<QueryAllEvidenceResponse> {
    constructor();
    create(value?: PartialMessage<QueryAllEvidenceResponse>): QueryAllEvidenceResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAllEvidenceResponse): QueryAllEvidenceResponse;
    internalBinaryWrite(message: QueryAllEvidenceResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.evidence.v1beta1.QueryAllEvidenceResponse
 */
export declare const QueryAllEvidenceResponse: QueryAllEvidenceResponse$Type;
/**
 * @generated ServiceType for protobuf service cosmos.evidence.v1beta1.Query
 */
export declare const Query: any;
export {};
