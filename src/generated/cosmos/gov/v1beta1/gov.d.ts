// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/gov/v1beta1/gov.proto" (package "cosmos.gov.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Duration } from "../../../google/protobuf/duration";
import { Timestamp } from "../../../google/protobuf/timestamp";
import { Any } from "../../../google/protobuf/any";
import { Coin } from "../../base/v1beta1/coin";
/**
 * WeightedVoteOption defines a unit of vote for vote split.
 *
 * Since: cosmos-sdk 0.43
 *
 * @generated from protobuf message cosmos.gov.v1beta1.WeightedVoteOption
 */
export interface WeightedVoteOption {
    /**
     * @generated from protobuf field: cosmos.gov.v1beta1.VoteOption option = 1;
     */
    option: VoteOption;
    /**
     * @generated from protobuf field: string weight = 2;
     */
    weight: string;
}
/**
 * TextProposal defines a standard text proposal whose changes need to be
 * manually updated in case of approval.
 *
 * @generated from protobuf message cosmos.gov.v1beta1.TextProposal
 */
export interface TextProposal {
    /**
     * @generated from protobuf field: string title = 1;
     */
    title: string;
    /**
     * @generated from protobuf field: string description = 2;
     */
    description: string;
}
/**
 * Deposit defines an amount deposited by an account address to an active
 * proposal.
 *
 * @generated from protobuf message cosmos.gov.v1beta1.Deposit
 */
export interface Deposit {
    /**
     * @generated from protobuf field: uint64 proposal_id = 1;
     */
    proposalId: string;
    /**
     * @generated from protobuf field: string depositor = 2;
     */
    depositor: string;
    /**
     * @generated from protobuf field: repeated cosmos.base.v1beta1.Coin amount = 3;
     */
    amount: Coin[];
}
/**
 * Proposal defines the core field members of a governance proposal.
 *
 * @generated from protobuf message cosmos.gov.v1beta1.Proposal
 */
export interface Proposal {
    /**
     * @generated from protobuf field: uint64 proposal_id = 1;
     */
    proposalId: string;
    /**
     * @generated from protobuf field: google.protobuf.Any content = 2;
     */
    content?: Any;
    /**
     * @generated from protobuf field: cosmos.gov.v1beta1.ProposalStatus status = 3;
     */
    status: ProposalStatus;
    /**
     * @generated from protobuf field: cosmos.gov.v1beta1.TallyResult final_tally_result = 4;
     */
    finalTallyResult?: TallyResult;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp submit_time = 5;
     */
    submitTime?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp deposit_end_time = 6;
     */
    depositEndTime?: Timestamp;
    /**
     * @generated from protobuf field: repeated cosmos.base.v1beta1.Coin total_deposit = 7;
     */
    totalDeposit: Coin[];
    /**
     * @generated from protobuf field: google.protobuf.Timestamp voting_start_time = 8;
     */
    votingStartTime?: Timestamp;
    /**
     * @generated from protobuf field: google.protobuf.Timestamp voting_end_time = 9;
     */
    votingEndTime?: Timestamp;
}
/**
 * TallyResult defines a standard tally for a governance proposal.
 *
 * @generated from protobuf message cosmos.gov.v1beta1.TallyResult
 */
export interface TallyResult {
    /**
     * @generated from protobuf field: string yes = 1;
     */
    yes: string;
    /**
     * @generated from protobuf field: string abstain = 2;
     */
    abstain: string;
    /**
     * @generated from protobuf field: string no = 3;
     */
    no: string;
    /**
     * @generated from protobuf field: string no_with_veto = 4;
     */
    noWithVeto: string;
}
/**
 * Vote defines a vote on a governance proposal.
 * A Vote consists of a proposal ID, the voter, and the vote option.
 *
 * @generated from protobuf message cosmos.gov.v1beta1.Vote
 */
export interface Vote {
    /**
     * @generated from protobuf field: uint64 proposal_id = 1;
     */
    proposalId: string;
    /**
     * @generated from protobuf field: string voter = 2;
     */
    voter: string;
    /**
     * Deprecated: Prefer to use `options` instead. This field is set in queries
     * if and only if `len(options) == 1` and that option has weight 1. In all
     * other cases, this field will default to VOTE_OPTION_UNSPECIFIED.
     *
     * @deprecated
     * @generated from protobuf field: cosmos.gov.v1beta1.VoteOption option = 3 [deprecated = true];
     */
    option: VoteOption;
    /**
     * Since: cosmos-sdk 0.43
     *
     * @generated from protobuf field: repeated cosmos.gov.v1beta1.WeightedVoteOption options = 4;
     */
    options: WeightedVoteOption[];
}
/**
 * DepositParams defines the params for deposits on governance proposals.
 *
 * @generated from protobuf message cosmos.gov.v1beta1.DepositParams
 */
export interface DepositParams {
    /**
     *  Minimum deposit for a proposal to enter voting period.
     *
     * @generated from protobuf field: repeated cosmos.base.v1beta1.Coin min_deposit = 1;
     */
    minDeposit: Coin[];
    /**
     *  Maximum period for Atom holders to deposit on a proposal. Initial value: 2
     *  months.
     *
     * @generated from protobuf field: google.protobuf.Duration max_deposit_period = 2;
     */
    maxDepositPeriod?: Duration;
}
/**
 * VotingParams defines the params for voting on governance proposals.
 *
 * @generated from protobuf message cosmos.gov.v1beta1.VotingParams
 */
export interface VotingParams {
    /**
     *  Length of the voting period.
     *
     * @generated from protobuf field: google.protobuf.Duration voting_period = 1;
     */
    votingPeriod?: Duration;
}
/**
 * TallyParams defines the params for tallying votes on governance proposals.
 *
 * @generated from protobuf message cosmos.gov.v1beta1.TallyParams
 */
export interface TallyParams {
    /**
     *  Minimum percentage of total stake needed to vote for a result to be
     *  considered valid.
     *
     * @generated from protobuf field: bytes quorum = 1;
     */
    quorum: Uint8Array;
    /**
     *  Minimum proportion of Yes votes for proposal to pass. Default value: 0.5.
     *
     * @generated from protobuf field: bytes threshold = 2;
     */
    threshold: Uint8Array;
    /**
     *  Minimum value of Veto votes to Total votes ratio for proposal to be
     *  vetoed. Default value: 1/3.
     *
     * @generated from protobuf field: bytes veto_threshold = 3;
     */
    vetoThreshold: Uint8Array;
}
/**
 * VoteOption enumerates the valid vote options for a given governance proposal.
 *
 * @generated from protobuf enum cosmos.gov.v1beta1.VoteOption
 */
export declare enum VoteOption {
    /**
     * VOTE_OPTION_UNSPECIFIED defines a no-op vote option.
     *
     * @generated from protobuf enum value: VOTE_OPTION_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * VOTE_OPTION_YES defines a yes vote option.
     *
     * @generated from protobuf enum value: VOTE_OPTION_YES = 1;
     */
    YES = 1,
    /**
     * VOTE_OPTION_ABSTAIN defines an abstain vote option.
     *
     * @generated from protobuf enum value: VOTE_OPTION_ABSTAIN = 2;
     */
    ABSTAIN = 2,
    /**
     * VOTE_OPTION_NO defines a no vote option.
     *
     * @generated from protobuf enum value: VOTE_OPTION_NO = 3;
     */
    NO = 3,
    /**
     * VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.
     *
     * @generated from protobuf enum value: VOTE_OPTION_NO_WITH_VETO = 4;
     */
    NO_WITH_VETO = 4
}
/**
 * ProposalStatus enumerates the valid statuses of a proposal.
 *
 * @generated from protobuf enum cosmos.gov.v1beta1.ProposalStatus
 */
export declare enum ProposalStatus {
    /**
     * PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
     *
     * @generated from protobuf enum value: PROPOSAL_STATUS_UNSPECIFIED = 0;
     */
    UNSPECIFIED = 0,
    /**
     * PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
     * period.
     *
     * @generated from protobuf enum value: PROPOSAL_STATUS_DEPOSIT_PERIOD = 1;
     */
    DEPOSIT_PERIOD = 1,
    /**
     * PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
     * period.
     *
     * @generated from protobuf enum value: PROPOSAL_STATUS_VOTING_PERIOD = 2;
     */
    VOTING_PERIOD = 2,
    /**
     * PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
     * passed.
     *
     * @generated from protobuf enum value: PROPOSAL_STATUS_PASSED = 3;
     */
    PASSED = 3,
    /**
     * PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
     * been rejected.
     *
     * @generated from protobuf enum value: PROPOSAL_STATUS_REJECTED = 4;
     */
    REJECTED = 4,
    /**
     * PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
     * failed.
     *
     * @generated from protobuf enum value: PROPOSAL_STATUS_FAILED = 5;
     */
    FAILED = 5
}
declare class WeightedVoteOption$Type extends MessageType<WeightedVoteOption> {
    constructor();
    create(value?: PartialMessage<WeightedVoteOption>): WeightedVoteOption;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WeightedVoteOption): WeightedVoteOption;
    internalBinaryWrite(message: WeightedVoteOption, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.gov.v1beta1.WeightedVoteOption
 */
export declare const WeightedVoteOption: WeightedVoteOption$Type;
declare class TextProposal$Type extends MessageType<TextProposal> {
    constructor();
    create(value?: PartialMessage<TextProposal>): TextProposal;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TextProposal): TextProposal;
    internalBinaryWrite(message: TextProposal, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.gov.v1beta1.TextProposal
 */
export declare const TextProposal: TextProposal$Type;
declare class Deposit$Type extends MessageType<Deposit> {
    constructor();
    create(value?: PartialMessage<Deposit>): Deposit;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Deposit): Deposit;
    internalBinaryWrite(message: Deposit, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.gov.v1beta1.Deposit
 */
export declare const Deposit: Deposit$Type;
declare class Proposal$Type extends MessageType<Proposal> {
    constructor();
    create(value?: PartialMessage<Proposal>): Proposal;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Proposal): Proposal;
    internalBinaryWrite(message: Proposal, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.gov.v1beta1.Proposal
 */
export declare const Proposal: Proposal$Type;
declare class TallyResult$Type extends MessageType<TallyResult> {
    constructor();
    create(value?: PartialMessage<TallyResult>): TallyResult;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TallyResult): TallyResult;
    internalBinaryWrite(message: TallyResult, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.gov.v1beta1.TallyResult
 */
export declare const TallyResult: TallyResult$Type;
declare class Vote$Type extends MessageType<Vote> {
    constructor();
    create(value?: PartialMessage<Vote>): Vote;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Vote): Vote;
    internalBinaryWrite(message: Vote, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.gov.v1beta1.Vote
 */
export declare const Vote: Vote$Type;
declare class DepositParams$Type extends MessageType<DepositParams> {
    constructor();
    create(value?: PartialMessage<DepositParams>): DepositParams;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DepositParams): DepositParams;
    internalBinaryWrite(message: DepositParams, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.gov.v1beta1.DepositParams
 */
export declare const DepositParams: DepositParams$Type;
declare class VotingParams$Type extends MessageType<VotingParams> {
    constructor();
    create(value?: PartialMessage<VotingParams>): VotingParams;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VotingParams): VotingParams;
    internalBinaryWrite(message: VotingParams, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.gov.v1beta1.VotingParams
 */
export declare const VotingParams: VotingParams$Type;
declare class TallyParams$Type extends MessageType<TallyParams> {
    constructor();
    create(value?: PartialMessage<TallyParams>): TallyParams;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TallyParams): TallyParams;
    internalBinaryWrite(message: TallyParams, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.gov.v1beta1.TallyParams
 */
export declare const TallyParams: TallyParams$Type;
export {};
