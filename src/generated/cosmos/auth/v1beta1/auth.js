// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/auth/v1beta1/auth.proto" (package "cosmos.auth.v1beta1", syntax proto3)
// tslint:disable
import { WireType } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "../../../google/protobuf/any";
// @generated message type with reflection information, may provide speed optimized methods
class BaseAccount$Type extends MessageType {
    constructor() {
        super("cosmos.auth.v1beta1.BaseAccount", [
            { no: 1, name: "address", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "pub_key", kind: "message", T: () => Any, options: { "gogoproto.jsontag": "public_key,omitempty", "gogoproto.moretags": "yaml:\"public_key\"" } },
            { no: 3, name: "account_number", kind: "scalar", T: 4 /*ScalarType.UINT64*/, options: { "gogoproto.moretags": "yaml:\"account_number\"" } },
            { no: 4, name: "sequence", kind: "scalar", T: 4 /*ScalarType.UINT64*/ }
        ], { "cosmos_proto.implements_interface": "AccountI", "gogoproto.goproto_getters": false, "gogoproto.goproto_stringer": false, "gogoproto.equal": false });
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.address = "";
        message.accountNumber = "0";
        message.sequence = "0";
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string address */ 1:
                    message.address = reader.string();
                    break;
                case /* google.protobuf.Any pub_key */ 2:
                    message.pubKey = Any.internalBinaryRead(reader, reader.uint32(), options, message.pubKey);
                    break;
                case /* uint64 account_number */ 3:
                    message.accountNumber = reader.uint64().toString();
                    break;
                case /* uint64 sequence */ 4:
                    message.sequence = reader.uint64().toString();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string address = 1; */
        if (message.address !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.address);
        /* google.protobuf.Any pub_key = 2; */
        if (message.pubKey)
            Any.internalBinaryWrite(message.pubKey, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* uint64 account_number = 3; */
        if (message.accountNumber !== "0")
            writer.tag(3, WireType.Varint).uint64(message.accountNumber);
        /* uint64 sequence = 4; */
        if (message.sequence !== "0")
            writer.tag(4, WireType.Varint).uint64(message.sequence);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.auth.v1beta1.BaseAccount
 */
export const BaseAccount = new BaseAccount$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleAccount$Type extends MessageType {
    constructor() {
        super("cosmos.auth.v1beta1.ModuleAccount", [
            { no: 1, name: "base_account", kind: "message", T: () => BaseAccount, options: { "gogoproto.embed": true, "gogoproto.moretags": "yaml:\"base_account\"" } },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "permissions", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ], { "cosmos_proto.implements_interface": "ModuleAccountI", "gogoproto.goproto_getters": false, "gogoproto.goproto_stringer": false });
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.name = "";
        message.permissions = [];
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* cosmos.auth.v1beta1.BaseAccount base_account */ 1:
                    message.baseAccount = BaseAccount.internalBinaryRead(reader, reader.uint32(), options, message.baseAccount);
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* repeated string permissions */ 3:
                    message.permissions.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* cosmos.auth.v1beta1.BaseAccount base_account = 1; */
        if (message.baseAccount)
            BaseAccount.internalBinaryWrite(message.baseAccount, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* repeated string permissions = 3; */
        for (let i = 0; i < message.permissions.length; i++)
            writer.tag(3, WireType.LengthDelimited).string(message.permissions[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.auth.v1beta1.ModuleAccount
 */
export const ModuleAccount = new ModuleAccount$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Params$Type extends MessageType {
    constructor() {
        super("cosmos.auth.v1beta1.Params", [
            { no: 1, name: "max_memo_characters", kind: "scalar", T: 4 /*ScalarType.UINT64*/, options: { "gogoproto.moretags": "yaml:\"max_memo_characters\"" } },
            { no: 2, name: "tx_sig_limit", kind: "scalar", T: 4 /*ScalarType.UINT64*/, options: { "gogoproto.moretags": "yaml:\"tx_sig_limit\"" } },
            { no: 3, name: "tx_size_cost_per_byte", kind: "scalar", T: 4 /*ScalarType.UINT64*/, options: { "gogoproto.moretags": "yaml:\"tx_size_cost_per_byte\"" } },
            { no: 4, name: "sig_verify_cost_ed25519", kind: "scalar", T: 4 /*ScalarType.UINT64*/, options: { "gogoproto.customname": "SigVerifyCostED25519", "gogoproto.moretags": "yaml:\"sig_verify_cost_ed25519\"" } },
            { no: 5, name: "sig_verify_cost_secp256k1", kind: "scalar", jsonName: "sigVerifyCostSecp256k1", T: 4 /*ScalarType.UINT64*/, options: { "gogoproto.customname": "SigVerifyCostSecp256k1", "gogoproto.moretags": "yaml:\"sig_verify_cost_secp256k1\"" } }
        ], { "gogoproto.goproto_stringer": false, "gogoproto.equal": true });
    }
    create(value) {
        const message = globalThis.Object.create((this.messagePrototype));
        message.maxMemoCharacters = "0";
        message.txSigLimit = "0";
        message.txSizeCostPerByte = "0";
        message.sigVerifyCostEd25519 = "0";
        message.sigVerifyCostSecp256K1 = "0";
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target !== null && target !== void 0 ? target : this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 max_memo_characters */ 1:
                    message.maxMemoCharacters = reader.uint64().toString();
                    break;
                case /* uint64 tx_sig_limit */ 2:
                    message.txSigLimit = reader.uint64().toString();
                    break;
                case /* uint64 tx_size_cost_per_byte */ 3:
                    message.txSizeCostPerByte = reader.uint64().toString();
                    break;
                case /* uint64 sig_verify_cost_ed25519 */ 4:
                    message.sigVerifyCostEd25519 = reader.uint64().toString();
                    break;
                case /* uint64 sig_verify_cost_secp256k1 = 5 [json_name = "sigVerifyCostSecp256k1"];*/ 5:
                    message.sigVerifyCostSecp256K1 = reader.uint64().toString();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* uint64 max_memo_characters = 1; */
        if (message.maxMemoCharacters !== "0")
            writer.tag(1, WireType.Varint).uint64(message.maxMemoCharacters);
        /* uint64 tx_sig_limit = 2; */
        if (message.txSigLimit !== "0")
            writer.tag(2, WireType.Varint).uint64(message.txSigLimit);
        /* uint64 tx_size_cost_per_byte = 3; */
        if (message.txSizeCostPerByte !== "0")
            writer.tag(3, WireType.Varint).uint64(message.txSizeCostPerByte);
        /* uint64 sig_verify_cost_ed25519 = 4; */
        if (message.sigVerifyCostEd25519 !== "0")
            writer.tag(4, WireType.Varint).uint64(message.sigVerifyCostEd25519);
        /* uint64 sig_verify_cost_secp256k1 = 5 [json_name = "sigVerifyCostSecp256k1"]; */
        if (message.sigVerifyCostSecp256K1 !== "0")
            writer.tag(5, WireType.Varint).uint64(message.sigVerifyCostSecp256K1);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message cosmos.auth.v1beta1.Params
 */
export const Params = new Params$Type();
