// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/crypto/multisig/keys.proto" (package "cosmos.crypto.multisig", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Any } from "../../../google/protobuf/any";
/**
 * LegacyAminoPubKey specifies a public key type
 * which nests multiple public keys and a threshold,
 * it uses legacy amino address rules.
 *
 * @generated from protobuf message cosmos.crypto.multisig.LegacyAminoPubKey
 */
export interface LegacyAminoPubKey {
    /**
     * @generated from protobuf field: uint32 threshold = 1;
     */
    threshold: number;
    /**
     * @generated from protobuf field: repeated google.protobuf.Any public_keys = 2;
     */
    publicKeys: Any[];
}
declare class LegacyAminoPubKey$Type extends MessageType<LegacyAminoPubKey> {
    constructor();
    create(value?: PartialMessage<LegacyAminoPubKey>): LegacyAminoPubKey;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LegacyAminoPubKey): LegacyAminoPubKey;
    internalBinaryWrite(message: LegacyAminoPubKey, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.crypto.multisig.LegacyAminoPubKey
 */
export declare const LegacyAminoPubKey: LegacyAminoPubKey$Type;
export {};
