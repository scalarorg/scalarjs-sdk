// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/crypto/secp256k1/keys.proto" (package "cosmos.crypto.secp256k1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * PubKey defines a secp256k1 public key
 * Key is the compressed form of the pubkey. The first byte depends is a 0x02 byte
 * if the y-coordinate is the lexicographically largest of the two associated with
 * the x-coordinate. Otherwise the first byte is a 0x03.
 * This prefix is followed with the x-coordinate.
 *
 * @generated from protobuf message cosmos.crypto.secp256k1.PubKey
 */
export interface PubKey {
    /**
     * @generated from protobuf field: bytes key = 1;
     */
    key: Uint8Array;
}
/**
 * PrivKey defines a secp256k1 private key.
 *
 * @generated from protobuf message cosmos.crypto.secp256k1.PrivKey
 */
export interface PrivKey {
    /**
     * @generated from protobuf field: bytes key = 1;
     */
    key: Uint8Array;
}
declare class PubKey$Type extends MessageType<PubKey> {
    constructor();
    create(value?: PartialMessage<PubKey>): PubKey;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PubKey): PubKey;
    internalBinaryWrite(message: PubKey, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.crypto.secp256k1.PubKey
 */
export declare const PubKey: PubKey$Type;
declare class PrivKey$Type extends MessageType<PrivKey> {
    constructor();
    create(value?: PartialMessage<PrivKey>): PrivKey;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PrivKey): PrivKey;
    internalBinaryWrite(message: PrivKey, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.crypto.secp256k1.PrivKey
 */
export declare const PrivKey: PrivKey$Type;
export {};
