// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/distribution/v1beta1/tx.proto" (package "cosmos.distribution.v1beta1", syntax proto3)
// tslint:disable
import { Msg } from "./tx";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
/**
 * Msg defines the distribution Msg service.
 *
 * @generated from protobuf service cosmos.distribution.v1beta1.Msg
 */
export class MsgClient {
    constructor(_transport) {
        this._transport = _transport;
        this.typeName = Msg.typeName;
        this.methods = Msg.methods;
        this.options = Msg.options;
    }
    /**
     * SetWithdrawAddress defines a method to change the withdraw address
     * for a delegator (or validator self-delegation).
     *
     * @generated from protobuf rpc: SetWithdrawAddress(cosmos.distribution.v1beta1.MsgSetWithdrawAddress) returns (cosmos.distribution.v1beta1.MsgSetWithdrawAddressResponse);
     */
    setWithdrawAddress(input, options) {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * WithdrawDelegatorReward defines a method to withdraw rewards of delegator
     * from a single validator.
     *
     * @generated from protobuf rpc: WithdrawDelegatorReward(cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward) returns (cosmos.distribution.v1beta1.MsgWithdrawDelegatorRewardResponse);
     */
    withdrawDelegatorReward(input, options) {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * WithdrawValidatorCommission defines a method to withdraw the
     * full commission to the validator address.
     *
     * @generated from protobuf rpc: WithdrawValidatorCommission(cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission) returns (cosmos.distribution.v1beta1.MsgWithdrawValidatorCommissionResponse);
     */
    withdrawValidatorCommission(input, options) {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
    /**
     * FundCommunityPool defines a method to allow an account to directly
     * fund the community pool.
     *
     * @generated from protobuf rpc: FundCommunityPool(cosmos.distribution.v1beta1.MsgFundCommunityPool) returns (cosmos.distribution.v1beta1.MsgFundCommunityPoolResponse);
     */
    fundCommunityPool(input, options) {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept("unary", this._transport, method, opt, input);
    }
}
