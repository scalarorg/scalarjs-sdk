// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/distribution/v1beta1/query.proto" (package "cosmos.distribution.v1beta1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import type { QueryCommunityPoolResponse } from "./query";
import type { QueryCommunityPoolRequest } from "./query";
import type { QueryDelegatorWithdrawAddressResponse } from "./query";
import type { QueryDelegatorWithdrawAddressRequest } from "./query";
import type { QueryDelegatorValidatorsResponse } from "./query";
import type { QueryDelegatorValidatorsRequest } from "./query";
import type { QueryDelegationTotalRewardsResponse } from "./query";
import type { QueryDelegationTotalRewardsRequest } from "./query";
import type { QueryDelegationRewardsResponse } from "./query";
import type { QueryDelegationRewardsRequest } from "./query";
import type { QueryValidatorSlashesResponse } from "./query";
import type { QueryValidatorSlashesRequest } from "./query";
import type { QueryValidatorCommissionResponse } from "./query";
import type { QueryValidatorCommissionRequest } from "./query";
import type { QueryValidatorOutstandingRewardsResponse } from "./query";
import type { QueryValidatorOutstandingRewardsRequest } from "./query";
import type { QueryParamsResponse } from "./query";
import type { QueryParamsRequest } from "./query";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * Query defines the gRPC querier service for distribution module.
 *
 * @generated from protobuf service cosmos.distribution.v1beta1.Query
 */
export interface IQueryClient {
    /**
     * Params queries params of the distribution module.
     *
     * @generated from protobuf rpc: Params(cosmos.distribution.v1beta1.QueryParamsRequest) returns (cosmos.distribution.v1beta1.QueryParamsResponse);
     */
    params(input: QueryParamsRequest, options?: RpcOptions): UnaryCall<QueryParamsRequest, QueryParamsResponse>;
    /**
     * ValidatorOutstandingRewards queries rewards of a validator address.
     *
     * @generated from protobuf rpc: ValidatorOutstandingRewards(cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest) returns (cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse);
     */
    validatorOutstandingRewards(input: QueryValidatorOutstandingRewardsRequest, options?: RpcOptions): UnaryCall<QueryValidatorOutstandingRewardsRequest, QueryValidatorOutstandingRewardsResponse>;
    /**
     * ValidatorCommission queries accumulated commission for a validator.
     *
     * @generated from protobuf rpc: ValidatorCommission(cosmos.distribution.v1beta1.QueryValidatorCommissionRequest) returns (cosmos.distribution.v1beta1.QueryValidatorCommissionResponse);
     */
    validatorCommission(input: QueryValidatorCommissionRequest, options?: RpcOptions): UnaryCall<QueryValidatorCommissionRequest, QueryValidatorCommissionResponse>;
    /**
     * ValidatorSlashes queries slash events of a validator.
     *
     * @generated from protobuf rpc: ValidatorSlashes(cosmos.distribution.v1beta1.QueryValidatorSlashesRequest) returns (cosmos.distribution.v1beta1.QueryValidatorSlashesResponse);
     */
    validatorSlashes(input: QueryValidatorSlashesRequest, options?: RpcOptions): UnaryCall<QueryValidatorSlashesRequest, QueryValidatorSlashesResponse>;
    /**
     * DelegationRewards queries the total rewards accrued by a delegation.
     *
     * @generated from protobuf rpc: DelegationRewards(cosmos.distribution.v1beta1.QueryDelegationRewardsRequest) returns (cosmos.distribution.v1beta1.QueryDelegationRewardsResponse);
     */
    delegationRewards(input: QueryDelegationRewardsRequest, options?: RpcOptions): UnaryCall<QueryDelegationRewardsRequest, QueryDelegationRewardsResponse>;
    /**
     * DelegationTotalRewards queries the total rewards accrued by a each
     * validator.
     *
     * @generated from protobuf rpc: DelegationTotalRewards(cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest) returns (cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse);
     */
    delegationTotalRewards(input: QueryDelegationTotalRewardsRequest, options?: RpcOptions): UnaryCall<QueryDelegationTotalRewardsRequest, QueryDelegationTotalRewardsResponse>;
    /**
     * DelegatorValidators queries the validators of a delegator.
     *
     * @generated from protobuf rpc: DelegatorValidators(cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest) returns (cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse);
     */
    delegatorValidators(input: QueryDelegatorValidatorsRequest, options?: RpcOptions): UnaryCall<QueryDelegatorValidatorsRequest, QueryDelegatorValidatorsResponse>;
    /**
     * DelegatorWithdrawAddress queries withdraw address of a delegator.
     *
     * @generated from protobuf rpc: DelegatorWithdrawAddress(cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest) returns (cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse);
     */
    delegatorWithdrawAddress(input: QueryDelegatorWithdrawAddressRequest, options?: RpcOptions): UnaryCall<QueryDelegatorWithdrawAddressRequest, QueryDelegatorWithdrawAddressResponse>;
    /**
     * CommunityPool queries the community pool coins.
     *
     * @generated from protobuf rpc: CommunityPool(cosmos.distribution.v1beta1.QueryCommunityPoolRequest) returns (cosmos.distribution.v1beta1.QueryCommunityPoolResponse);
     */
    communityPool(input: QueryCommunityPoolRequest, options?: RpcOptions): UnaryCall<QueryCommunityPoolRequest, QueryCommunityPoolResponse>;
}
/**
 * Query defines the gRPC querier service for distribution module.
 *
 * @generated from protobuf service cosmos.distribution.v1beta1.Query
 */
export declare class QueryClient implements IQueryClient, ServiceInfo {
    private readonly _transport;
    typeName: any;
    methods: any;
    options: any;
    constructor(_transport: RpcTransport);
    /**
     * Params queries params of the distribution module.
     *
     * @generated from protobuf rpc: Params(cosmos.distribution.v1beta1.QueryParamsRequest) returns (cosmos.distribution.v1beta1.QueryParamsResponse);
     */
    params(input: QueryParamsRequest, options?: RpcOptions): UnaryCall<QueryParamsRequest, QueryParamsResponse>;
    /**
     * ValidatorOutstandingRewards queries rewards of a validator address.
     *
     * @generated from protobuf rpc: ValidatorOutstandingRewards(cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsRequest) returns (cosmos.distribution.v1beta1.QueryValidatorOutstandingRewardsResponse);
     */
    validatorOutstandingRewards(input: QueryValidatorOutstandingRewardsRequest, options?: RpcOptions): UnaryCall<QueryValidatorOutstandingRewardsRequest, QueryValidatorOutstandingRewardsResponse>;
    /**
     * ValidatorCommission queries accumulated commission for a validator.
     *
     * @generated from protobuf rpc: ValidatorCommission(cosmos.distribution.v1beta1.QueryValidatorCommissionRequest) returns (cosmos.distribution.v1beta1.QueryValidatorCommissionResponse);
     */
    validatorCommission(input: QueryValidatorCommissionRequest, options?: RpcOptions): UnaryCall<QueryValidatorCommissionRequest, QueryValidatorCommissionResponse>;
    /**
     * ValidatorSlashes queries slash events of a validator.
     *
     * @generated from protobuf rpc: ValidatorSlashes(cosmos.distribution.v1beta1.QueryValidatorSlashesRequest) returns (cosmos.distribution.v1beta1.QueryValidatorSlashesResponse);
     */
    validatorSlashes(input: QueryValidatorSlashesRequest, options?: RpcOptions): UnaryCall<QueryValidatorSlashesRequest, QueryValidatorSlashesResponse>;
    /**
     * DelegationRewards queries the total rewards accrued by a delegation.
     *
     * @generated from protobuf rpc: DelegationRewards(cosmos.distribution.v1beta1.QueryDelegationRewardsRequest) returns (cosmos.distribution.v1beta1.QueryDelegationRewardsResponse);
     */
    delegationRewards(input: QueryDelegationRewardsRequest, options?: RpcOptions): UnaryCall<QueryDelegationRewardsRequest, QueryDelegationRewardsResponse>;
    /**
     * DelegationTotalRewards queries the total rewards accrued by a each
     * validator.
     *
     * @generated from protobuf rpc: DelegationTotalRewards(cosmos.distribution.v1beta1.QueryDelegationTotalRewardsRequest) returns (cosmos.distribution.v1beta1.QueryDelegationTotalRewardsResponse);
     */
    delegationTotalRewards(input: QueryDelegationTotalRewardsRequest, options?: RpcOptions): UnaryCall<QueryDelegationTotalRewardsRequest, QueryDelegationTotalRewardsResponse>;
    /**
     * DelegatorValidators queries the validators of a delegator.
     *
     * @generated from protobuf rpc: DelegatorValidators(cosmos.distribution.v1beta1.QueryDelegatorValidatorsRequest) returns (cosmos.distribution.v1beta1.QueryDelegatorValidatorsResponse);
     */
    delegatorValidators(input: QueryDelegatorValidatorsRequest, options?: RpcOptions): UnaryCall<QueryDelegatorValidatorsRequest, QueryDelegatorValidatorsResponse>;
    /**
     * DelegatorWithdrawAddress queries withdraw address of a delegator.
     *
     * @generated from protobuf rpc: DelegatorWithdrawAddress(cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressRequest) returns (cosmos.distribution.v1beta1.QueryDelegatorWithdrawAddressResponse);
     */
    delegatorWithdrawAddress(input: QueryDelegatorWithdrawAddressRequest, options?: RpcOptions): UnaryCall<QueryDelegatorWithdrawAddressRequest, QueryDelegatorWithdrawAddressResponse>;
    /**
     * CommunityPool queries the community pool coins.
     *
     * @generated from protobuf rpc: CommunityPool(cosmos.distribution.v1beta1.QueryCommunityPoolRequest) returns (cosmos.distribution.v1beta1.QueryCommunityPoolResponse);
     */
    communityPool(input: QueryCommunityPoolRequest, options?: RpcOptions): UnaryCall<QueryCommunityPoolRequest, QueryCommunityPoolResponse>;
}
