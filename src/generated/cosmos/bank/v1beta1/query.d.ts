// @generated by protobuf-ts 2.9.4 with parameter long_type_string,output_javascript_es2015,generate_dependencies
// @generated from protobuf file "cosmos/bank/v1beta1/query.proto" (package "cosmos.bank.v1beta1", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Metadata } from "./bank";
import { Params } from "./bank";
import { PageResponse } from "../../base/query/v1beta1/pagination";
import { PageRequest } from "../../base/query/v1beta1/pagination";
import { Coin } from "../../base/v1beta1/coin";
/**
 * QueryBalanceRequest is the request type for the Query/Balance RPC method.
 *
 * @generated from protobuf message cosmos.bank.v1beta1.QueryBalanceRequest
 */
export interface QueryBalanceRequest {
    /**
     * address is the address to query balances for.
     *
     * @generated from protobuf field: string address = 1;
     */
    address: string;
    /**
     * denom is the coin denom to query balances for.
     *
     * @generated from protobuf field: string denom = 2;
     */
    denom: string;
}
/**
 * QueryBalanceResponse is the response type for the Query/Balance RPC method.
 *
 * @generated from protobuf message cosmos.bank.v1beta1.QueryBalanceResponse
 */
export interface QueryBalanceResponse {
    /**
     * balance is the balance of the coin.
     *
     * @generated from protobuf field: cosmos.base.v1beta1.Coin balance = 1;
     */
    balance?: Coin;
}
/**
 * QueryBalanceRequest is the request type for the Query/AllBalances RPC method.
 *
 * @generated from protobuf message cosmos.bank.v1beta1.QueryAllBalancesRequest
 */
export interface QueryAllBalancesRequest {
    /**
     * address is the address to query balances for.
     *
     * @generated from protobuf field: string address = 1;
     */
    address: string;
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QueryAllBalancesResponse is the response type for the Query/AllBalances RPC
 * method.
 *
 * @generated from protobuf message cosmos.bank.v1beta1.QueryAllBalancesResponse
 */
export interface QueryAllBalancesResponse {
    /**
     * balances is the balances of all the coins.
     *
     * @generated from protobuf field: repeated cosmos.base.v1beta1.Coin balances = 1;
     */
    balances: Coin[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QuerySpendableBalancesRequest defines the gRPC request structure for querying
 * an account's spendable balances.
 *
 * @generated from protobuf message cosmos.bank.v1beta1.QuerySpendableBalancesRequest
 */
export interface QuerySpendableBalancesRequest {
    /**
     * address is the address to query spendable balances for.
     *
     * @generated from protobuf field: string address = 1;
     */
    address: string;
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 2;
     */
    pagination?: PageRequest;
}
/**
 * QuerySpendableBalancesResponse defines the gRPC response structure for querying
 * an account's spendable balances.
 *
 * @generated from protobuf message cosmos.bank.v1beta1.QuerySpendableBalancesResponse
 */
export interface QuerySpendableBalancesResponse {
    /**
     * balances is the spendable balances of all the coins.
     *
     * @generated from protobuf field: repeated cosmos.base.v1beta1.Coin balances = 1;
     */
    balances: Coin[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryTotalSupplyRequest is the request type for the Query/TotalSupply RPC
 * method.
 *
 * @generated from protobuf message cosmos.bank.v1beta1.QueryTotalSupplyRequest
 */
export interface QueryTotalSupplyRequest {
    /**
     * pagination defines an optional pagination for the request.
     *
     * Since: cosmos-sdk 0.43
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
     */
    pagination?: PageRequest;
}
/**
 * QueryTotalSupplyResponse is the response type for the Query/TotalSupply RPC
 * method
 *
 * @generated from protobuf message cosmos.bank.v1beta1.QueryTotalSupplyResponse
 */
export interface QueryTotalSupplyResponse {
    /**
     * supply is the supply of the coins
     *
     * @generated from protobuf field: repeated cosmos.base.v1beta1.Coin supply = 1;
     */
    supply: Coin[];
    /**
     * pagination defines the pagination in the response.
     *
     * Since: cosmos-sdk 0.43
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QuerySupplyOfRequest is the request type for the Query/SupplyOf RPC method.
 *
 * @generated from protobuf message cosmos.bank.v1beta1.QuerySupplyOfRequest
 */
export interface QuerySupplyOfRequest {
    /**
     * denom is the coin denom to query balances for.
     *
     * @generated from protobuf field: string denom = 1;
     */
    denom: string;
}
/**
 * QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC method.
 *
 * @generated from protobuf message cosmos.bank.v1beta1.QuerySupplyOfResponse
 */
export interface QuerySupplyOfResponse {
    /**
     * amount is the supply of the coin.
     *
     * @generated from protobuf field: cosmos.base.v1beta1.Coin amount = 1;
     */
    amount?: Coin;
}
/**
 * QueryParamsRequest defines the request type for querying x/bank parameters.
 *
 * @generated from protobuf message cosmos.bank.v1beta1.QueryParamsRequest
 */
export interface QueryParamsRequest {
}
/**
 * QueryParamsResponse defines the response type for querying x/bank parameters.
 *
 * @generated from protobuf message cosmos.bank.v1beta1.QueryParamsResponse
 */
export interface QueryParamsResponse {
    /**
     * @generated from protobuf field: cosmos.bank.v1beta1.Params params = 1;
     */
    params?: Params;
}
/**
 * QueryDenomsMetadataRequest is the request type for the Query/DenomsMetadata RPC method.
 *
 * @generated from protobuf message cosmos.bank.v1beta1.QueryDenomsMetadataRequest
 */
export interface QueryDenomsMetadataRequest {
    /**
     * pagination defines an optional pagination for the request.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageRequest pagination = 1;
     */
    pagination?: PageRequest;
}
/**
 * QueryDenomsMetadataResponse is the response type for the Query/DenomsMetadata RPC
 * method.
 *
 * @generated from protobuf message cosmos.bank.v1beta1.QueryDenomsMetadataResponse
 */
export interface QueryDenomsMetadataResponse {
    /**
     * metadata provides the client information for all the registered tokens.
     *
     * @generated from protobuf field: repeated cosmos.bank.v1beta1.Metadata metadatas = 1;
     */
    metadatas: Metadata[];
    /**
     * pagination defines the pagination in the response.
     *
     * @generated from protobuf field: cosmos.base.query.v1beta1.PageResponse pagination = 2;
     */
    pagination?: PageResponse;
}
/**
 * QueryDenomMetadataRequest is the request type for the Query/DenomMetadata RPC method.
 *
 * @generated from protobuf message cosmos.bank.v1beta1.QueryDenomMetadataRequest
 */
export interface QueryDenomMetadataRequest {
    /**
     * denom is the coin denom to query the metadata for.
     *
     * @generated from protobuf field: string denom = 1;
     */
    denom: string;
}
/**
 * QueryDenomMetadataResponse is the response type for the Query/DenomMetadata RPC
 * method.
 *
 * @generated from protobuf message cosmos.bank.v1beta1.QueryDenomMetadataResponse
 */
export interface QueryDenomMetadataResponse {
    /**
     * metadata describes and provides all the client information for the requested token.
     *
     * @generated from protobuf field: cosmos.bank.v1beta1.Metadata metadata = 1;
     */
    metadata?: Metadata;
}
declare class QueryBalanceRequest$Type extends MessageType<QueryBalanceRequest> {
    constructor();
    create(value?: PartialMessage<QueryBalanceRequest>): QueryBalanceRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryBalanceRequest): QueryBalanceRequest;
    internalBinaryWrite(message: QueryBalanceRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.bank.v1beta1.QueryBalanceRequest
 */
export declare const QueryBalanceRequest: QueryBalanceRequest$Type;
declare class QueryBalanceResponse$Type extends MessageType<QueryBalanceResponse> {
    constructor();
    create(value?: PartialMessage<QueryBalanceResponse>): QueryBalanceResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryBalanceResponse): QueryBalanceResponse;
    internalBinaryWrite(message: QueryBalanceResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.bank.v1beta1.QueryBalanceResponse
 */
export declare const QueryBalanceResponse: QueryBalanceResponse$Type;
declare class QueryAllBalancesRequest$Type extends MessageType<QueryAllBalancesRequest> {
    constructor();
    create(value?: PartialMessage<QueryAllBalancesRequest>): QueryAllBalancesRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAllBalancesRequest): QueryAllBalancesRequest;
    internalBinaryWrite(message: QueryAllBalancesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.bank.v1beta1.QueryAllBalancesRequest
 */
export declare const QueryAllBalancesRequest: QueryAllBalancesRequest$Type;
declare class QueryAllBalancesResponse$Type extends MessageType<QueryAllBalancesResponse> {
    constructor();
    create(value?: PartialMessage<QueryAllBalancesResponse>): QueryAllBalancesResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryAllBalancesResponse): QueryAllBalancesResponse;
    internalBinaryWrite(message: QueryAllBalancesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.bank.v1beta1.QueryAllBalancesResponse
 */
export declare const QueryAllBalancesResponse: QueryAllBalancesResponse$Type;
declare class QuerySpendableBalancesRequest$Type extends MessageType<QuerySpendableBalancesRequest> {
    constructor();
    create(value?: PartialMessage<QuerySpendableBalancesRequest>): QuerySpendableBalancesRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuerySpendableBalancesRequest): QuerySpendableBalancesRequest;
    internalBinaryWrite(message: QuerySpendableBalancesRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.bank.v1beta1.QuerySpendableBalancesRequest
 */
export declare const QuerySpendableBalancesRequest: QuerySpendableBalancesRequest$Type;
declare class QuerySpendableBalancesResponse$Type extends MessageType<QuerySpendableBalancesResponse> {
    constructor();
    create(value?: PartialMessage<QuerySpendableBalancesResponse>): QuerySpendableBalancesResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuerySpendableBalancesResponse): QuerySpendableBalancesResponse;
    internalBinaryWrite(message: QuerySpendableBalancesResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.bank.v1beta1.QuerySpendableBalancesResponse
 */
export declare const QuerySpendableBalancesResponse: QuerySpendableBalancesResponse$Type;
declare class QueryTotalSupplyRequest$Type extends MessageType<QueryTotalSupplyRequest> {
    constructor();
    create(value?: PartialMessage<QueryTotalSupplyRequest>): QueryTotalSupplyRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryTotalSupplyRequest): QueryTotalSupplyRequest;
    internalBinaryWrite(message: QueryTotalSupplyRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.bank.v1beta1.QueryTotalSupplyRequest
 */
export declare const QueryTotalSupplyRequest: QueryTotalSupplyRequest$Type;
declare class QueryTotalSupplyResponse$Type extends MessageType<QueryTotalSupplyResponse> {
    constructor();
    create(value?: PartialMessage<QueryTotalSupplyResponse>): QueryTotalSupplyResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryTotalSupplyResponse): QueryTotalSupplyResponse;
    internalBinaryWrite(message: QueryTotalSupplyResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.bank.v1beta1.QueryTotalSupplyResponse
 */
export declare const QueryTotalSupplyResponse: QueryTotalSupplyResponse$Type;
declare class QuerySupplyOfRequest$Type extends MessageType<QuerySupplyOfRequest> {
    constructor();
    create(value?: PartialMessage<QuerySupplyOfRequest>): QuerySupplyOfRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuerySupplyOfRequest): QuerySupplyOfRequest;
    internalBinaryWrite(message: QuerySupplyOfRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.bank.v1beta1.QuerySupplyOfRequest
 */
export declare const QuerySupplyOfRequest: QuerySupplyOfRequest$Type;
declare class QuerySupplyOfResponse$Type extends MessageType<QuerySupplyOfResponse> {
    constructor();
    create(value?: PartialMessage<QuerySupplyOfResponse>): QuerySupplyOfResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuerySupplyOfResponse): QuerySupplyOfResponse;
    internalBinaryWrite(message: QuerySupplyOfResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.bank.v1beta1.QuerySupplyOfResponse
 */
export declare const QuerySupplyOfResponse: QuerySupplyOfResponse$Type;
declare class QueryParamsRequest$Type extends MessageType<QueryParamsRequest> {
    constructor();
    create(value?: PartialMessage<QueryParamsRequest>): QueryParamsRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryParamsRequest): QueryParamsRequest;
    internalBinaryWrite(message: QueryParamsRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.bank.v1beta1.QueryParamsRequest
 */
export declare const QueryParamsRequest: QueryParamsRequest$Type;
declare class QueryParamsResponse$Type extends MessageType<QueryParamsResponse> {
    constructor();
    create(value?: PartialMessage<QueryParamsResponse>): QueryParamsResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryParamsResponse): QueryParamsResponse;
    internalBinaryWrite(message: QueryParamsResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.bank.v1beta1.QueryParamsResponse
 */
export declare const QueryParamsResponse: QueryParamsResponse$Type;
declare class QueryDenomsMetadataRequest$Type extends MessageType<QueryDenomsMetadataRequest> {
    constructor();
    create(value?: PartialMessage<QueryDenomsMetadataRequest>): QueryDenomsMetadataRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDenomsMetadataRequest): QueryDenomsMetadataRequest;
    internalBinaryWrite(message: QueryDenomsMetadataRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.bank.v1beta1.QueryDenomsMetadataRequest
 */
export declare const QueryDenomsMetadataRequest: QueryDenomsMetadataRequest$Type;
declare class QueryDenomsMetadataResponse$Type extends MessageType<QueryDenomsMetadataResponse> {
    constructor();
    create(value?: PartialMessage<QueryDenomsMetadataResponse>): QueryDenomsMetadataResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDenomsMetadataResponse): QueryDenomsMetadataResponse;
    internalBinaryWrite(message: QueryDenomsMetadataResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.bank.v1beta1.QueryDenomsMetadataResponse
 */
export declare const QueryDenomsMetadataResponse: QueryDenomsMetadataResponse$Type;
declare class QueryDenomMetadataRequest$Type extends MessageType<QueryDenomMetadataRequest> {
    constructor();
    create(value?: PartialMessage<QueryDenomMetadataRequest>): QueryDenomMetadataRequest;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDenomMetadataRequest): QueryDenomMetadataRequest;
    internalBinaryWrite(message: QueryDenomMetadataRequest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.bank.v1beta1.QueryDenomMetadataRequest
 */
export declare const QueryDenomMetadataRequest: QueryDenomMetadataRequest$Type;
declare class QueryDenomMetadataResponse$Type extends MessageType<QueryDenomMetadataResponse> {
    constructor();
    create(value?: PartialMessage<QueryDenomMetadataResponse>): QueryDenomMetadataResponse;
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryDenomMetadataResponse): QueryDenomMetadataResponse;
    internalBinaryWrite(message: QueryDenomMetadataResponse, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter;
}
/**
 * @generated MessageType for protobuf message cosmos.bank.v1beta1.QueryDenomMetadataResponse
 */
export declare const QueryDenomMetadataResponse: QueryDenomMetadataResponse$Type;
/**
 * @generated ServiceType for protobuf service cosmos.bank.v1beta1.Query
 */
export declare const Query: any;
export {};
