// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.2
//   protoc               v5.29.3
// source: scalar/auxiliary/v1beta1/service.proto

/* eslint-disable */
import _m0 from "protobufjs/minimal";
import { BatchRequest, BatchResponse } from "./tx";

export const protobufPackage = "scalar.auxiliary.v1beta1";

/** Msg defines the nexus Msg service. */
export interface MsgService {
  Batch(request: BatchRequest): Promise<BatchResponse>;
}

export const MsgServiceServiceName = "scalar.auxiliary.v1beta1.MsgService";
export class MsgServiceClientImpl implements MsgService {
  private readonly rpc: Rpc;
  private readonly service: string;
  constructor(rpc: Rpc, opts?: { service?: string }) {
    this.service = opts?.service || MsgServiceServiceName;
    this.rpc = rpc;
    this.Batch = this.Batch.bind(this);
  }
  Batch(request: BatchRequest): Promise<BatchResponse> {
    const data = BatchRequest.encode(request).finish();
    const promise = this.rpc.request(this.service, "Batch", data);
    return promise.then((data) =>
      BatchResponse.decode(_m0.Reader.create(data)),
    );
  }
}

interface Rpc {
  request(
    service: string,
    method: string,
    data: Uint8Array,
  ): Promise<Uint8Array>;
}
